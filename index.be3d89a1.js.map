{"mappings":"A,IMAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,ECAA,ECAAiY,EAAA,EAAA,ECAAA,EAAAC,EAAA,EwBAA,ECAA,EAAA,E,E,O,c,C,E,O,gB,C,E,O,yB,C,E,O,qB,C,E,O,S,C,c,C,E,O,S,C,oB,C,E,C,E,E,I,K,E,E,E,E,C,W,C,E,a,C,E,S,C,E,M,C,G,C,C,E,C,E,E,C,E,K,I,I,K,G,C,E,C,C,E,E,I,C,E,I,E,E,E,C,C,E,E,G,E,I,I,K,E,G,E,I,C,E,I,E,E,E,C,C,E,E,O,C,E,E,C,E,I,E,E,E,I,E,C,E,E,K,G,C,E,G,C,G,M,U,U,E,E,E,C,E,E,K,E,E,E,2B,E,E,I,C,G,E,G,C,I,E,C,E,E,K,G,E,G,C,G,M,U,oD,C,a,Q,E,G,C,G,E,G,C,E,E,E,E,C,E,E,E,K,E,E,E,0B,E,E,I,C,E,G,E,G,C,E,G,G,E,C,E,E,K,E,E,E,yB,G,E,C,E,E,I,I,Q,C,E,K,I,E,A,I,G,C,E,E,I,C,G,C,M,E,C,E,E,C,E,E,A,I,G,C,E,E,K,C,G,C,M,E,C,E,E,C,E,E,A,G,E,I,C,E,E,K,E,Q,O,C,E,K,E,I,C,E,G,E,A,C,E,E,K,C,E,E,E,I,G,G/BKO,SAAS,EAAc,CAAA,EAC5B,IAAM,EAAS,EAAM,MAAA,CAAO,AAAC,GAAoC,CAAC,CAAC,GAQnE,OAPA,EAAO,MAAA,CAAO,CAAC,EAAG,KAChB,IAAM,EAAO,WAAY,EAAI,EAAE,MAAA,CAAS,EAClC,EAAQ,UAAW,EAAI,EAAE,KAAA,CAAQ,EAEvC,OADA,EAAK,OAAA,CAAQ,GACN,CACT,GAEO,KACL,EAAO,MAAA,CAAO,CAAC,EAAG,KAChB,IAAM,EAAO,WAAY,EAAI,EAAE,MAAA,CAAS,EAClC,EAAQ,UAAW,EAAI,EAAE,KAAA,CAAQ,EAEvC,OADA,EAAK,UAAA,CAAW,GACT,CACT,EACF,CACF,CEpBO,SAAS,EAAc,CAAA,EAC5B,OAAQ,EAAM,EAAO,KACvB,CCkBO,IAAM,EAAN,MAYL,YACkB,CAAA,CAChB,CAAA,CACA,KArCJ,EAAA,EAAA,CAmCoB,CAAA,IAAA,CAAA,OAAA,CAAA,EATlB,EAAA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","sources":["<anon>","app.js","node_modules/smplr/dist/index.mjs","node_modules/smplr/src/player/connect.ts","node_modules/smplr/src/player/signals.ts","node_modules/smplr/src/player/volume.ts","node_modules/smplr/src/player/channel.ts","node_modules/smplr/src/player/sorted-queue.ts","node_modules/smplr/src/player/queued-player.ts","node_modules/smplr/src/player/sample-player.ts","node_modules/smplr/src/player/default-player.ts","node_modules/smplr/src/player/load-audio.ts","node_modules/smplr/src/storage.ts","node_modules/smplr/src/drum-machine/dm-instrument.ts","node_modules/smplr/src/drum-machine/drum-machine.ts","node_modules/smplr/src/player/midi.ts","node_modules/smplr/src/sfz/sfz-load.ts","node_modules/smplr/src/sfz/sfz-regions.ts","node_modules/smplr/src/sfz/sfz-sampler.ts","node_modules/smplr/src/tremolo.ts","node_modules/smplr/src/electric-piano.ts","node_modules/smplr/src/player/layers.ts","node_modules/smplr/src/player/region-player.ts","node_modules/smplr/src/sfz2.ts","node_modules/smplr/src/versilian.ts","node_modules/smplr/src/mallet.ts","node_modules/smplr/src/mellotron.ts","node_modules/smplr/src/reverb/processor.min.ts","node_modules/smplr/src/reverb/reverb.ts","node_modules/smplr/src/sampler.ts","node_modules/smplr/src/smolken.ts","node_modules/smplr/src/soundfont/soundfont-instrument.ts","node_modules/smplr/src/soundfont/soundfont-loops.ts","node_modules/smplr/src/soundfont/soundfont.ts","node_modules/smplr/src/splendid-grand-piano.ts"],"sourcesContent":["var $0d19688bebdb26f8$var$__defProp = Object.defineProperty;\nvar $0d19688bebdb26f8$var$__defProps = Object.defineProperties;\nvar $0d19688bebdb26f8$var$__getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar $0d19688bebdb26f8$var$__getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar $0d19688bebdb26f8$var$__hasOwnProp = Object.prototype.hasOwnProperty;\nvar $0d19688bebdb26f8$var$__propIsEnum = Object.prototype.propertyIsEnumerable;\nvar $0d19688bebdb26f8$var$__defNormalProp = (obj, key, value)=>key in obj ? $0d19688bebdb26f8$var$__defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: value\n    }) : obj[key] = value;\nvar $0d19688bebdb26f8$var$__spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if ($0d19688bebdb26f8$var$__hasOwnProp.call(b, prop)) $0d19688bebdb26f8$var$__defNormalProp(a, prop, b[prop]);\n    if ($0d19688bebdb26f8$var$__getOwnPropSymbols) {\n        for (var prop of $0d19688bebdb26f8$var$__getOwnPropSymbols(b))if ($0d19688bebdb26f8$var$__propIsEnum.call(b, prop)) $0d19688bebdb26f8$var$__defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar $0d19688bebdb26f8$var$__spreadProps = (a, b)=>$0d19688bebdb26f8$var$__defProps(a, $0d19688bebdb26f8$var$__getOwnPropDescs(b));\nvar $0d19688bebdb26f8$var$__accessCheck = (obj, member, msg)=>{\n    if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar $0d19688bebdb26f8$var$__privateGet = (obj, member, getter)=>{\n    $0d19688bebdb26f8$var$__accessCheck(obj, member, \"read from private field\");\n    return getter ? getter.call(obj) : member.get(obj);\n};\nvar $0d19688bebdb26f8$var$__privateAdd = (obj, member, value)=>{\n    if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar $0d19688bebdb26f8$var$__privateSet = (obj, member, value, setter)=>{\n    $0d19688bebdb26f8$var$__accessCheck(obj, member, \"write to private field\");\n    setter ? setter.call(obj, value) : member.set(obj, value);\n    return value;\n};\nvar $0d19688bebdb26f8$var$__privateMethod = (obj, member, method)=>{\n    $0d19688bebdb26f8$var$__accessCheck(obj, member, \"access private method\");\n    return method;\n};\nvar $0d19688bebdb26f8$var$__async = (__this, __arguments, generator)=>{\n    return new Promise((resolve, reject)=>{\n        var fulfilled = (value)=>{\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var rejected = (value)=>{\n            try {\n                step(generator.throw(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var step = (x)=>x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n        step((generator = generator.apply(__this, __arguments)).next());\n    });\n};\n// src/player/connect.ts\nfunction $0d19688bebdb26f8$var$connectSerial(nodes) {\n    const _nodes = nodes.filter((x)=>!!x);\n    _nodes.reduce((a, b)=>{\n        const left = \"output\" in a ? a.output : a;\n        const right = \"input\" in b ? b.input : b;\n        left.connect(right);\n        return b;\n    });\n    return ()=>{\n        _nodes.reduce((a, b)=>{\n            const left = \"output\" in a ? a.output : a;\n            const right = \"input\" in b ? b.input : b;\n            left.disconnect(right);\n            return b;\n        });\n    };\n}\n// src/player/signals.ts\nfunction $0d19688bebdb26f8$var$createControl(initialValue) {\n    let current = initialValue;\n    const listeners = /* @__PURE__ */ new Set();\n    function subscribe(listener) {\n        listeners.add(listener);\n        listener(current);\n        return ()=>{\n            listeners.delete(listener);\n        };\n    }\n    function set(value) {\n        current = value;\n        listeners.forEach((listener)=>listener(current));\n    }\n    function get() {\n        return current;\n    }\n    return {\n        subscribe: subscribe,\n        set: set,\n        get: get\n    };\n}\nfunction $0d19688bebdb26f8$var$createTrigger() {\n    const listeners = /* @__PURE__ */ new Set();\n    function subscribe(listener) {\n        listeners.add(listener);\n        return ()=>{\n            listeners.delete(listener);\n        };\n    }\n    function trigger(value) {\n        listeners.forEach((listener)=>listener(value));\n    }\n    return {\n        subscribe: subscribe,\n        trigger: trigger\n    };\n}\nfunction $0d19688bebdb26f8$var$unsubscribeAll(unsubscribe) {\n    let done = false;\n    return ()=>{\n        if (done) return;\n        done = true;\n        unsubscribe.forEach((cb)=>cb == null ? void 0 : cb());\n    };\n}\n// src/player/volume.ts\nfunction $0d19688bebdb26f8$var$midiVelToGain(vel) {\n    return vel * vel / 16129;\n}\nfunction $0d19688bebdb26f8$var$dbToGain(decibels) {\n    return Math.pow(10, decibels / 20);\n}\n// src/player/channel.ts\nvar $0d19688bebdb26f8$var$_volume, $0d19688bebdb26f8$var$_sends, $0d19688bebdb26f8$var$_inserts, $0d19688bebdb26f8$var$_disconnect, $0d19688bebdb26f8$var$_unsubscribe, $0d19688bebdb26f8$var$_config, $0d19688bebdb26f8$var$_disconnected;\nvar $0d19688bebdb26f8$var$Channel = class {\n    constructor(context, options){\n        this.context = context;\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_volume, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_sends, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_inserts, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_disconnect, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_unsubscribe, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_config, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_disconnected, false);\n        var _a, _b, _c;\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_config, {\n            destination: (_a = options == null ? void 0 : options.destination) != null ? _a : context.destination,\n            volume: (_b = options == null ? void 0 : options.volume) != null ? _b : 100,\n            volumeToGain: (_c = options == null ? void 0 : options.volumeToGain) != null ? _c : $0d19688bebdb26f8$var$midiVelToGain\n        });\n        this.input = context.createGain();\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_volume, context.createGain());\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_disconnect, $0d19688bebdb26f8$var$connectSerial([\n            this.input,\n            $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_volume),\n            $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_config).destination\n        ]));\n        const volume = $0d19688bebdb26f8$var$createControl($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_config).volume);\n        this.setVolume = volume.set;\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_unsubscribe, volume.subscribe((volume2)=>{\n            $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_volume).gain.value = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_config).volumeToGain(volume2);\n        }));\n    }\n    addInsert(effect) {\n        var _a;\n        if ($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_disconnected)) throw Error(\"Can't add insert to disconnected channel\");\n        (_a = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_inserts)) != null ? _a : $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_inserts, []);\n        $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_inserts).push(effect);\n        $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_disconnect).call(this);\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_disconnect, $0d19688bebdb26f8$var$connectSerial([\n            this.input,\n            ...$0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_inserts),\n            $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_volume),\n            $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_config).destination\n        ]));\n    }\n    addEffect(name, effect, mixValue) {\n        var _a;\n        if ($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_disconnected)) throw Error(\"Can't add effect to disconnected channel\");\n        const mix = this.context.createGain();\n        mix.gain.value = mixValue;\n        const input = \"input\" in effect ? effect.input : effect;\n        const disconnect = $0d19688bebdb26f8$var$connectSerial([\n            $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_volume),\n            mix,\n            input\n        ]);\n        (_a = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_sends)) != null ? _a : $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_sends, []);\n        $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_sends).push({\n            name: name,\n            mix: mix,\n            disconnect: disconnect\n        });\n    }\n    sendEffect(name, mix) {\n        var _a;\n        if ($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_disconnected)) throw Error(\"Can't send effect to disconnected channel\");\n        const send = (_a = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_sends)) == null ? void 0 : _a.find((send2)=>send2.name === name);\n        if (send) send.mix.gain.value = mix;\n        else console.warn(\"Send bus not found: \" + name);\n    }\n    disconnect() {\n        var _a;\n        if ($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_disconnected)) return;\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_disconnected, true);\n        $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_disconnect).call(this);\n        $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_unsubscribe).call(this);\n        (_a = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_sends)) == null || _a.forEach((send)=>send.disconnect());\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_sends, void 0);\n    }\n};\n$0d19688bebdb26f8$var$_volume = new WeakMap();\n$0d19688bebdb26f8$var$_sends = new WeakMap();\n$0d19688bebdb26f8$var$_inserts = new WeakMap();\n$0d19688bebdb26f8$var$_disconnect = new WeakMap();\n$0d19688bebdb26f8$var$_unsubscribe = new WeakMap();\n$0d19688bebdb26f8$var$_config = new WeakMap();\n$0d19688bebdb26f8$var$_disconnected = new WeakMap();\n// src/player/sorted-queue.ts\nvar $0d19688bebdb26f8$var$_items;\nvar $0d19688bebdb26f8$var$SortedQueue = class {\n    constructor(compare){\n        this.compare = compare;\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_items, []);\n    }\n    push(item) {\n        const len = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_items).length;\n        let left = 0;\n        let right = len - 1;\n        let index = len;\n        while(left <= right){\n            const mid = Math.floor((left + right) / 2);\n            if (this.compare(item, $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_items)[mid]) < 0) {\n                index = mid;\n                right = mid - 1;\n            } else left = mid + 1;\n        }\n        $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_items).splice(index, 0, item);\n    }\n    pop() {\n        return $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_items).shift();\n    }\n    peek() {\n        return $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_items)[0];\n    }\n    removeAll(predicate) {\n        const len = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_items).length;\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_items, $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_items).filter((item)=>!predicate(item)));\n        return $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_items).length !== len;\n    }\n    clear() {\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_items, []);\n    }\n    size() {\n        return $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_items).length;\n    }\n};\n$0d19688bebdb26f8$var$_items = new WeakMap();\n// src/player/queued-player.ts\nfunction $0d19688bebdb26f8$var$compose(a, b) {\n    return a && b ? (x)=>{\n        a(x);\n        b(x);\n    } : a != null ? a : b;\n}\nfunction $0d19688bebdb26f8$var$getConfig(options) {\n    var _a, _b;\n    const config = {\n        scheduleLookaheadMs: (_a = options.scheduleLookaheadMs) != null ? _a : 200,\n        scheduleIntervalMs: (_b = options.scheduleIntervalMs) != null ? _b : 50,\n        onStart: options.onStart,\n        onEnded: options.onEnded\n    };\n    if (config.scheduleLookaheadMs < 1) throw Error(\"scheduleLookaheadMs must be greater than 0\");\n    if (config.scheduleIntervalMs < 1) throw Error(\"scheduleIntervalMs must be greater than 0\");\n    if (config.scheduleLookaheadMs < config.scheduleIntervalMs) throw Error(\"scheduleLookaheadMs must be greater than scheduleIntervalMs\");\n    return config;\n}\nvar $0d19688bebdb26f8$var$_config2, $0d19688bebdb26f8$var$_queue, $0d19688bebdb26f8$var$_intervalId;\nvar $0d19688bebdb26f8$var$QueuedPlayer = class {\n    constructor(player, options = {}){\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_config2, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_queue, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_intervalId, void 0);\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_config2, $0d19688bebdb26f8$var$getConfig(options));\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_queue, new $0d19688bebdb26f8$var$SortedQueue((a, b)=>a.time - b.time));\n        this.player = player;\n    }\n    get context() {\n        return this.player.context;\n    }\n    get buffers() {\n        return this.player.buffers;\n    }\n    get isRunning() {\n        return $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_intervalId) !== void 0;\n    }\n    start(sample) {\n        var _a;\n        const context = this.player.context;\n        const now = context.currentTime;\n        const startAt = (_a = sample.time) != null ? _a : now;\n        const lookAhead = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_config2).scheduleLookaheadMs / 1e3;\n        sample.onStart = $0d19688bebdb26f8$var$compose(sample.onStart, $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_config2).onStart);\n        sample.onEnded = $0d19688bebdb26f8$var$compose(sample.onEnded, $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_config2).onEnded);\n        if (startAt < now + lookAhead) return this.player.start(sample);\n        $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_queue).push($0d19688bebdb26f8$var$__spreadProps($0d19688bebdb26f8$var$__spreadValues({}, sample), {\n            time: startAt\n        }));\n        if (!$0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_intervalId)) $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_intervalId, setInterval(()=>{\n            const nextTick = context.currentTime + lookAhead;\n            while($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_queue).size() && $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_queue).peek().time <= nextTick){\n                const sample2 = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_queue).pop();\n                if (sample2) this.player.start(sample2);\n            }\n            if (!$0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_queue).size()) {\n                clearInterval($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_intervalId));\n                $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_intervalId, void 0);\n            }\n        }, $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_config2).scheduleIntervalMs));\n        return (time)=>{\n            if (!time || time < startAt) {\n                if (!$0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_queue).removeAll((item)=>item === sample)) this.player.stop($0d19688bebdb26f8$var$__spreadProps($0d19688bebdb26f8$var$__spreadValues({}, sample), {\n                    time: time\n                }));\n            } else this.player.stop($0d19688bebdb26f8$var$__spreadProps($0d19688bebdb26f8$var$__spreadValues({}, sample), {\n                time: time\n            }));\n        };\n    }\n    stop(sample) {\n        var _a;\n        this.player.stop(sample);\n        if (!sample) {\n            $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_queue).clear();\n            return;\n        }\n        const time = (_a = sample == null ? void 0 : sample.time) != null ? _a : 0;\n        const stopId = sample == null ? void 0 : sample.stopId;\n        if (stopId) $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_queue).removeAll((item)=>item.time >= time && item.stopId ? item.stopId === stopId : item.note === stopId);\n        else $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_queue).removeAll((item)=>item.time >= time);\n    }\n    disconnect() {\n        this.player.disconnect();\n    }\n};\n$0d19688bebdb26f8$var$_config2 = new WeakMap();\n$0d19688bebdb26f8$var$_queue = new WeakMap();\n$0d19688bebdb26f8$var$_intervalId = new WeakMap();\n// src/player/sample-player.ts\nvar $0d19688bebdb26f8$var$_config3, $0d19688bebdb26f8$var$_disconnected2, $0d19688bebdb26f8$var$_stop;\nvar $0d19688bebdb26f8$var$SamplePlayer = class {\n    constructor(context, options){\n        this.context = context;\n        this.options = options;\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_config3, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_disconnected2, false);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_stop, void 0);\n        var _a, _b;\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_config3, {\n            velocityToGain: (_a = options.velocityToGain) != null ? _a : $0d19688bebdb26f8$var$midiVelToGain,\n            destination: (_b = options.destination) != null ? _b : context.destination\n        });\n        this.buffers = {};\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_stop, $0d19688bebdb26f8$var$createTrigger());\n    }\n    start(sample) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;\n        if ($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_disconnected2)) throw new Error(\"Can't start a sample on disconnected player\");\n        const context = this.context;\n        const buffer = sample.name && this.buffers[sample.name] || this.buffers[sample.note];\n        if (!buffer) {\n            console.warn(`Sample not found: '${sample.note}'`);\n            return ()=>void 0;\n        }\n        const source = context.createBufferSource();\n        source.buffer = buffer;\n        const cents = (_b = (_a = sample.detune) != null ? _a : this.options.detune) != null ? _b : 0;\n        if (source.detune) source.detune.value = cents;\n        else if (source.playbackRate) source.playbackRate.value = Math.pow(2, cents / 1200);\n        const lpfCutoffHz = (_c = sample.lpfCutoffHz) != null ? _c : this.options.lpfCutoffHz;\n        const lpf = lpfCutoffHz ? context.createBiquadFilter() : void 0;\n        if (lpfCutoffHz && lpf) {\n            lpf.type = \"lowpass\";\n            lpf.frequency.value = lpfCutoffHz;\n        }\n        const volume = context.createGain();\n        const velocity = (_e = (_d = sample.velocity) != null ? _d : this.options.velocity) != null ? _e : 100;\n        volume.gain.value = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_config3).velocityToGain(velocity);\n        const loop = (_f = sample.loop) != null ? _f : this.options.loop;\n        if (loop) {\n            source.loop = true;\n            source.loopStart = (_g = sample.loopStart) != null ? _g : 0;\n            source.loopEnd = (_h = sample.loopEnd) != null ? _h : buffer.duration;\n        }\n        const decayTime = (_i = sample.decayTime) != null ? _i : this.options.decayTime;\n        const [decay, startDecay] = $0d19688bebdb26f8$var$createDecayEnvelope(context, decayTime);\n        function stop(time) {\n            time != null ? time : time = context.currentTime;\n            if (time <= startAt) source.stop(time);\n            else {\n                const stopAt = startDecay(time);\n                source.stop(stopAt);\n            }\n        }\n        const gainCompensation = sample.gainOffset ? context.createGain() : void 0;\n        if (gainCompensation && sample.gainOffset) gainCompensation.gain.value = sample.gainOffset;\n        const stopId = (_j = sample.stopId) != null ? _j : sample.note;\n        const cleanup = $0d19688bebdb26f8$var$unsubscribeAll([\n            $0d19688bebdb26f8$var$connectSerial([\n                source,\n                lpf,\n                volume,\n                decay,\n                gainCompensation,\n                $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_config3).destination\n            ]),\n            (_k = sample.stop) == null ? void 0 : _k.call(sample, stop),\n            $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_stop).subscribe((event)=>{\n                if (!event || event.stopId === void 0 || event.stopId === stopId) stop(event == null ? void 0 : event.time);\n            })\n        ]);\n        source.onended = ()=>{\n            var _a2;\n            cleanup();\n            (_a2 = sample.onEnded) == null || _a2.call(sample, sample);\n        };\n        (_l = sample.onStart) == null || _l.call(sample, sample);\n        const startAt = Math.max((_m = sample.time) != null ? _m : 0, context.currentTime);\n        source.start(sample.time);\n        let duration = (_n = sample.duration) != null ? _n : buffer.duration;\n        if (typeof sample.duration == \"number\") stop(startAt + duration);\n        return stop;\n    }\n    stop(sample) {\n        $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_stop).trigger(sample);\n    }\n    disconnect() {\n        if ($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_disconnected2)) return;\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_disconnected2, true);\n        this.stop();\n        Object.keys(this.buffers).forEach((key)=>{\n            delete this.buffers[key];\n        });\n    }\n    get connected() {\n        return !$0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_disconnected2);\n    }\n};\n$0d19688bebdb26f8$var$_config3 = new WeakMap();\n$0d19688bebdb26f8$var$_disconnected2 = new WeakMap();\n$0d19688bebdb26f8$var$_stop = new WeakMap();\nfunction $0d19688bebdb26f8$var$createDecayEnvelope(context, envelopeTime = 0.2) {\n    let stopAt = 0;\n    const envelope = context.createGain();\n    envelope.gain.value = 1;\n    function start(time) {\n        if (stopAt) return stopAt;\n        envelope.gain.cancelScheduledValues(time);\n        const envelopeAt = time || context.currentTime;\n        stopAt = envelopeAt + envelopeTime;\n        envelope.gain.setValueAtTime(1, envelopeAt);\n        envelope.gain.linearRampToValueAtTime(0, stopAt);\n        return stopAt;\n    }\n    return [\n        envelope,\n        start\n    ];\n}\n// src/player/default-player.ts\nvar $0d19688bebdb26f8$var$DefaultPlayer = class {\n    constructor(context, options){\n        this.context = context;\n        const channel = new $0d19688bebdb26f8$var$Channel(context, options);\n        this.player = new $0d19688bebdb26f8$var$QueuedPlayer(new $0d19688bebdb26f8$var$SamplePlayer(context, $0d19688bebdb26f8$var$__spreadProps($0d19688bebdb26f8$var$__spreadValues({}, options), {\n            destination: channel.input\n        })), options);\n        this.output = channel;\n    }\n    get buffers() {\n        return this.player.buffers;\n    }\n    start(sample) {\n        return this.player.start(sample);\n    }\n    stop(sample) {\n        this.player.stop(typeof sample === \"object\" ? sample : sample !== void 0 ? {\n            stopId: sample\n        } : void 0);\n    }\n    disconnect() {\n        this.output.disconnect();\n        this.player.disconnect();\n    }\n};\n// src/player/load-audio.ts\nfunction $0d19688bebdb26f8$var$loadAudioBuffer(context, url, storage) {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        url = url.replace(/#/g, \"%23\").replace(/([^:]\\/)\\/+/g, \"$1\");\n        const response = yield storage.fetch(url);\n        if (response.status !== 200) {\n            console.warn(\"Error loading buffer. Invalid status: \", response.status, url);\n            return;\n        }\n        try {\n            const audioData = yield response.arrayBuffer();\n            const buffer = yield context.decodeAudioData(audioData);\n            return buffer;\n        } catch (error) {\n            console.warn(\"Error loading buffer\", error, url);\n        }\n    });\n}\nfunction $0d19688bebdb26f8$var$findFirstSupportedFormat(formats) {\n    if (typeof document === \"undefined\") return null;\n    const audio = document.createElement(\"audio\");\n    for(let i = 0; i < formats.length; i++){\n        const format = formats[i];\n        const canPlay = audio.canPlayType(`audio/${format}`);\n        if (canPlay === \"probably\" || canPlay === \"maybe\") return format;\n        if (format === \"m4a\") {\n            const canPlay2 = audio.canPlayType(`audio/aac`);\n            if (canPlay2 === \"probably\" || canPlay2 === \"maybe\") return format;\n        }\n    }\n    return null;\n}\nfunction $0d19688bebdb26f8$var$getPreferredAudioExtension() {\n    var _a;\n    const format = (_a = $0d19688bebdb26f8$var$findFirstSupportedFormat([\n        \"ogg\",\n        \"m4a\"\n    ])) != null ? _a : \"ogg\";\n    return \".\" + format;\n}\n// src/storage.ts\nvar $0d19688bebdb26f8$export$7fd566d5ad2998a9 = {\n    fetch (url) {\n        return fetch(url);\n    }\n};\nvar $0d19688bebdb26f8$var$_cache, $0d19688bebdb26f8$var$_tryFromCache, $0d19688bebdb26f8$var$tryFromCache_fn, $0d19688bebdb26f8$var$_saveResponse, $0d19688bebdb26f8$var$saveResponse_fn;\nvar $0d19688bebdb26f8$export$2b715f8922748263 = class {\n    constructor(name = \"smplr\"){\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_tryFromCache);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_saveResponse);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_cache, void 0);\n        if (typeof window === \"undefined\" || !(\"caches\" in window)) $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_cache, Promise.reject(\"CacheStorage not supported\"));\n        else $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_cache, caches.open(name));\n    }\n    fetch(url) {\n        return $0d19688bebdb26f8$var$__async(this, null, function*() {\n            const request = new Request(url);\n            try {\n                return yield $0d19688bebdb26f8$var$__privateMethod(this, $0d19688bebdb26f8$var$_tryFromCache, $0d19688bebdb26f8$var$tryFromCache_fn).call(this, request);\n            } catch (err) {\n                const response = yield fetch(request);\n                yield $0d19688bebdb26f8$var$__privateMethod(this, $0d19688bebdb26f8$var$_saveResponse, $0d19688bebdb26f8$var$saveResponse_fn).call(this, request, response);\n                return response;\n            }\n        });\n    }\n};\n$0d19688bebdb26f8$var$_cache = new WeakMap();\n$0d19688bebdb26f8$var$_tryFromCache = new WeakSet();\n$0d19688bebdb26f8$var$tryFromCache_fn = function(request) {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        const cache = yield $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_cache);\n        const response = yield cache.match(request);\n        if (response) return response;\n        else throw Error(\"Not found\");\n    });\n};\n$0d19688bebdb26f8$var$_saveResponse = new WeakSet();\n$0d19688bebdb26f8$var$saveResponse_fn = function(request, response) {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        try {\n            const cache = yield $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_cache);\n            yield cache.put(request, response.clone());\n        } catch (err) {}\n    });\n};\n// src/drum-machine/dm-instrument.ts\nvar $0d19688bebdb26f8$var$EMPTY_INSTRUMENT = {\n    baseUrl: \"\",\n    name: \"\",\n    samples: [],\n    sampleNames: [],\n    nameToSample: {},\n    sampleNameVariations: {}\n};\nfunction $0d19688bebdb26f8$var$fetchDrumMachineInstrument(url, storage) {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        var _a, _b, _c, _d;\n        const res = yield storage.fetch(url);\n        const json = yield res.json();\n        json.baseUrl = url.replace(\"/dm.json\", \"\");\n        json.sampleNames = [];\n        json.nameToSample = {};\n        json.sampleNameVariations = {};\n        for (const sampleSrc of json.samples){\n            const sample = sampleSrc.indexOf(\"/\") !== -1 ? sampleSrc : sampleSrc.replace(\"-\", \"/\");\n            json.nameToSample[sample] = sample;\n            const [base, variation] = sample.split(\"/\");\n            if (!json.sampleNames.includes(base)) json.sampleNames.push(base);\n            (_b = (_a = json.nameToSample)[base]) != null ? _b : _a[base] = sample;\n            (_d = (_c = json.sampleNameVariations)[base]) != null ? _d : _c[base] = [];\n            if (variation) json.sampleNameVariations[base].push(`${base}/${variation}`);\n        }\n        return json;\n    });\n}\n// src/drum-machine/drum-machine.ts\nfunction $0d19688bebdb26f8$export$8b94bfd7008e8f41() {\n    return Object.keys($0d19688bebdb26f8$var$INSTRUMENTS);\n}\nvar $0d19688bebdb26f8$var$INSTRUMENTS = {\n    \"TR-808\": \"https://danigb.github.io/samples/drum-machines/TR-808/dm.json\",\n    \"Casio-RZ1\": \"https://danigb.github.io/samples/drum-machines/Casio-RZ1/dm.json\",\n    \"LM-2\": \"https://danigb.github.io/samples/drum-machines/LM-2/dm.json\",\n    \"MFB-512\": \"https://danigb.github.io/samples/drum-machines/MFB-512/dm.json\",\n    \"Roland CR-8000\": \"https://danigb.github.io/samples/drum-machines/Roland-CR-8000/dm.json\"\n};\nfunction $0d19688bebdb26f8$var$getConfig2(options) {\n    var _a, _b, _c;\n    const config = {\n        instrument: (_a = options == null ? void 0 : options.instrument) != null ? _a : \"TR-808\",\n        storage: (_b = options == null ? void 0 : options.storage) != null ? _b : $0d19688bebdb26f8$export$7fd566d5ad2998a9,\n        url: (_c = options == null ? void 0 : options.url) != null ? _c : \"\"\n    };\n    config.url || (config.url = $0d19688bebdb26f8$var$INSTRUMENTS[config.instrument]);\n    if (!config.url) throw new Error(\"Invalid instrument: \" + config.instrument);\n    return config;\n}\nvar $0d19688bebdb26f8$var$_instrument;\nvar $0d19688bebdb26f8$export$8ceded137695f5d5 = class {\n    constructor(context, options){\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_instrument, $0d19688bebdb26f8$var$EMPTY_INSTRUMENT);\n        const config = $0d19688bebdb26f8$var$getConfig2(options);\n        const instrument = $0d19688bebdb26f8$var$fetchDrumMachineInstrument(config.url, config.storage);\n        this.player = new $0d19688bebdb26f8$var$DefaultPlayer(context, options);\n        this.output = this.player.output;\n        this.load = $0d19688bebdb26f8$var$drumMachineLoader(context, this.player.buffers, instrument, config.storage).then(()=>this);\n        instrument.then((instrument2)=>{\n            $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_instrument, instrument2);\n        });\n    }\n    loaded() {\n        return $0d19688bebdb26f8$var$__async(this, null, function*() {\n            console.warn(\"deprecated: use load instead\");\n            return this.load;\n        });\n    }\n    get sampleNames() {\n        return $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_instrument).sampleNames;\n    }\n    getVariations(name) {\n        var _a;\n        return (_a = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_instrument).sampleNameVariations[name]) != null ? _a : [];\n    }\n    start(sample) {\n        var _a;\n        const sampleName = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_instrument).nameToSample[sample.note];\n        return this.player.start($0d19688bebdb26f8$var$__spreadProps($0d19688bebdb26f8$var$__spreadValues({}, sample), {\n            note: sampleName ? sampleName : sample.note,\n            stopId: (_a = sample.stopId) != null ? _a : sample.note\n        }));\n    }\n    stop(sample) {\n        return this.player.stop(sample);\n    }\n};\n$0d19688bebdb26f8$var$_instrument = new WeakMap();\nfunction $0d19688bebdb26f8$var$drumMachineLoader(context, buffers, instrument, storage) {\n    var _a;\n    const format = (_a = $0d19688bebdb26f8$var$findFirstSupportedFormat([\n        \"ogg\",\n        \"m4a\"\n    ])) != null ? _a : \"ogg\";\n    return instrument.then((data)=>Promise.all(data.samples.map((sample)=>$0d19688bebdb26f8$var$__async(this, null, function*() {\n                const url = `${data.baseUrl}/${sample}.${format}`;\n                const sampleName = sample.indexOf(\"/\") !== -1 ? sample : sample.replace(\"-\", \"/\");\n                const buffer = yield $0d19688bebdb26f8$var$loadAudioBuffer(context, url, storage);\n                if (buffer) buffers[sampleName] = buffer;\n            }))));\n}\n// src/player/midi.ts\nfunction $0d19688bebdb26f8$var$noteNameToMidi(note) {\n    const REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|)(-?\\d+)$/;\n    const m = REGEX.exec(note);\n    if (!m) return;\n    const letter = m[1].toUpperCase();\n    if (!letter) return;\n    const acc = m[2];\n    const alt = acc[0] === \"b\" ? -acc.length : acc.length;\n    const oct = m[3] ? +m[3] : 4;\n    const step = (letter.charCodeAt(0) + 3) % 7;\n    return [\n        0,\n        2,\n        4,\n        5,\n        7,\n        9,\n        11\n    ][step] + alt + 12 * (oct + 1);\n}\nfunction $0d19688bebdb26f8$var$toMidi(note) {\n    return note === void 0 ? void 0 : typeof note === \"number\" ? note : $0d19688bebdb26f8$var$noteNameToMidi(note);\n}\n// src/sfz/sfz-load.ts\nfunction $0d19688bebdb26f8$var$loadSfzBuffers(context, buffers, websfz, storage) {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        websfz.groups.forEach((group)=>{\n            const urls = $0d19688bebdb26f8$var$getWebsfzGroupUrls(websfz, group);\n            return $0d19688bebdb26f8$var$loadAudioBuffers(context, buffers, urls, storage);\n        });\n    });\n}\nfunction $0d19688bebdb26f8$var$SfzInstrumentLoader(instrument, storage) {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        var _a;\n        const isWebsfz = (inst)=>\"global\" in inst;\n        const isSfzInstrument = (inst)=>\"websfzUrl\" in inst;\n        if (typeof instrument === \"string\") return $0d19688bebdb26f8$var$fetchWebSfz(instrument, storage);\n        else if (isWebsfz(instrument)) return instrument;\n        else if (isSfzInstrument(instrument)) {\n            const websfz = yield $0d19688bebdb26f8$var$fetchWebSfz(instrument.websfzUrl, storage);\n            (_a = websfz.meta) != null ? _a : websfz.meta = {};\n            if (instrument.name) websfz.meta.name = instrument.name;\n            if (instrument.baseUrl) websfz.meta.baseUrl = instrument.baseUrl;\n            if (instrument.formats) websfz.meta.formats = instrument.formats;\n            return websfz;\n        } else throw new Error(\"Invalid instrument: \" + JSON.stringify(instrument));\n    });\n}\nfunction $0d19688bebdb26f8$var$loadAudioBuffers(context, buffers, urls, storage) {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        yield Promise.all(Object.keys(urls).map((sampleId)=>$0d19688bebdb26f8$var$__async(this, null, function*() {\n                if (buffers[sampleId]) return;\n                const buffer = yield $0d19688bebdb26f8$var$loadAudioBuffer(context, urls[sampleId], storage);\n                if (buffer) buffers[sampleId] = buffer;\n                return buffers;\n            })));\n    });\n}\nfunction $0d19688bebdb26f8$var$fetchWebSfz(url, storage) {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        try {\n            const response = yield fetch(url);\n            const json = yield response.json();\n            return json;\n        } catch (error) {\n            console.warn(`Can't load SFZ file ${url}`, error);\n            throw new Error(`Can't load SFZ file ${url}`);\n        }\n    });\n}\nfunction $0d19688bebdb26f8$var$getWebsfzGroupUrls(websfz, group) {\n    var _a, _b, _c, _d;\n    const urls = {};\n    const baseUrl = (_a = websfz.meta.baseUrl) != null ? _a : \"\";\n    const format = (_c = $0d19688bebdb26f8$var$findFirstSupportedFormat((_b = websfz.meta.formats) != null ? _b : [])) != null ? _c : \"ogg\";\n    const prefix = (_d = websfz.global[\"default_path\"]) != null ? _d : \"\";\n    if (!group) return urls;\n    return group.regions.reduce((urls2, region)=>{\n        if (region.sample) urls2[region.sample] = `${baseUrl}/${prefix}${region.sample}.${format}`;\n        return urls2;\n    }, urls);\n}\n// src/sfz/sfz-regions.ts\nfunction $0d19688bebdb26f8$var$checkRange(value, low, hi) {\n    const isAboveLow = low === void 0 || value !== void 0 && value >= low;\n    const isBelowHi = hi === void 0 || value !== void 0 && value <= hi;\n    return isAboveLow && isBelowHi;\n}\nfunction $0d19688bebdb26f8$var$findRegions(websfz, note) {\n    const regions = [];\n    for (const group of websfz.groups)if ($0d19688bebdb26f8$var$checkRange(note.midi, group.lokey, group.hikey) && $0d19688bebdb26f8$var$checkRange(note.velocity, group.lovel, group.hivel) && $0d19688bebdb26f8$var$checkRange(note.cc64, group.locc64, group.hicc64)) {\n        for (const region of group.regions)if ($0d19688bebdb26f8$var$checkRange(note.midi, region.lokey, region.hikey) && $0d19688bebdb26f8$var$checkRange(note.velocity, region.lovel, region.hivel) && $0d19688bebdb26f8$var$checkRange(note.cc64, group.locc64, group.hicc64)) regions.push([\n            group,\n            region\n        ]);\n    }\n    return regions;\n}\n// src/sfz/sfz-sampler.ts\nvar $0d19688bebdb26f8$var$EMPTY_WEBSFZ = Object.freeze({\n    meta: {},\n    global: {},\n    groups: []\n});\nvar $0d19688bebdb26f8$var$_websfz, $0d19688bebdb26f8$var$_startLayers, $0d19688bebdb26f8$var$startLayers_fn;\nvar $0d19688bebdb26f8$var$SfzSampler = class {\n    constructor(context, options){\n        this.context = context;\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_startLayers);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_websfz, void 0);\n        this.options = Object.freeze(Object.assign({\n            volume: 100,\n            velocity: 100,\n            storage: $0d19688bebdb26f8$export$7fd566d5ad2998a9,\n            detune: 0,\n            destination: context.destination\n        }, options));\n        this.player = new $0d19688bebdb26f8$var$DefaultPlayer(context, options);\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_websfz, $0d19688bebdb26f8$var$EMPTY_WEBSFZ);\n        this.load = $0d19688bebdb26f8$var$SfzInstrumentLoader(options.instrument, this.options.storage).then((result)=>{\n            $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_websfz, Object.freeze(result));\n            return $0d19688bebdb26f8$var$loadSfzBuffers(context, this.player.buffers, $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_websfz), this.options.storage);\n        }).then(()=>this);\n    }\n    get output() {\n        return this.player.output;\n    }\n    loaded() {\n        return $0d19688bebdb26f8$var$__async(this, null, function*() {\n            console.warn(\"deprecated: use load instead\");\n            return this.load;\n        });\n    }\n    start(sample) {\n        $0d19688bebdb26f8$var$__privateMethod(this, $0d19688bebdb26f8$var$_startLayers, $0d19688bebdb26f8$var$startLayers_fn).call(this, typeof sample === \"object\" ? sample : {\n            note: sample\n        });\n    }\n    stop(sample) {\n        this.player.stop(sample);\n    }\n    disconnect() {\n        this.player.disconnect();\n    }\n};\n$0d19688bebdb26f8$var$_websfz = new WeakMap();\n$0d19688bebdb26f8$var$_startLayers = new WeakSet();\n$0d19688bebdb26f8$var$startLayers_fn = function(sample) {\n    var _a;\n    const midi = $0d19688bebdb26f8$var$toMidi(sample.note);\n    if (midi === void 0) return ()=>void 0;\n    const velocity = (_a = sample.velocity) != null ? _a : this.options.velocity;\n    const regions = $0d19688bebdb26f8$var$findRegions($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_websfz), {\n        midi: midi,\n        velocity: velocity\n    });\n    const onEnded = ()=>{\n        var _a2;\n        (_a2 = sample.onEnded) == null || _a2.call(sample, sample);\n    };\n    const stopAll = regions.map(([group, region])=>{\n        var _a2, _b, _c;\n        let target = (_b = (_a2 = region.pitch_keycenter) != null ? _a2 : region.key) != null ? _b : midi;\n        const detune = (midi - target) * 100;\n        return this.player.start($0d19688bebdb26f8$var$__spreadProps($0d19688bebdb26f8$var$__spreadValues({}, sample), {\n            note: region.sample,\n            decayTime: sample.decayTime,\n            detune: detune + ((_c = sample.detune) != null ? _c : this.options.detune),\n            onEnded: onEnded,\n            stopId: midi\n        }));\n    });\n    switch(stopAll.length){\n        case 0:\n            return ()=>void 0;\n        case 1:\n            return stopAll[0];\n        default:\n            return (time)=>stopAll.forEach((stop)=>stop(time));\n    }\n};\n// src/tremolo.ts\nfunction $0d19688bebdb26f8$var$createTremolo(context, depth) {\n    const input = context.createGain();\n    const output = context.createGain();\n    input.channelCount = 2;\n    input.channelCountMode = \"explicit\";\n    const splitter = context.createChannelSplitter(2);\n    const ampL = context.createGain();\n    const ampR = context.createGain();\n    const merger = context.createChannelMerger(2);\n    const lfoL = context.createOscillator();\n    lfoL.type = \"sine\";\n    lfoL.frequency.value = 1;\n    lfoL.start();\n    const lfoLAmp = context.createGain();\n    const lfoR = context.createOscillator();\n    lfoR.type = \"sine\";\n    lfoR.frequency.value = 1.1;\n    lfoR.start();\n    const lfoRAmp = context.createGain();\n    input.connect(splitter);\n    splitter.connect(ampL, 0);\n    splitter.connect(ampR, 1);\n    ampL.connect(merger, 0, 0);\n    ampR.connect(merger, 0, 1);\n    lfoL.connect(lfoLAmp);\n    lfoLAmp.connect(ampL.gain);\n    lfoR.connect(lfoRAmp);\n    lfoRAmp.connect(ampR.gain);\n    merger.connect(output);\n    const unsubscribe = depth((depth2)=>{\n        lfoLAmp.gain.value = depth2;\n        lfoRAmp.gain.value = depth2;\n    });\n    input.disconnect = ()=>{\n        unsubscribe();\n        lfoL.stop();\n        lfoR.stop();\n        input.disconnect(splitter);\n        splitter.disconnect(ampL, 0);\n        splitter.disconnect(ampR, 1);\n        ampL.disconnect(merger, 0, 0);\n        ampR.disconnect(merger, 0, 1);\n        lfoL.disconnect(ampL);\n        lfoR.disconnect(ampR);\n        merger.disconnect(output);\n    };\n    return {\n        input: input,\n        output: output\n    };\n}\n// src/electric-piano.ts\nfunction $0d19688bebdb26f8$export$aba2f28f2a021086() {\n    return Object.keys($0d19688bebdb26f8$var$INSTRUMENTS2);\n}\nvar $0d19688bebdb26f8$var$INSTRUMENTS2 = {\n    CP80: \"https://danigb.github.io/samples/gs-e-pianos/CP80/cp80.websfz.json\",\n    PianetT: \"https://danigb.github.io/samples/gs-e-pianos/Pianet T/pianet-t.websfz.json\",\n    WurlitzerEP200: \"https://danigb.github.io/samples/gs-e-pianos/Wurlitzer EP200/wurlitzer-ep200.websfz.json\",\n    TX81Z: \"https://danigb.github.io/samples/vcsl/TX81Z/tx81z-fm-piano.websfz.json\"\n};\nvar $0d19688bebdb26f8$export$858a9ef83d65172b = class extends $0d19688bebdb26f8$var$SfzSampler {\n    constructor(context, options){\n        var _a;\n        super(context, $0d19688bebdb26f8$var$__spreadProps($0d19688bebdb26f8$var$__spreadValues({}, options), {\n            instrument: (_a = $0d19688bebdb26f8$var$INSTRUMENTS2[options.instrument]) != null ? _a : options.instrument\n        }));\n        const depth = $0d19688bebdb26f8$var$createControl(0);\n        this.tremolo = {\n            level: (level)=>depth.set($0d19688bebdb26f8$var$midiVelToGain(level))\n        };\n        const tremolo = $0d19688bebdb26f8$var$createTremolo(context, depth.subscribe);\n        this.output.addInsert(tremolo);\n    }\n};\n// src/player/layers.ts\nfunction $0d19688bebdb26f8$var$createEmptyRegionGroup(sample = {}) {\n    return {\n        regions: [],\n        sample: sample\n    };\n}\nfunction $0d19688bebdb26f8$var$findSamplesInRegions(group, sample, seqNumber) {\n    const results = [];\n    const midi = $0d19688bebdb26f8$var$toMidi(sample.note);\n    if (midi === void 0) return results;\n    for (const region of group.regions){\n        const found = $0d19688bebdb26f8$var$findSampleInRegion(midi, seqNumber != null ? seqNumber : 0, sample, region, group.sample);\n        if (found) results.push(found);\n    }\n    return results;\n}\nfunction $0d19688bebdb26f8$var$findFirstSampleInRegions(group, sample, seqNumber) {\n    const midi = $0d19688bebdb26f8$var$toMidi(sample.note);\n    if (midi === void 0) return void 0;\n    for (const region of group.regions){\n        const found = $0d19688bebdb26f8$var$findSampleInRegion(midi, seqNumber != null ? seqNumber : 0, sample, region, group.sample);\n        if (found) return found;\n    }\n    return void 0;\n}\nfunction $0d19688bebdb26f8$var$findSampleInRegion(midi, seqNum, sample, region, defaults) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _A;\n    const matchMidi = midi >= ((_a = region.midiLow) != null ? _a : 0) && midi <= ((_b = region.midiHigh) != null ? _b : 127);\n    if (!matchMidi) return void 0;\n    const matchVelocity = sample.velocity === void 0 || sample.velocity >= ((_c = region.velLow) != null ? _c : 0) && sample.velocity <= ((_d = region.velHigh) != null ? _d : 127);\n    if (!matchVelocity) return void 0;\n    if (region.seqLength) {\n        const currentSeq = seqNum % region.seqLength;\n        const regionIndex = ((_e = region.seqPosition) != null ? _e : 1) - 1;\n        if (currentSeq !== regionIndex) return void 0;\n    }\n    const semitones = midi - region.midiPitch;\n    const velocity = (_f = sample.velocity) != null ? _f : defaults.velocity;\n    const regionGainOffset = region.volume ? $0d19688bebdb26f8$var$dbToGain(region.volume) : 0;\n    const sampleGainOffset = (_h = (_g = sample.gainOffset) != null ? _g : defaults.gainOffset) != null ? _h : 0;\n    return {\n        decayTime: (_k = (_j = sample == null ? void 0 : sample.decayTime) != null ? _j : (_i = region.sample) == null ? void 0 : _i.decayTime) != null ? _k : defaults.decayTime,\n        detune: 100 * (semitones + ((_l = region.tune) != null ? _l : 0)),\n        duration: (_o = (_n = sample == null ? void 0 : sample.duration) != null ? _n : (_m = region.sample) == null ? void 0 : _m.duration) != null ? _o : defaults.duration,\n        gainOffset: sampleGainOffset + regionGainOffset || void 0,\n        loop: (_r = (_q = sample == null ? void 0 : sample.loop) != null ? _q : (_p = region.sample) == null ? void 0 : _p.loop) != null ? _r : defaults.loop,\n        loopEnd: (_u = (_t = sample == null ? void 0 : sample.loopEnd) != null ? _t : (_s = region.sample) == null ? void 0 : _s.loopEnd) != null ? _u : defaults.loopEnd,\n        loopStart: (_x = (_w = sample == null ? void 0 : sample.loopStart) != null ? _w : (_v = region.sample) == null ? void 0 : _v.loopStart) != null ? _x : defaults.loopStart,\n        lpfCutoffHz: (_A = (_z = sample == null ? void 0 : sample.lpfCutoffHz) != null ? _z : (_y = region.sample) == null ? void 0 : _y.lpfCutoffHz) != null ? _A : defaults.lpfCutoffHz,\n        name: region.sampleName,\n        note: midi,\n        onEnded: sample.onEnded,\n        onStart: sample.onStart,\n        stopId: sample.name,\n        time: sample.time,\n        velocity: velocity == void 0 ? void 0 : velocity\n    };\n}\nfunction $0d19688bebdb26f8$var$spreadRegions(regions) {\n    if (regions.length === 0) return [];\n    regions.sort((a, b)=>a.midiPitch - b.midiPitch);\n    regions[0].midiLow = 0;\n    regions[0].midiHigh = 127;\n    if (regions.length === 1) return regions;\n    for(let i = 1; i < regions.length; i++){\n        const prev = regions[i - 1];\n        const curr = regions[i];\n        const mid = Math.floor((prev.midiPitch + curr.midiPitch) / 2);\n        prev.midiHigh = mid;\n        curr.midiLow = mid + 1;\n    }\n    regions[regions.length - 1].midiHigh = 127;\n    return regions;\n}\n// src/player/region-player.ts\nvar $0d19688bebdb26f8$var$RegionPlayer = class {\n    constructor(context, options){\n        this.context = context;\n        this.seqNum = 0;\n        const channel = new $0d19688bebdb26f8$var$Channel(context, options);\n        this.group = $0d19688bebdb26f8$var$createEmptyRegionGroup();\n        this.player = new $0d19688bebdb26f8$var$QueuedPlayer(new $0d19688bebdb26f8$var$SamplePlayer(context, $0d19688bebdb26f8$var$__spreadProps($0d19688bebdb26f8$var$__spreadValues({}, options), {\n            destination: channel.input\n        })), options);\n        this.output = channel;\n    }\n    get buffers() {\n        return this.player.buffers;\n    }\n    start(sample) {\n        const found = $0d19688bebdb26f8$var$findSamplesInRegions(this.group, typeof sample === \"object\" ? sample : {\n            note: sample\n        }, this.seqNum);\n        this.seqNum++;\n        const stopAll = found.map((sample2)=>this.player.start(sample2));\n        return (time)=>stopAll.forEach((stop)=>stop(time));\n    }\n    stop(sample) {\n        if (sample == void 0) {\n            this.player.stop();\n            return;\n        }\n        const toStop = typeof sample === \"object\" ? sample : {\n            stopId: sample\n        };\n        const midi = $0d19688bebdb26f8$var$toMidi(toStop.stopId);\n        if (!midi) return;\n        toStop.stopId = midi;\n        this.player.stop(toStop);\n    }\n    disconnect() {\n        this.output.disconnect();\n        this.player.disconnect();\n    }\n};\n// src/sfz2.ts\nfunction $0d19688bebdb26f8$var$SfzInstrumentLoader2(url, config) {\n    const audioExt = $0d19688bebdb26f8$var$getPreferredAudioExtension();\n    return (context, storage)=>$0d19688bebdb26f8$var$__async(this, null, function*() {\n            const sfz = yield fetch(url).then((res)=>res.text());\n            const errors = $0d19688bebdb26f8$var$sfzToLayer(sfz, config.group);\n            if (errors.length) console.warn(\"Problems converting sfz\", errors);\n            const sampleNames = /* @__PURE__ */ new Set();\n            config.group.regions.forEach((r)=>sampleNames.add(r.sampleName));\n            return Promise.all(Array.from(sampleNames).map((sampleName)=>$0d19688bebdb26f8$var$__async(this, null, function*() {\n                    const sampleUrl = config.urlFromSampleName(sampleName, audioExt);\n                    const buffer = yield $0d19688bebdb26f8$var$loadAudioBuffer(context, sampleUrl, storage);\n                    config.buffers[sampleName] = buffer;\n                })));\n        });\n}\nfunction $0d19688bebdb26f8$var$sfzToLayer(sfz, group) {\n    let mode = \"global\";\n    const tokens = sfz.split(\"\\n\").map($0d19688bebdb26f8$var$parseToken).filter((x)=>!!x);\n    const scope = new $0d19688bebdb26f8$var$Scope();\n    let errors = [];\n    for (const token of tokens)switch(token.type){\n        case \"mode\":\n            errors.push(scope.closeScope(mode, group));\n            mode = token.value;\n            break;\n        case \"prop:num\":\n        case \"prop:str\":\n        case \"prop:num_arr\":\n            scope.push(token.key, token.value);\n            break;\n        case \"unknown\":\n            console.warn(\"Unknown SFZ token\", token.value);\n            break;\n    }\n    closeScope(mode, scope, group);\n    return errors.filter((x)=>!!x);\n    function closeScope(mode2, scope2, group2) {}\n}\nvar $0d19688bebdb26f8$var$MODE_REGEX = /^<([^>]+)>$/;\nvar $0d19688bebdb26f8$var$PROP_NUM_REGEX = /^([^=]+)=([-\\.\\d]+)$/;\nvar $0d19688bebdb26f8$var$PROP_STR_REGEX = /^([^=]+)=(.+)$/;\nvar $0d19688bebdb26f8$var$PROP_NUM_ARR_REGEX = /^([^=]+)_(\\d+)=(\\d+)$/;\nfunction $0d19688bebdb26f8$var$parseToken(line) {\n    line = line.trim();\n    if (line === \"\") return void 0;\n    if (line.startsWith(\"//\")) return void 0;\n    const modeMatch = line.match($0d19688bebdb26f8$var$MODE_REGEX);\n    if (modeMatch) return {\n        type: \"mode\",\n        value: modeMatch[1]\n    };\n    const propNumArrMatch = line.match($0d19688bebdb26f8$var$PROP_NUM_ARR_REGEX);\n    if (propNumArrMatch) return {\n        type: \"prop:num_arr\",\n        key: propNumArrMatch[1],\n        value: [\n            Number(propNumArrMatch[2]),\n            Number(propNumArrMatch[3])\n        ]\n    };\n    const propNumMatch = line.match($0d19688bebdb26f8$var$PROP_NUM_REGEX);\n    if (propNumMatch) return {\n        type: \"prop:num\",\n        key: propNumMatch[1],\n        value: Number(propNumMatch[2])\n    };\n    const propStrMatch = line.match($0d19688bebdb26f8$var$PROP_STR_REGEX);\n    if (propStrMatch) return {\n        type: \"prop:str\",\n        key: propStrMatch[1],\n        value: propStrMatch[2]\n    };\n    return {\n        type: \"unknown\",\n        value: line\n    };\n}\nvar $0d19688bebdb26f8$var$_closeRegion, $0d19688bebdb26f8$var$closeRegion_fn;\nvar $0d19688bebdb26f8$var$Scope = class {\n    constructor(){\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_closeRegion);\n        this.values = {};\n        this.global = {};\n        this.group = {};\n    }\n    closeScope(mode, group) {\n        if (mode === \"global\") $0d19688bebdb26f8$var$__privateMethod(this, $0d19688bebdb26f8$var$_closeRegion, $0d19688bebdb26f8$var$closeRegion_fn).call(this, this.global);\n        else if (mode === \"group\") this.group = $0d19688bebdb26f8$var$__privateMethod(this, $0d19688bebdb26f8$var$_closeRegion, $0d19688bebdb26f8$var$closeRegion_fn).call(this, {});\n        else if (mode === \"region\") {\n            const region = $0d19688bebdb26f8$var$__privateMethod(this, $0d19688bebdb26f8$var$_closeRegion, $0d19688bebdb26f8$var$closeRegion_fn).call(this, $0d19688bebdb26f8$var$__spreadValues($0d19688bebdb26f8$var$__spreadValues({\n                sampleName: \"\",\n                midiPitch: -1\n            }, this.global), this.group));\n            if (region.sampleName === \"\") return \"Missing sample name\";\n            if (region.midiPitch === -1) {\n                if (region.midiLow !== void 0) region.midiPitch = region.midiLow;\n                else return \"Missing pitch_keycenter\";\n            }\n            if (region.seqLength && region.seqPosition === void 0) region.seqPosition = 1;\n            if (region.ampRelease) {\n                region.sample = {\n                    decayTime: region.ampRelease\n                };\n                delete region.ampRelease;\n            }\n            group.regions.push(region);\n        }\n    }\n    get empty() {\n        return Object.keys(this.values).length === 0;\n    }\n    get keys() {\n        return Object.keys(this.values);\n    }\n    push(key, value) {\n        this.values[key] = value;\n    }\n    popNum(key, dest, destKey) {\n        if (typeof this.values[key] !== \"number\") return false;\n        dest[destKey] = this.values[key];\n        delete this.values[key];\n        return true;\n    }\n    popStr(key, dest, destKey) {\n        if (typeof this.values[key] !== \"string\") return false;\n        dest[destKey] = this.values[key];\n        delete this.values[key];\n        return true;\n    }\n    popNumArr(key, dest, destKey) {\n        if (!Array.isArray(this.values[key])) return false;\n        dest[destKey] = this.values[key];\n        delete this.values[key];\n        return true;\n    }\n};\n$0d19688bebdb26f8$var$_closeRegion = new WeakSet();\n$0d19688bebdb26f8$var$closeRegion_fn = function(region) {\n    this.popStr(\"sample\", region, \"sampleName\");\n    this.popNum(\"pitch_keycenter\", region, \"midiPitch\");\n    this.popNum(\"ampeg_attack\", region, \"ampAttack\");\n    this.popNum(\"ampeg_release\", region, \"ampRelease\");\n    this.popNum(\"bend_down\", region, \"bendDown\");\n    this.popNum(\"bend_up\", region, \"bendUp\");\n    this.popNum(\"group\", region, \"group\");\n    this.popNum(\"hikey\", region, \"midiHigh\");\n    this.popNum(\"hivel\", region, \"velHigh\");\n    this.popNum(\"lokey\", region, \"midiLow\");\n    this.popNum(\"offset\", region, \"offset\");\n    this.popNum(\"lovel\", region, \"velLow\");\n    this.popNum(\"off_by\", region, \"groupOffBy\");\n    this.popNum(\"pitch_keytrack\", region, \"ignore\");\n    this.popNum(\"seq_length\", region, \"seqLength\");\n    this.popNum(\"seq_position\", region, \"seqPosition\");\n    this.popNum(\"tune\", region, \"tune\");\n    this.popNum(\"volume\", region, \"volume\");\n    this.popNumArr(\"amp_velcurve\", region, \"ampVelCurve\");\n    this.values = {};\n    return region;\n};\n// src/versilian.ts\nvar $0d19688bebdb26f8$var$instruments = [];\nvar $0d19688bebdb26f8$var$BASE_URL = \"https://smpldsnds.github.io/sgossner-vcsl/\";\nfunction $0d19688bebdb26f8$export$a66a4b902406fe5d() {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        if ($0d19688bebdb26f8$var$instruments.length) return $0d19688bebdb26f8$var$instruments;\n        $0d19688bebdb26f8$var$instruments = yield fetch($0d19688bebdb26f8$var$BASE_URL + \"sfz_files.json\").then((res)=>res.json());\n        return $0d19688bebdb26f8$var$instruments;\n    });\n}\nfunction $0d19688bebdb26f8$var$getVcslInstrumentSfzUrl(instrument) {\n    return $0d19688bebdb26f8$var$BASE_URL + instrument + \".sfz\";\n}\nfunction $0d19688bebdb26f8$export$5448e79a3a331366(instrument, buffers, group) {\n    const url = $0d19688bebdb26f8$var$getVcslInstrumentSfzUrl(instrument);\n    const base = instrument.slice(0, instrument.lastIndexOf(\"/\") + 1);\n    const sampleBase = `https://smpldsnds.github.io/sgossner-vcsl/${base}`;\n    return $0d19688bebdb26f8$var$SfzInstrumentLoader2(url, {\n        buffers: buffers,\n        group: group,\n        urlFromSampleName: (sampleName, audioExt)=>{\n            return sampleBase + \"/\" + sampleName.replace(\".wav\", audioExt);\n        }\n    });\n}\nvar $0d19688bebdb26f8$export$8cc6d0fd3afaa0c8 = class {\n    constructor(context, options = {}){\n        var _a, _b;\n        this.config = {\n            instrument: (_a = options.instrument) != null ? _a : \"Arco\",\n            storage: (_b = options.storage) != null ? _b : $0d19688bebdb26f8$export$7fd566d5ad2998a9\n        };\n        this.player = new $0d19688bebdb26f8$var$RegionPlayer(context, options);\n        const loader = $0d19688bebdb26f8$export$5448e79a3a331366(this.config.instrument, this.player.buffers, this.player.group);\n        this.load = loader(context, this.config.storage).then(()=>this);\n    }\n    get output() {\n        return this.player.output;\n    }\n    get buffers() {\n        return this.player.buffers;\n    }\n    get context() {\n        return this.player.context;\n    }\n    start(sample) {\n        return this.player.start(sample);\n    }\n    stop(sample) {\n        return this.player.stop(sample);\n    }\n    disconnect() {\n        this.player.disconnect();\n    }\n};\n// src/mallet.ts\nfunction $0d19688bebdb26f8$export$53af967af8457099() {\n    return Object.keys($0d19688bebdb26f8$export$d256c5979b498699);\n}\nvar $0d19688bebdb26f8$export$7003e69389dc401 = class extends $0d19688bebdb26f8$export$8cc6d0fd3afaa0c8 {\n    constructor(context, options){\n        var _a;\n        super(context, $0d19688bebdb26f8$var$__spreadProps($0d19688bebdb26f8$var$__spreadValues({}, options), {\n            instrument: $0d19688bebdb26f8$export$d256c5979b498699[(_a = options.instrument) != null ? _a : \"\"]\n        }));\n    }\n};\nvar $0d19688bebdb26f8$export$d256c5979b498699 = {\n    \"Balafon - Hard Mallet\": \"Idiophones/Struck Idiophones/Balafon - Hard Mallet\",\n    \"Balafon - Keyswitch\": \"Idiophones/Struck Idiophones/Balafon - Keyswitch\",\n    \"Balafon - Soft Mallet\": \"Idiophones/Struck Idiophones/Balafon - Soft Mallet\",\n    \"Balafon - Traditional Mallet\": \"Idiophones/Struck Idiophones/Balafon - Traditional Mallet\",\n    \"Tubular Bells 1\": \"Idiophones/Struck Idiophones/Tubular Bells 1\",\n    \"Tubular Bells 2\": \"Idiophones/Struck Idiophones/Tubular Bells 2\",\n    \"Vibraphone - Bowed\": \"Idiophones/Struck Idiophones/Vibraphone - Bowed\",\n    \"Vibraphone - Hard Mallets\": \"Idiophones/Struck Idiophones/Vibraphone - Hard Mallets\",\n    \"Vibraphone - Keyswitch\": \"Idiophones/Struck Idiophones/Vibraphone - Keyswitch\",\n    \"Vibraphone - Soft Mallets\": \"Idiophones/Struck Idiophones/Vibraphone - Soft Mallets\",\n    \"Xylophone - Hard Mallets\": \"Idiophones/Struck Idiophones/Xylophone - Hard Mallets\",\n    \"Xylophone - Keyswitch\": \"Idiophones/Struck Idiophones/Xylophone - Keyswitch\",\n    \"Xylophone - Medium Mallets\": \"Idiophones/Struck Idiophones/Xylophone - Medium Mallets\",\n    \"Xylophone - Soft Mallets\": \"Idiophones/Struck Idiophones/Xylophone - Soft Mallets\"\n};\n// src/mellotron.ts\nvar $0d19688bebdb26f8$var$INSTRUMENT_VARIATIONS = {\n    \"300 STRINGS CELLO\": [\n        \"300 STRINGS\",\n        \"CELL\"\n    ],\n    \"300 STRINGS VIOLA\": [\n        \"300 STRINGS\",\n        \"VIOL\"\n    ]\n};\nfunction $0d19688bebdb26f8$export$91f876c54fbf91d6() {\n    return [\n        \"300 STRINGS CELLO\",\n        \"300 STRINGS VIOLA\",\n        \"8VOICE CHOIR\",\n        \"BASSA+STRNGS\",\n        \"BOYS CHOIR\",\n        \"CHA CHA FLT\",\n        \"CHM CLARINET\",\n        \"CHMB 3 VLNS\",\n        \"CHMB ALTOSAX\",\n        \"CHMB FEMALE\",\n        \"CHMB MALE VC\",\n        \"CHMB TNR SAX\",\n        \"CHMB TRMBONE\",\n        \"CHMB TRUMPET\",\n        \"CHMBLN CELLO\",\n        \"CHMBLN FLUTE\",\n        \"CHMBLN OBOE\",\n        \"DIXIE+TRMBN\",\n        \"FOXTROT+SAX\",\n        \"HALFSP.BRASS\",\n        \"MIXED STRGS\",\n        \"MKII BRASS\",\n        \"MKII GUITAR\",\n        \"MKII ORGAN\",\n        \"MKII SAX\",\n        \"MKII VIBES\",\n        \"MKII VIOLINS\",\n        \"MOVE BS+STGS\",\n        \"STRGS+BRASS\",\n        \"TROMB+TRMPT\",\n        \"TRON 16VLNS\",\n        \"TRON CELLO\",\n        \"TRON FLUTE\",\n        \"TRON VIOLA\"\n    ];\n}\nvar $0d19688bebdb26f8$export$32e02f95080c701e = class {\n    constructor(context, options){\n        this.context = context;\n        this.config = $0d19688bebdb26f8$var$getMellotronConfig(options);\n        this.player = new $0d19688bebdb26f8$var$DefaultPlayer(context, options);\n        this.group = $0d19688bebdb26f8$var$createEmptyRegionGroup(options);\n        const loader = $0d19688bebdb26f8$var$loadMellotronInstrument(this.config.instrument, this.player.buffers, this.group);\n        this.load = loader(context, this.config.storage).then(()=>this);\n    }\n    get buffers() {\n        return this.player.buffers;\n    }\n    get output() {\n        return this.player.output;\n    }\n    start(sample) {\n        const found = $0d19688bebdb26f8$var$findFirstSampleInRegions(this.group, typeof sample === \"object\" ? sample : {\n            note: sample\n        });\n        if (!found) return ()=>void 0;\n        return this.player.start(found);\n    }\n    stop(sample) {\n        this.player.stop(sample);\n    }\n    disconnect() {\n        this.player.disconnect();\n    }\n};\nfunction $0d19688bebdb26f8$var$getMellotronConfig(options) {\n    var _a, _b;\n    return {\n        instrument: (_a = options.instrument) != null ? _a : \"MKII VIOLINS\",\n        storage: (_b = options.storage) != null ? _b : $0d19688bebdb26f8$export$7fd566d5ad2998a9\n    };\n}\nfunction $0d19688bebdb26f8$var$loadMellotronInstrument(instrument, buffers, group) {\n    let variation = $0d19688bebdb26f8$var$INSTRUMENT_VARIATIONS[instrument];\n    if (variation) instrument = variation[0];\n    return (context, storage)=>{\n        const baseUrl = `https://smpldsnds.github.io/archiveorg-mellotron/${instrument}/`;\n        const audioExt = $0d19688bebdb26f8$var$getPreferredAudioExtension();\n        return fetch(baseUrl + \"files.json\").then((res)=>res.json()).then((sampleNames)=>Promise.all(sampleNames.map((sampleName)=>{\n                var _a;\n                if (variation && !sampleName.includes(variation[1])) return;\n                const midi = $0d19688bebdb26f8$var$toMidi((_a = sampleName.split(\" \")[0]) != null ? _a : \"\");\n                if (!midi) return;\n                const sampleUrl = baseUrl + sampleName + audioExt;\n                $0d19688bebdb26f8$var$loadAudioBuffer(context, sampleUrl, storage).then((audioBuffer)=>{\n                    var _a2;\n                    buffers[sampleName] = audioBuffer;\n                    const duration = (_a2 = audioBuffer == null ? void 0 : audioBuffer.duration) != null ? _a2 : 0;\n                    group.regions.push({\n                        sampleName: sampleName,\n                        midiPitch: midi,\n                        sample: {\n                            loop: true,\n                            loopStart: duration / 10,\n                            loopEnd: duration - duration / 10\n                        }\n                    });\n                });\n            }))).then(()=>{\n            $0d19688bebdb26f8$var$spreadRegions(group.regions);\n        });\n    };\n}\n// src/reverb/processor.min.ts\nvar $0d19688bebdb26f8$var$PROCESSOR = `\"use strict\";(()=>{var f=class extends AudioWorkletProcessor{_pDLength;_preDelay;_pDWrite;_lp1;_lp2;_lp3;_excPhase;_taps;_Delays;sampleRate;static get parameterDescriptors(){return[[\"preDelay\",0,0,sampleRate-1,\"k-rate\"],[\"bandwidth\",.9999,0,1,\"k-rate\"],[\"inputDiffusion1\",.75,0,1,\"k-rate\"],[\"inputDiffusion2\",.625,0,1,\"k-rate\"],[\"decay\",.5,0,1,\"k-rate\"],[\"decayDiffusion1\",.7,0,.999999,\"k-rate\"],[\"decayDiffusion2\",.5,0,.999999,\"k-rate\"],[\"damping\",.005,0,1,\"k-rate\"],[\"excursionRate\",.5,0,2,\"k-rate\"],[\"excursionDepth\",.7,0,2,\"k-rate\"],[\"wet\",1,0,1,\"k-rate\"],[\"dry\",0,0,1,\"k-rate\"]].map(e=>new Object({name:e[0],defaultValue:e[1],minValue:e[2],maxValue:e[3],automationRate:e[4]}))}constructor(e){super(),this.sampleRate=sampleRate,this._Delays=[],this._pDLength=sampleRate+(128-sampleRate%128),this._preDelay=new Float32Array(this._pDLength),this._pDWrite=0,this._lp1=0,this._lp2=0,this._lp3=0,this._excPhase=0,[.004771345,.003595309,.012734787,.009307483,.022579886,.149625349,.060481839,.1249958,.030509727,.141695508,.089244313,.106280031].forEach(a=>this.makeDelay(a,sampleRate)),this._taps=Int16Array.from([.008937872,.099929438,.064278754,.067067639,.066866033,.006283391,.035818689,.011861161,.121870905,.041262054,.08981553,.070931756,.011256342,.004065724],a=>Math.round(a*sampleRate))}makeDelay(e,a){let t=Math.round(e*a),s=2**Math.ceil(Math.log2(t));this._Delays.push([new Float32Array(s),t-1,0,s-1])}writeDelay(e,a){return this._Delays[e][0][this._Delays[e][1]]=a}readDelay(e){return this._Delays[e][0][this._Delays[e][2]]}readDelayAt(e,a){let t=this._Delays[e];return t[0][t[2]+a&t[3]]}readDelayCAt(e,a){let t=this._Delays[e],s=a-~~a,d=~~a+t[2]-1,r=t[3],D=t[0][d++&r],l=t[0][d++&r],h=t[0][d++&r],y=t[0][d&r],u=(3*(l-h)-D+y)/2,m=2*h+D-(5*l+y)/2,c=(h-D)/2;return((u*s+m)*s+c)*s+l}process(e,a,t){let s=~~t.preDelay[0],d=t.bandwidth[0],r=t.inputDiffusion1[0],D=t.inputDiffusion2[0],l=t.decay[0],h=t.decayDiffusion1[0],y=t.decayDiffusion2[0],u=1-t.damping[0],m=t.excursionRate[0]/sampleRate,c=t.excursionDepth[0]*sampleRate/1e3,w=t.wet[0]*.6,A=t.dry[0];if(e[0].length==2)for(let i=127;i>=0;i--)this._preDelay[this._pDWrite+i]=(e[0][0][i]+e[0][1][i])*.5,a[0][0][i]=e[0][0][i]*A,a[0][1][i]=e[0][1][i]*A;else if(e[0].length>0){this._preDelay.set(e[0][0],this._pDWrite);for(let i=127;i>=0;i--)a[0][0][i]=a[0][1][i]=e[0][0][i]*A}else this._preDelay.set(new Float32Array(128),this._pDWrite);let o=0;for(;o<128;){let i=0,b=0;this._lp1+=d*(this._preDelay[(this._pDLength+this._pDWrite-s+o)%this._pDLength]-this._lp1);let p=this.writeDelay(0,this._lp1-r*this.readDelay(0));p=this.writeDelay(1,r*(p-this.readDelay(1))+this.readDelay(0)),p=this.writeDelay(2,r*p+this.readDelay(1)-D*this.readDelay(2)),p=this.writeDelay(3,D*(p-this.readDelay(3))+this.readDelay(2));let k=D*p+this.readDelay(3),g=c*(1+Math.cos(this._excPhase*6.28)),x=c*(1+Math.sin(this._excPhase*6.2847)),_=this.writeDelay(4,k+l*this.readDelay(11)+h*this.readDelayCAt(4,g));this.writeDelay(5,this.readDelayCAt(4,g)-h*_),this._lp2+=u*(this.readDelay(5)-this._lp2),_=this.writeDelay(6,l*this._lp2-y*this.readDelay(6)),this.writeDelay(7,this.readDelay(6)+y*_),_=this.writeDelay(8,k+l*this.readDelay(7)+h*this.readDelayCAt(8,x)),this.writeDelay(9,this.readDelayCAt(8,x)-h*_),this._lp3+=u*(this.readDelay(9)-this._lp3),_=this.writeDelay(10,l*this._lp3-y*this.readDelay(10)),this.writeDelay(11,this.readDelay(10)+y*_),i=this.readDelayAt(9,this._taps[0])+this.readDelayAt(9,this._taps[1])-this.readDelayAt(10,this._taps[2])+this.readDelayAt(11,this._taps[3])-this.readDelayAt(5,this._taps[4])-this.readDelayAt(6,this._taps[5])-this.readDelayAt(7,this._taps[6]),b=this.readDelayAt(5,this._taps[7])+this.readDelayAt(5,this._taps[8])-this.readDelayAt(6,this._taps[9])+this.readDelayAt(7,this._taps[10])-this.readDelayAt(9,this._taps[11])-this.readDelayAt(10,this._taps[12])-this.readDelayAt(11,this._taps[13]),a[0][0][o]+=i*w,a[0][1][o]+=b*w,this._excPhase+=m,o++;for(let R=0,n=this._Delays[0];R<this._Delays.length;n=this._Delays[++R])n[1]=n[1]+1&n[3],n[2]=n[2]+1&n[3]}return this._pDWrite=(this._pDWrite+128)%this._pDLength,!0}};registerProcessor(\"DattorroReverb\",f);})();`;\n// src/reverb/reverb.ts\nvar $0d19688bebdb26f8$var$PARAMS = [\n    \"preDelay\",\n    \"bandwidth\",\n    \"inputDiffusion1\",\n    \"inputDiffusion2\",\n    \"decay\",\n    \"decayDiffusion1\",\n    \"decayDiffusion2\",\n    \"damping\",\n    \"excursionRate\",\n    \"excursionDepth\",\n    \"wet\",\n    \"dry\"\n];\nvar $0d19688bebdb26f8$var$init = /* @__PURE__ */ new WeakMap();\nfunction $0d19688bebdb26f8$var$createDattorroReverbEffect(context) {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        let ready = $0d19688bebdb26f8$var$init.get(context);\n        if (!ready) {\n            const blob = new Blob([\n                $0d19688bebdb26f8$var$PROCESSOR\n            ], {\n                type: \"application/javascript\"\n            });\n            const url = URL.createObjectURL(blob);\n            ready = context.audioWorklet.addModule(url);\n            $0d19688bebdb26f8$var$init.set(context, ready);\n        }\n        yield ready;\n        const reverb = new AudioWorkletNode(context, \"DattorroReverb\", {\n            outputChannelCount: [\n                2\n            ]\n        });\n        return reverb;\n    });\n}\nvar $0d19688bebdb26f8$var$_effect, $0d19688bebdb26f8$var$_ready, $0d19688bebdb26f8$var$_output;\nvar $0d19688bebdb26f8$export$6fb1520d4329a18d = class {\n    constructor(context){\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_effect, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_ready, void 0);\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_output, void 0);\n        this.input = context.createGain();\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_output, context.destination);\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_ready, $0d19688bebdb26f8$var$createDattorroReverbEffect(context).then((reverb)=>{\n            this.input.connect(reverb);\n            reverb.connect($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_output));\n            $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_effect, reverb);\n            return this;\n        }));\n    }\n    get paramNames() {\n        return $0d19688bebdb26f8$var$PARAMS;\n    }\n    getParam(name) {\n        var _a;\n        return (_a = $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_effect)) == null ? void 0 : _a.parameters.get(\"preDelay\");\n    }\n    get isReady() {\n        return $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_effect) !== void 0;\n    }\n    ready() {\n        return $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_ready);\n    }\n    connect(output) {\n        if ($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_effect)) {\n            $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_effect).disconnect($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_output));\n            $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_effect).connect(output);\n        }\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_output, output);\n    }\n};\n$0d19688bebdb26f8$var$_effect = new WeakMap();\n$0d19688bebdb26f8$var$_ready = new WeakMap();\n$0d19688bebdb26f8$var$_output = new WeakMap();\n// src/sampler.ts\nvar $0d19688bebdb26f8$var$_options;\nvar $0d19688bebdb26f8$export$322f102bec719b22 = class {\n    constructor(context, options = {}){\n        this.context = context;\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_options, void 0);\n        var _a, _b, _c, _d, _e, _f;\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_options, {\n            destination: (_a = options.destination) != null ? _a : context.destination,\n            detune: 0,\n            volume: (_b = options.volume) != null ? _b : 100,\n            velocity: (_c = options.velocity) != null ? _c : 100,\n            buffers: (_d = options.buffers) != null ? _d : {},\n            volumeToGain: (_e = options.volumeToGain) != null ? _e : $0d19688bebdb26f8$var$midiVelToGain\n        });\n        this.player = new $0d19688bebdb26f8$var$DefaultPlayer(context, $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_options));\n        const storage = (_f = options.storage) != null ? _f : $0d19688bebdb26f8$export$7fd566d5ad2998a9;\n        const loader = typeof $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_options).buffers === \"function\" ? $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_options).buffers : $0d19688bebdb26f8$var$createAudioBuffersLoader($0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_options).buffers, storage);\n        this.load = loader(context, this.player.buffers).then(()=>this);\n    }\n    loaded() {\n        return $0d19688bebdb26f8$var$__async(this, null, function*() {\n            console.warn(\"deprecated: use load instead\");\n            return this.load;\n        });\n    }\n    get output() {\n        return this.player.output;\n    }\n    start(sample) {\n        return this.player.start(typeof sample === \"object\" ? sample : {\n            note: sample\n        });\n    }\n    stop(sample) {\n        return this.player.stop(typeof sample === \"object\" ? sample : sample === void 0 ? void 0 : {\n            stopId: sample\n        });\n    }\n    disconnect() {\n        return this.player.disconnect();\n    }\n};\n$0d19688bebdb26f8$var$_options = new WeakMap();\nfunction $0d19688bebdb26f8$var$createAudioBuffersLoader(source, storage) {\n    return (context, buffers)=>$0d19688bebdb26f8$var$__async(this, null, function*() {\n            yield Promise.all([\n                Object.keys(source).map((key)=>$0d19688bebdb26f8$var$__async(this, null, function*() {\n                        const value = source[key];\n                        if (value instanceof AudioBuffer) buffers[key] = value;\n                        else if (typeof value === \"string\") {\n                            const buffer = yield $0d19688bebdb26f8$var$loadAudioBuffer(context, value, storage);\n                            if (buffer) buffers[key] = buffer;\n                        }\n                    }))\n            ]);\n        });\n}\n// src/smolken.ts\nfunction $0d19688bebdb26f8$export$bb024515dad59be8() {\n    return [\n        \"Pizzicato\",\n        \"Arco\",\n        \"Switched\"\n    ];\n}\nfunction $0d19688bebdb26f8$var$getSmolkenUrl(instrument) {\n    const FILES = {\n        Arco: \"arco\",\n        Pizzicato: \"pizz\",\n        Switched: \"switched\"\n    };\n    return `https://smpldsnds.github.io/sfzinstruments-dsmolken-double-bass/d_smolken_rubner_bass_${FILES[instrument]}.sfz`;\n}\nvar $0d19688bebdb26f8$export$548691975240e36a = class {\n    constructor(context, options = {}){\n        this.seqNum = 0;\n        var _a, _b;\n        this.config = {\n            instrument: (_a = options.instrument) != null ? _a : \"Arco\",\n            storage: (_b = options.storage) != null ? _b : $0d19688bebdb26f8$export$7fd566d5ad2998a9\n        };\n        this.player = new $0d19688bebdb26f8$var$DefaultPlayer(context, options);\n        this.group = $0d19688bebdb26f8$var$createEmptyRegionGroup();\n        const url = $0d19688bebdb26f8$var$getSmolkenUrl(this.config.instrument);\n        const loader = $0d19688bebdb26f8$var$SfzInstrumentLoader2(url, {\n            buffers: this.player.buffers,\n            group: this.group,\n            urlFromSampleName: (sampleName, audioExt)=>{\n                const samplePath = sampleName.replace(\"\\\\\", \"/\").replace(\".wav\", audioExt);\n                return `https://smpldsnds.github.io/sfzinstruments-dsmolken-double-bass/${samplePath}`;\n            }\n        });\n        this.load = loader(context, this.config.storage).then(()=>this);\n    }\n    get output() {\n        return this.player.output;\n    }\n    get buffers() {\n        return this.player.buffers;\n    }\n    get context() {\n        return this.player.context;\n    }\n    start(sample) {\n        const found = $0d19688bebdb26f8$var$findSamplesInRegions(this.group, typeof sample === \"object\" ? sample : {\n            note: sample\n        }, this.seqNum);\n        this.seqNum++;\n        const stopAll = found.map((sample2)=>this.player.start(sample2));\n        return (time)=>stopAll.forEach((stop)=>stop(time));\n    }\n    stop(sample) {\n        if (sample == void 0) {\n            this.player.stop();\n            return;\n        }\n        const toStop = typeof sample === \"object\" ? sample : {\n            stopId: sample\n        };\n        const midi = $0d19688bebdb26f8$var$toMidi(toStop.stopId);\n        if (!midi) return;\n        toStop.stopId = midi;\n        this.player.stop(toStop);\n    }\n    disconnect() {\n        this.player.disconnect();\n    }\n};\n// src/soundfont/soundfont-instrument.ts\nfunction $0d19688bebdb26f8$var$gleitzKitUrl(name, kit) {\n    var _a;\n    const format = (_a = $0d19688bebdb26f8$var$findFirstSupportedFormat([\n        \"ogg\",\n        \"mp3\"\n    ])) != null ? _a : \"mp3\";\n    return `https://gleitz.github.io/midi-js-soundfonts/${kit}/${name}-${format}.js`;\n}\nfunction $0d19688bebdb26f8$var$soundfontInstrumentLoader(url, buffers, group) {\n    return (context, storage)=>$0d19688bebdb26f8$var$__async(this, null, function*() {\n            const sourceFile = yield (yield storage.fetch(url)).text();\n            const json = $0d19688bebdb26f8$var$midiJsToJson(sourceFile);\n            const noteNames = Object.keys(json);\n            yield Promise.all(noteNames.map((noteName)=>$0d19688bebdb26f8$var$__async(this, null, function*() {\n                    const midi = $0d19688bebdb26f8$var$toMidi(noteName);\n                    if (!midi) return;\n                    const audioData = $0d19688bebdb26f8$var$base64ToArrayBuffer($0d19688bebdb26f8$var$removeBase64Prefix(json[noteName]));\n                    const buffer = yield context.decodeAudioData(audioData);\n                    buffers[noteName] = buffer;\n                    group.regions.push({\n                        sampleName: noteName,\n                        midiPitch: midi\n                    });\n                })));\n            $0d19688bebdb26f8$var$spreadRegions(group.regions);\n        });\n}\nfunction $0d19688bebdb26f8$var$midiJsToJson(source) {\n    const header = source.indexOf(\"MIDI.Soundfont.\");\n    if (header < 0) throw Error(\"Invalid MIDI.js Soundfont format\");\n    const start = source.indexOf(\"=\", header) + 2;\n    const end = source.lastIndexOf(\",\");\n    return JSON.parse(source.slice(start, end) + \"}\");\n}\nfunction $0d19688bebdb26f8$var$removeBase64Prefix(audioBase64) {\n    return audioBase64.slice(audioBase64.indexOf(\",\") + 1);\n}\nfunction $0d19688bebdb26f8$var$base64ToArrayBuffer(base64) {\n    const decoded = window.atob(base64);\n    const len = decoded.length;\n    const bytes = new Uint8Array(len);\n    for(let i = 0; i < len; i++)bytes[i] = decoded.charCodeAt(i);\n    return bytes.buffer;\n}\nvar $0d19688bebdb26f8$var$SOUNDFONT_KITS = [\n    \"MusyngKite\",\n    \"FluidR3_GM\"\n];\nvar $0d19688bebdb26f8$var$SOUNDFONT_INSTRUMENTS = [\n    \"accordion\",\n    \"acoustic_bass\",\n    \"acoustic_grand_piano\",\n    \"acoustic_guitar_nylon\",\n    \"acoustic_guitar_steel\",\n    \"agogo\",\n    \"alto_sax\",\n    \"applause\",\n    \"bagpipe\",\n    \"banjo\",\n    \"baritone_sax\",\n    \"bassoon\",\n    \"bird_tweet\",\n    \"blown_bottle\",\n    \"brass_section\",\n    \"breath_noise\",\n    \"bright_acoustic_piano\",\n    \"celesta\",\n    \"cello\",\n    \"choir_aahs\",\n    \"church_organ\",\n    \"clarinet\",\n    \"clavinet\",\n    \"contrabass\",\n    \"distortion_guitar\",\n    \"drawbar_organ\",\n    \"dulcimer\",\n    \"electric_bass_finger\",\n    \"electric_bass_pick\",\n    \"electric_grand_piano\",\n    \"electric_guitar_clean\",\n    \"electric_guitar_jazz\",\n    \"electric_guitar_muted\",\n    \"electric_piano_1\",\n    \"electric_piano_2\",\n    \"english_horn\",\n    \"fiddle\",\n    \"flute\",\n    \"french_horn\",\n    \"fretless_bass\",\n    \"fx_1_rain\",\n    \"fx_2_soundtrack\",\n    \"fx_3_crystal\",\n    \"fx_4_atmosphere\",\n    \"fx_5_brightness\",\n    \"fx_6_goblins\",\n    \"fx_7_echoes\",\n    \"fx_8_scifi\",\n    \"glockenspiel\",\n    \"guitar_fret_noise\",\n    \"guitar_harmonics\",\n    \"gunshot\",\n    \"harmonica\",\n    \"harpsichord\",\n    \"helicopter\",\n    \"honkytonk_piano\",\n    \"kalimba\",\n    \"koto\",\n    \"lead_1_square\",\n    \"lead_2_sawtooth\",\n    \"lead_3_calliope\",\n    \"lead_4_chiff\",\n    \"lead_5_charang\",\n    \"lead_6_voice\",\n    \"lead_7_fifths\",\n    \"lead_8_bass__lead\",\n    \"marimba\",\n    \"melodic_tom\",\n    \"music_box\",\n    \"muted_trumpet\",\n    \"oboe\",\n    \"ocarina\",\n    \"orchestra_hit\",\n    \"orchestral_harp\",\n    \"overdriven_guitar\",\n    \"pad_1_new_age\",\n    \"pad_2_warm\",\n    \"pad_3_polysynth\",\n    \"pad_4_choir\",\n    \"pad_5_bowed\",\n    \"pad_6_metallic\",\n    \"pad_7_halo\",\n    \"pad_8_sweep\",\n    \"pan_flute\",\n    \"percussive_organ\",\n    \"piccolo\",\n    \"pizzicato_strings\",\n    \"recorder\",\n    \"reed_organ\",\n    \"reverse_cymbal\",\n    \"rock_organ\",\n    \"seashore\",\n    \"shakuhachi\",\n    \"shamisen\",\n    \"shanai\",\n    \"sitar\",\n    \"slap_bass_1\",\n    \"slap_bass_2\",\n    \"soprano_sax\",\n    \"steel_drums\",\n    \"string_ensemble_1\",\n    \"string_ensemble_2\",\n    \"synth_bass_1\",\n    \"synth_bass_2\",\n    \"synth_brass_1\",\n    \"synth_brass_2\",\n    \"synth_choir\",\n    \"synth_drum\",\n    \"synth_strings_1\",\n    \"synth_strings_2\",\n    \"taiko_drum\",\n    \"tango_accordion\",\n    \"telephone_ring\",\n    \"tenor_sax\",\n    \"timpani\",\n    \"tinkle_bell\",\n    \"tremolo_strings\",\n    \"trombone\",\n    \"trumpet\",\n    \"tuba\",\n    \"tubular_bells\",\n    \"vibraphone\",\n    \"viola\",\n    \"violin\",\n    \"voice_oohs\",\n    \"whistle\",\n    \"woodblock\",\n    \"xylophone\"\n];\n// src/soundfont/soundfont-loops.ts\nfunction $0d19688bebdb26f8$var$getGoldstSoundfontLoopsUrl(instrument, kit) {\n    if (instrument.startsWith(\"http\")) return void 0;\n    return `https://goldst.dev/midi-js-soundfonts/${kit}/${instrument}-loop.json`;\n}\nfunction $0d19688bebdb26f8$var$fetchSoundfontLoopData(url) {\n    return $0d19688bebdb26f8$var$__async(this, null, function*() {\n        if (!url) return void 0;\n        try {\n            const req = yield fetch(url);\n            if (req.status !== 200) return;\n            const raw = yield req.json();\n            const loopData = {};\n            const sampleRate = 41e3;\n            Object.keys(raw).forEach((key)=>{\n                const midi = $0d19688bebdb26f8$var$toMidi(key);\n                if (midi) {\n                    const offsets = raw[key];\n                    loopData[midi] = [\n                        offsets[0] / sampleRate,\n                        offsets[1] / sampleRate\n                    ];\n                }\n            });\n            return loopData;\n        } catch (err) {\n            return void 0;\n        }\n    });\n}\n// src/soundfont/soundfont.ts\nfunction $0d19688bebdb26f8$export$76130f4c04b30de6() {\n    return $0d19688bebdb26f8$var$SOUNDFONT_KITS;\n}\nfunction $0d19688bebdb26f8$export$e8e6d6b2de61876d() {\n    return $0d19688bebdb26f8$var$SOUNDFONT_INSTRUMENTS;\n}\nvar $0d19688bebdb26f8$var$_hasLoops;\nvar $0d19688bebdb26f8$export$508265175ec7f40e = class {\n    constructor(context, options){\n        this.context = context;\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_hasLoops, void 0);\n        this.config = $0d19688bebdb26f8$var$getSoundfontConfig(options);\n        this.player = new $0d19688bebdb26f8$var$DefaultPlayer(context, options);\n        this.group = $0d19688bebdb26f8$var$createEmptyRegionGroup();\n        $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_hasLoops, false);\n        const loader = $0d19688bebdb26f8$var$soundfontLoader(this.config.instrumentUrl, this.config.loopDataUrl, this.player.buffers, this.group);\n        this.load = loader(context, this.config.storage).then((hasLoops)=>{\n            $0d19688bebdb26f8$var$__privateSet(this, $0d19688bebdb26f8$var$_hasLoops, hasLoops);\n            return this;\n        });\n        const gain = context.createGain();\n        gain.gain.value = this.config.extraGain;\n        this.player.output.addInsert(gain);\n    }\n    get output() {\n        return this.player.output;\n    }\n    get hasLoops() {\n        return $0d19688bebdb26f8$var$__privateGet(this, $0d19688bebdb26f8$var$_hasLoops);\n    }\n    loaded() {\n        return $0d19688bebdb26f8$var$__async(this, null, function*() {\n            console.warn(\"deprecated: use load instead\");\n            return this.load;\n        });\n    }\n    disconnect() {\n        this.player.disconnect();\n    }\n    start(sample) {\n        const found = $0d19688bebdb26f8$var$findFirstSampleInRegions(this.group, typeof sample === \"object\" ? sample : {\n            note: sample\n        });\n        if (!found) return ()=>void 0;\n        return this.player.start(found);\n    }\n    stop(sample) {\n        return this.player.stop(sample);\n    }\n};\n$0d19688bebdb26f8$var$_hasLoops = new WeakMap();\nfunction $0d19688bebdb26f8$var$soundfontLoader(url, loopsUrl, buffers, group) {\n    const loadInstrument = $0d19688bebdb26f8$var$soundfontInstrumentLoader(url, buffers, group);\n    return (context, storage)=>$0d19688bebdb26f8$var$__async(this, null, function*() {\n            const [_, loops] = yield Promise.all([\n                loadInstrument(context, storage),\n                $0d19688bebdb26f8$var$fetchSoundfontLoopData(loopsUrl)\n            ]);\n            if (loops) group.regions.forEach((region)=>{\n                var _a;\n                const loop = loops[region.midiPitch];\n                if (loop) {\n                    (_a = region.sample) != null ? _a : region.sample = {};\n                    region.sample.loop = true;\n                    region.sample.loopStart = loop[0];\n                    region.sample.loopEnd = loop[1];\n                }\n            });\n            return !!loops;\n        });\n}\nfunction $0d19688bebdb26f8$var$getSoundfontConfig(options) {\n    var _a, _b, _c, _d;\n    if (!options.instrument && !options.instrumentUrl) throw Error(\"Soundfont: instrument or instrumentUrl is required\");\n    const config = {\n        kit: \"MusyngKite\",\n        instrument: options.instrument,\n        storage: (_a = options.storage) != null ? _a : $0d19688bebdb26f8$export$7fd566d5ad2998a9,\n        // This is to compensate the low volume of the original samples\n        extraGain: (_b = options.extraGain) != null ? _b : 5,\n        loadLoopData: (_c = options.loadLoopData) != null ? _c : false,\n        loopDataUrl: options.loopDataUrl,\n        instrumentUrl: (_d = options.instrumentUrl) != null ? _d : \"\"\n    };\n    if (config.instrument && config.instrument.startsWith(\"http\")) {\n        console.warn(\"Use 'instrumentUrl' instead of 'instrument' to load from a URL\");\n        config.instrumentUrl = config.instrument;\n        config.instrument = void 0;\n    }\n    if (config.instrument && !config.instrumentUrl) config.instrumentUrl = $0d19688bebdb26f8$var$gleitzKitUrl(config.instrument, config.kit);\n    if (config.loadLoopData && config.instrument && !config.loopDataUrl) config.loopDataUrl = $0d19688bebdb26f8$var$getGoldstSoundfontLoopsUrl(config.instrument, config.kit);\n    return config;\n}\n// src/splendid-grand-piano.ts\nvar $0d19688bebdb26f8$var$BASE_URL2 = \"https://danigb.github.io/samples/splendid-grand-piano\";\nvar $0d19688bebdb26f8$var$_sampleToMidi, $0d19688bebdb26f8$var$sampleToMidi_fn;\nvar $0d19688bebdb26f8$export$589c152416f2342b = class {\n    constructor(context, options){\n        this.context = context;\n        $0d19688bebdb26f8$var$__privateAdd(this, $0d19688bebdb26f8$var$_sampleToMidi);\n        this.options = Object.assign({\n            baseUrl: $0d19688bebdb26f8$var$BASE_URL2,\n            storage: $0d19688bebdb26f8$export$7fd566d5ad2998a9,\n            detune: 0,\n            volume: 100,\n            velocity: 100,\n            decayTime: 0.5\n        }, options);\n        this.player = new $0d19688bebdb26f8$var$DefaultPlayer(context, this.options);\n        const loader = $0d19688bebdb26f8$var$splendidGrandPianoLoader(this.options.baseUrl, this.options.storage, this.options.notesToLoad);\n        this.load = loader(context, this.player.buffers).then(()=>this);\n    }\n    get output() {\n        return this.player.output;\n    }\n    get buffers() {\n        return this.player.buffers;\n    }\n    loaded() {\n        return $0d19688bebdb26f8$var$__async(this, null, function*() {\n            console.warn(\"deprecated: use load instead\");\n            return this.load;\n        });\n    }\n    start(sampleOrNote) {\n        var _a, _b;\n        const sample = typeof sampleOrNote === \"object\" ? $0d19688bebdb26f8$var$__spreadValues({}, sampleOrNote) : {\n            note: sampleOrNote\n        };\n        const found = $0d19688bebdb26f8$var$__privateMethod(this, $0d19688bebdb26f8$var$_sampleToMidi, $0d19688bebdb26f8$var$sampleToMidi_fn).call(this, sample);\n        if (!found) return ()=>void 0;\n        sample.note = found[0];\n        sample.stopId = (_a = sample.stopId) != null ? _a : found[1];\n        sample.detune = found[2] + ((_b = sample.detune) != null ? _b : this.options.detune);\n        return this.player.start(sample);\n    }\n    stop(sample) {\n        return this.player.stop(sample);\n    }\n};\n$0d19688bebdb26f8$var$_sampleToMidi = new WeakSet();\n$0d19688bebdb26f8$var$sampleToMidi_fn = function(sample) {\n    var _a;\n    const midi = $0d19688bebdb26f8$var$toMidi(sample.note);\n    if (!midi) return;\n    const vel = (_a = sample.velocity) != null ? _a : this.options.velocity;\n    const layerIdx = $0d19688bebdb26f8$export$fdca3ba65b5cceec.findIndex((layer2)=>vel >= layer2.vel_range[0] && vel <= layer2.vel_range[1]);\n    const layer = $0d19688bebdb26f8$export$fdca3ba65b5cceec[layerIdx];\n    if (!layer) return;\n    return $0d19688bebdb26f8$var$findNearestMidiInLayer(layer.name, midi, this.player.buffers);\n};\nfunction $0d19688bebdb26f8$var$findNearestMidiInLayer(prefix, midi, buffers) {\n    let i = 0;\n    while(buffers[prefix + (midi + i)] === void 0 && i < 128)if (i > 0) i = -i;\n    else i = -i + 1;\n    return i === 127 ? [\n        prefix + midi,\n        midi,\n        0\n    ] : [\n        prefix + (midi + i),\n        midi,\n        -i * 100\n    ];\n}\nfunction $0d19688bebdb26f8$var$splendidGrandPianoLoader(baseUrl, storage, notesToLoad) {\n    var _a;\n    const format = (_a = $0d19688bebdb26f8$var$findFirstSupportedFormat([\n        \"ogg\",\n        \"m4a\"\n    ])) != null ? _a : \"ogg\";\n    let layers = notesToLoad ? $0d19688bebdb26f8$export$fdca3ba65b5cceec.filter((layer)=>layer.vel_range[0] <= notesToLoad.velocityRange[1] && layer.vel_range[1] >= notesToLoad.velocityRange[0]) : $0d19688bebdb26f8$export$fdca3ba65b5cceec;\n    return (context, buffers)=>$0d19688bebdb26f8$var$__async(this, null, function*() {\n            for (const layer of layers){\n                const samples = notesToLoad ? layer.samples.filter((sample)=>notesToLoad.notes.includes(sample[0])) : layer.samples;\n                yield Promise.all(samples.map((_0)=>$0d19688bebdb26f8$var$__async(this, [\n                        _0\n                    ], function*([midi, name]) {\n                        const url = `${baseUrl}/${name}.${format}`;\n                        const buffer = yield $0d19688bebdb26f8$var$loadAudioBuffer(context, url, storage);\n                        if (buffer) buffers[layer.name + midi] = buffer;\n                    })));\n            }\n        });\n}\nvar $0d19688bebdb26f8$export$fdca3ba65b5cceec = [\n    {\n        name: \"PPP\",\n        vel_range: [\n            1,\n            40\n        ],\n        cutoff: 1e3,\n        samples: [\n            [\n                23,\n                \"PP-B-1\"\n            ],\n            [\n                27,\n                \"PP-D#0\"\n            ],\n            [\n                29,\n                \"PP-F0\"\n            ],\n            [\n                31,\n                \"PP-G0\"\n            ],\n            [\n                33,\n                \"PP-A0\"\n            ],\n            [\n                35,\n                \"PP-B0\"\n            ],\n            [\n                37,\n                \"PP-C#1\"\n            ],\n            [\n                38,\n                \"PP-D1\"\n            ],\n            [\n                40,\n                \"PP-E1\"\n            ],\n            [\n                41,\n                \"PP-F1\"\n            ],\n            [\n                43,\n                \"PP-G1\"\n            ],\n            [\n                45,\n                \"PP-A1\"\n            ],\n            [\n                47,\n                \"PP-B1\"\n            ],\n            [\n                48,\n                \"PP-C2\"\n            ],\n            [\n                50,\n                \"PP-D2\"\n            ],\n            [\n                52,\n                \"PP-E2\"\n            ],\n            [\n                53,\n                \"PP-F2\"\n            ],\n            [\n                55,\n                \"PP-G2\"\n            ],\n            [\n                56,\n                \"PP-G#2\"\n            ],\n            [\n                57,\n                \"PP-A2\"\n            ],\n            [\n                58,\n                \"PP-A#2\"\n            ],\n            [\n                59,\n                \"PP-B2\"\n            ],\n            [\n                60,\n                \"PP-C3\"\n            ],\n            [\n                62,\n                \"PP-D3\"\n            ],\n            [\n                64,\n                \"PP-E3\"\n            ],\n            [\n                65,\n                \"PP-F3\"\n            ],\n            [\n                67,\n                \"PP-G3\"\n            ],\n            [\n                69,\n                \"PP-A3\"\n            ],\n            [\n                71,\n                \"PP-B3\"\n            ],\n            [\n                72,\n                \"PP-C4\"\n            ],\n            [\n                74,\n                \"PP-D4\"\n            ],\n            [\n                76,\n                \"PP-E4\"\n            ],\n            [\n                77,\n                \"PP-F4\"\n            ],\n            [\n                79,\n                \"PP-G4\"\n            ],\n            [\n                80,\n                \"PP-G#4\"\n            ],\n            [\n                81,\n                \"PP-A4\"\n            ],\n            [\n                82,\n                \"PP-A#4\"\n            ],\n            [\n                83,\n                \"PP-B4\"\n            ],\n            [\n                85,\n                \"PP-C#5\"\n            ],\n            [\n                86,\n                \"PP-D5\"\n            ],\n            [\n                87,\n                \"PP-D#5\"\n            ],\n            [\n                89,\n                \"PP-F5\"\n            ],\n            [\n                90,\n                \"PP-F#5\"\n            ],\n            [\n                91,\n                \"PP-G5\"\n            ],\n            [\n                92,\n                \"PP-G#5\"\n            ],\n            [\n                93,\n                \"PP-A5\"\n            ],\n            [\n                94,\n                \"PP-A#5\"\n            ],\n            [\n                95,\n                \"PP-B5\"\n            ],\n            [\n                96,\n                \"PP-C6\"\n            ],\n            [\n                97,\n                \"PP-C#6\"\n            ],\n            [\n                98,\n                \"PP-D6\"\n            ],\n            [\n                99,\n                \"PP-D#6\"\n            ],\n            [\n                100,\n                \"PP-E6\"\n            ],\n            [\n                101,\n                \"PP-F6\"\n            ],\n            [\n                102,\n                \"PP-F#6\"\n            ],\n            [\n                103,\n                \"PP-G6\"\n            ],\n            [\n                104,\n                \"PP-G#6\"\n            ],\n            [\n                105,\n                \"PP-A6\"\n            ],\n            [\n                106,\n                \"PP-A#6\"\n            ],\n            [\n                107,\n                \"PP-B6\"\n            ],\n            [\n                108,\n                \"PP-C7\"\n            ]\n        ]\n    },\n    {\n        name: \"PP\",\n        vel_range: [\n            41,\n            67\n        ],\n        samples: [\n            [\n                23,\n                \"PP-B-1\"\n            ],\n            [\n                27,\n                \"PP-D#0\"\n            ],\n            [\n                29,\n                \"PP-F0\"\n            ],\n            [\n                31,\n                \"PP-G0\"\n            ],\n            [\n                33,\n                \"PP-A0\"\n            ],\n            [\n                35,\n                \"PP-B0\"\n            ],\n            [\n                37,\n                \"PP-C#1\"\n            ],\n            [\n                38,\n                \"PP-D1\"\n            ],\n            [\n                40,\n                \"PP-E1\"\n            ],\n            [\n                41,\n                \"PP-F1\"\n            ],\n            [\n                43,\n                \"PP-G1\"\n            ],\n            [\n                45,\n                \"PP-A1\"\n            ],\n            [\n                47,\n                \"PP-B1\"\n            ],\n            [\n                48,\n                \"PP-C2\"\n            ],\n            [\n                50,\n                \"PP-D2\"\n            ],\n            [\n                52,\n                \"PP-E2\"\n            ],\n            [\n                53,\n                \"PP-F2\"\n            ],\n            [\n                55,\n                \"PP-G2\"\n            ],\n            [\n                56,\n                \"PP-G#2\"\n            ],\n            [\n                57,\n                \"PP-A2\"\n            ],\n            [\n                58,\n                \"PP-A#2\"\n            ],\n            [\n                59,\n                \"PP-B2\"\n            ],\n            [\n                60,\n                \"PP-C3\"\n            ],\n            [\n                62,\n                \"PP-D3\"\n            ],\n            [\n                64,\n                \"PP-E3\"\n            ],\n            [\n                65,\n                \"PP-F3\"\n            ],\n            [\n                67,\n                \"PP-G3\"\n            ],\n            [\n                69,\n                \"PP-A3\"\n            ],\n            [\n                71,\n                \"PP-B3\"\n            ],\n            [\n                72,\n                \"PP-C4\"\n            ],\n            [\n                74,\n                \"PP-D4\"\n            ],\n            [\n                76,\n                \"PP-E4\"\n            ],\n            [\n                77,\n                \"PP-F4\"\n            ],\n            [\n                79,\n                \"PP-G4\"\n            ],\n            [\n                80,\n                \"PP-G#4\"\n            ],\n            [\n                81,\n                \"PP-A4\"\n            ],\n            [\n                82,\n                \"PP-A#4\"\n            ],\n            [\n                83,\n                \"PP-B4\"\n            ],\n            [\n                85,\n                \"PP-C#5\"\n            ],\n            [\n                86,\n                \"PP-D5\"\n            ],\n            [\n                87,\n                \"PP-D#5\"\n            ],\n            [\n                89,\n                \"PP-F5\"\n            ],\n            [\n                90,\n                \"PP-F#5\"\n            ],\n            [\n                91,\n                \"PP-G5\"\n            ],\n            [\n                92,\n                \"PP-G#5\"\n            ],\n            [\n                93,\n                \"PP-A5\"\n            ],\n            [\n                94,\n                \"PP-A#5\"\n            ],\n            [\n                95,\n                \"PP-B5\"\n            ],\n            [\n                96,\n                \"PP-C6\"\n            ],\n            [\n                97,\n                \"PP-C#6\"\n            ],\n            [\n                98,\n                \"PP-D6\"\n            ],\n            [\n                99,\n                \"PP-D#6\"\n            ],\n            [\n                100,\n                \"PP-E6\"\n            ],\n            [\n                101,\n                \"PP-F6\"\n            ],\n            [\n                102,\n                \"PP-F#6\"\n            ],\n            [\n                103,\n                \"PP-G6\"\n            ],\n            [\n                104,\n                \"PP-G#6\"\n            ],\n            [\n                105,\n                \"PP-A6\"\n            ],\n            [\n                106,\n                \"PP-A#6\"\n            ],\n            [\n                107,\n                \"PP-B6\"\n            ],\n            [\n                108,\n                \"PP-C7\"\n            ]\n        ]\n    },\n    {\n        name: \"MP\",\n        vel_range: [\n            68,\n            84\n        ],\n        samples: [\n            [\n                23,\n                \"Mp-B-1\"\n            ],\n            [\n                27,\n                \"Mp-D#0\"\n            ],\n            [\n                29,\n                \"Mp-F0\"\n            ],\n            [\n                31,\n                \"Mp-G0\"\n            ],\n            [\n                33,\n                \"Mp-A0\"\n            ],\n            [\n                35,\n                \"Mp-B0\"\n            ],\n            [\n                37,\n                \"Mp-C#1\"\n            ],\n            [\n                38,\n                \"Mp-D1\"\n            ],\n            [\n                40,\n                \"Mp-E1\"\n            ],\n            [\n                41,\n                \"Mp-F1\"\n            ],\n            [\n                43,\n                \"Mp-G1\"\n            ],\n            [\n                45,\n                \"Mp-A1\"\n            ],\n            [\n                47,\n                \"Mp-B1\"\n            ],\n            [\n                48,\n                \"Mp-C2\"\n            ],\n            [\n                50,\n                \"Mp-D2\"\n            ],\n            [\n                52,\n                \"Mp-E2\"\n            ],\n            [\n                53,\n                \"Mp-F2\"\n            ],\n            [\n                55,\n                \"Mp-G2\"\n            ],\n            [\n                56,\n                \"Mp-G#2\"\n            ],\n            [\n                57,\n                \"Mp-A2\"\n            ],\n            [\n                58,\n                \"Mp-A#2\"\n            ],\n            [\n                59,\n                \"Mp-B2\"\n            ],\n            [\n                60,\n                \"Mp-C3\"\n            ],\n            [\n                62,\n                \"Mp-D3\"\n            ],\n            [\n                64,\n                \"Mp-E3\"\n            ],\n            [\n                65,\n                \"Mp-F3\"\n            ],\n            [\n                67,\n                \"Mp-G3\"\n            ],\n            [\n                69,\n                \"Mp-A3\"\n            ],\n            [\n                71,\n                \"Mp-B3\"\n            ],\n            [\n                72,\n                \"Mp-C4\"\n            ],\n            [\n                74,\n                \"Mp-D4\"\n            ],\n            [\n                76,\n                \"Mp-E4\"\n            ],\n            [\n                77,\n                \"Mp-F4\"\n            ],\n            [\n                79,\n                \"Mp-G4\"\n            ],\n            [\n                80,\n                \"Mp-G#4\"\n            ],\n            [\n                81,\n                \"Mp-A4\"\n            ],\n            [\n                82,\n                \"Mp-A#4\"\n            ],\n            [\n                83,\n                \"Mp-B4\"\n            ],\n            [\n                85,\n                \"Mp-C#5\"\n            ],\n            [\n                86,\n                \"Mp-D5\"\n            ],\n            [\n                87,\n                \"Mp-D#5\"\n            ],\n            [\n                88,\n                \"Mp-E5\"\n            ],\n            [\n                89,\n                \"Mp-F5\"\n            ],\n            [\n                90,\n                \"Mp-F#5\"\n            ],\n            [\n                91,\n                \"Mp-G5\"\n            ],\n            [\n                92,\n                \"Mp-G#5\"\n            ],\n            [\n                93,\n                \"Mp-A5\"\n            ],\n            [\n                94,\n                \"Mp-A#5\"\n            ],\n            [\n                95,\n                \"Mp-B5\"\n            ],\n            [\n                96,\n                \"Mp-C6\"\n            ],\n            [\n                97,\n                \"Mp-C#6\"\n            ],\n            [\n                98,\n                \"Mp-D6\"\n            ],\n            [\n                99,\n                \"Mp-D#6\"\n            ],\n            [\n                100,\n                \"PP-E6\"\n            ],\n            [\n                101,\n                \"Mp-F6\"\n            ],\n            [\n                102,\n                \"Mp-F#6\"\n            ],\n            [\n                103,\n                \"Mp-G6\"\n            ],\n            [\n                104,\n                \"Mp-G#6\"\n            ],\n            [\n                105,\n                \"Mp-A6\"\n            ],\n            [\n                106,\n                \"Mp-A#6\"\n            ],\n            [\n                107,\n                \"PP-B6\"\n            ],\n            [\n                108,\n                \"PP-C7\"\n            ]\n        ]\n    },\n    {\n        name: \"MF\",\n        vel_range: [\n            85,\n            100\n        ],\n        samples: [\n            [\n                23,\n                \"Mf-B-1\"\n            ],\n            [\n                27,\n                \"Mf-D#0\"\n            ],\n            [\n                29,\n                \"Mf-F0\"\n            ],\n            [\n                31,\n                \"Mf-G0\"\n            ],\n            [\n                33,\n                \"Mf-A0\"\n            ],\n            [\n                35,\n                \"Mf-B0\"\n            ],\n            [\n                37,\n                \"Mf-C#1\"\n            ],\n            [\n                38,\n                \"Mf-D1\"\n            ],\n            [\n                40,\n                \"Mf-E1\"\n            ],\n            [\n                41,\n                \"Mf-F1\"\n            ],\n            [\n                43,\n                \"Mf-G1\"\n            ],\n            [\n                45,\n                \"Mf-A1\"\n            ],\n            [\n                47,\n                \"Mf-B1\"\n            ],\n            [\n                48,\n                \"Mf-C2\"\n            ],\n            [\n                50,\n                \"Mf-D2\"\n            ],\n            [\n                52,\n                \"Mf-E2\"\n            ],\n            [\n                53,\n                \"Mf-F2\"\n            ],\n            [\n                55,\n                \"Mf-G2\"\n            ],\n            [\n                56,\n                \"Mf-G#2\"\n            ],\n            [\n                57,\n                \"Mf-A2\"\n            ],\n            [\n                58,\n                \"Mf-A#2\"\n            ],\n            [\n                59,\n                \"Mf-B2\"\n            ],\n            [\n                60,\n                \"Mf-C3\"\n            ],\n            [\n                62,\n                \"Mf-D3\"\n            ],\n            [\n                64,\n                \"Mf-E3\"\n            ],\n            [\n                65,\n                \"Mf-F3\"\n            ],\n            [\n                67,\n                \"Mf-G3\"\n            ],\n            [\n                69,\n                \"Mf-A3\"\n            ],\n            [\n                71,\n                \"Mf-B3\"\n            ],\n            [\n                72,\n                \"Mf-C4\"\n            ],\n            [\n                74,\n                \"Mf-D4\"\n            ],\n            [\n                76,\n                \"Mf-E4\"\n            ],\n            [\n                77,\n                \"Mf-F4\"\n            ],\n            [\n                79,\n                \"Mf-G4\"\n            ],\n            [\n                80,\n                \"Mf-G#4\"\n            ],\n            [\n                81,\n                \"Mf-A4\"\n            ],\n            [\n                82,\n                \"Mf-A#4\"\n            ],\n            [\n                83,\n                \"Mf-B4\"\n            ],\n            [\n                85,\n                \"Mf-C#5\"\n            ],\n            [\n                86,\n                \"Mf-D5\"\n            ],\n            [\n                87,\n                \"Mf-D#5\"\n            ],\n            [\n                88,\n                \"Mf-E5\"\n            ],\n            [\n                89,\n                \"Mf-F5\"\n            ],\n            [\n                90,\n                \"Mf-F#5\"\n            ],\n            [\n                91,\n                \"Mf-G5\"\n            ],\n            [\n                92,\n                \"Mf-G#5\"\n            ],\n            [\n                93,\n                \"Mf-A5\"\n            ],\n            [\n                94,\n                \"Mf-A#5\"\n            ],\n            [\n                95,\n                \"Mf-B5\"\n            ],\n            [\n                96,\n                \"Mf-C6\"\n            ],\n            [\n                97,\n                \"Mf-C#6\"\n            ],\n            [\n                98,\n                \"Mf-D6\"\n            ],\n            [\n                99,\n                \"Mf-D#6\"\n            ],\n            [\n                100,\n                \"Mf-E6\"\n            ],\n            [\n                101,\n                \"Mf-F6\"\n            ],\n            [\n                102,\n                \"Mf-F#6\"\n            ],\n            [\n                103,\n                \"Mf-G6\"\n            ],\n            [\n                104,\n                \"Mf-G#6\"\n            ],\n            [\n                105,\n                \"Mf-A6\"\n            ],\n            [\n                106,\n                \"Mf-A#6\"\n            ],\n            [\n                107,\n                \"Mf-B6\"\n            ],\n            [\n                108,\n                \"PP-C7\"\n            ]\n        ]\n    },\n    {\n        name: \"FF\",\n        vel_range: [\n            101,\n            127\n        ],\n        samples: [\n            [\n                23,\n                \"FF-B-1\"\n            ],\n            [\n                27,\n                \"FF-D#0\"\n            ],\n            [\n                29,\n                \"FF-F0\"\n            ],\n            [\n                31,\n                \"FF-G0\"\n            ],\n            [\n                33,\n                \"FF-A0\"\n            ],\n            [\n                35,\n                \"FF-B0\"\n            ],\n            [\n                37,\n                \"FF-C#1\"\n            ],\n            [\n                38,\n                \"FF-D1\"\n            ],\n            [\n                40,\n                \"FF-E1\"\n            ],\n            [\n                41,\n                \"FF-F1\"\n            ],\n            [\n                43,\n                \"FF-G1\"\n            ],\n            [\n                45,\n                \"FF-A1\"\n            ],\n            [\n                47,\n                \"FF-B1\"\n            ],\n            [\n                48,\n                \"FF-C2\"\n            ],\n            [\n                50,\n                \"FF-D2\"\n            ],\n            [\n                52,\n                \"FF-E2\"\n            ],\n            [\n                53,\n                \"FF-F2\"\n            ],\n            [\n                55,\n                \"FF-G2\"\n            ],\n            [\n                56,\n                \"FF-G#2\"\n            ],\n            [\n                57,\n                \"FF-A2\"\n            ],\n            [\n                58,\n                \"FF-A#2\"\n            ],\n            [\n                59,\n                \"FF-B2\"\n            ],\n            [\n                60,\n                \"FF-C3\"\n            ],\n            [\n                62,\n                \"FF-D3\"\n            ],\n            [\n                64,\n                \"FF-E3\"\n            ],\n            [\n                65,\n                \"FF-F3\"\n            ],\n            [\n                67,\n                \"FF-G3\"\n            ],\n            [\n                69,\n                \"FF-A3\"\n            ],\n            [\n                71,\n                \"FF-B3\"\n            ],\n            [\n                72,\n                \"FF-C4\"\n            ],\n            [\n                74,\n                \"FF-D4\"\n            ],\n            [\n                76,\n                \"FF-E4\"\n            ],\n            [\n                77,\n                \"FF-F4\"\n            ],\n            [\n                79,\n                \"FF-G4\"\n            ],\n            [\n                80,\n                \"FF-G#4\"\n            ],\n            [\n                81,\n                \"FF-A4\"\n            ],\n            [\n                82,\n                \"FF-A#4\"\n            ],\n            [\n                83,\n                \"FF-B4\"\n            ],\n            [\n                85,\n                \"FF-C#5\"\n            ],\n            [\n                86,\n                \"FF-D5\"\n            ],\n            [\n                88,\n                \"FF-E5\"\n            ],\n            [\n                89,\n                \"FF-F5\"\n            ],\n            [\n                91,\n                \"FF-G5\"\n            ],\n            [\n                93,\n                \"FF-A5\"\n            ],\n            [\n                95,\n                \"Mf-B5\"\n            ],\n            [\n                96,\n                \"Mf-C6\"\n            ],\n            [\n                97,\n                \"Mf-C#6\"\n            ],\n            [\n                98,\n                \"Mf-D6\"\n            ],\n            [\n                99,\n                \"Mf-D#6\"\n            ],\n            [\n                100,\n                \"Mf-E6\"\n            ],\n            [\n                102,\n                \"Mf-F#6\"\n            ],\n            [\n                103,\n                \"Mf-G6\"\n            ],\n            [\n                104,\n                \"Mf-G#6\"\n            ],\n            [\n                105,\n                \"Mf-A6\"\n            ],\n            [\n                106,\n                \"Mf-A#6\"\n            ],\n            [\n                107,\n                \"Mf-B6\"\n            ],\n            [\n                108,\n                \"Mf-C7\"\n            ]\n        ]\n    }\n];\n\n\nconst $6b17f08f738443dc$var$context = new AudioContext();\nconst $6b17f08f738443dc$var$marimba = new (0, $0d19688bebdb26f8$export$508265175ec7f40e)($6b17f08f738443dc$var$context, {\n    instrument: \"marimba\"\n});\nconst $6b17f08f738443dc$var$piano = new (0, $0d19688bebdb26f8$export$589c152416f2342b)($6b17f08f738443dc$var$context);\nconst $6b17f08f738443dc$var$flute = new (0, $0d19688bebdb26f8$export$508265175ec7f40e)($6b17f08f738443dc$var$context, {\n    instrument: \"flute\"\n});\nconst $6b17f08f738443dc$var$cello = new (0, $0d19688bebdb26f8$export$508265175ec7f40e)($6b17f08f738443dc$var$context, {\n    instrument: \"cello\"\n});\ndocument.getElementById(\"marimba\").onclick = ()=>{\n    $6b17f08f738443dc$var$context.resume();\n    $6b17f08f738443dc$var$marimba.start({\n        note: 60,\n        velocity: 80\n    });\n    setTimeout(()=>{\n        $6b17f08f738443dc$var$marimba.stop(60);\n    }, 1000);\n};\ndocument.getElementById(\"piano\").onclick = ()=>{\n    $6b17f08f738443dc$var$context.resume();\n    $6b17f08f738443dc$var$piano.start({\n        note: 60,\n        velocity: 80\n    });\n    setTimeout(()=>{\n        $6b17f08f738443dc$var$piano.stop(60);\n    }, 1000);\n};\ndocument.getElementById(\"flute\").onclick = ()=>{\n    $6b17f08f738443dc$var$context.resume();\n    $6b17f08f738443dc$var$flute.start({\n        note: 72,\n        velocity: 80\n    });\n    setTimeout(()=>{\n        $6b17f08f738443dc$var$flute.stop(72);\n    }, 1000);\n};\ndocument.getElementById(\"cello\").onclick = ()=>{\n    $6b17f08f738443dc$var$context.resume();\n    $6b17f08f738443dc$var$cello.start({\n        note: 48,\n        velocity: 80\n    });\n    setTimeout(()=>{\n        $6b17f08f738443dc$var$cello.stop(48);\n    }, 1000);\n} //SOUNDFONT_INSTRUMENTS = [\n //   \"accordion\",\n //   \"acoustic_bass\",\n //   \"acoustic_grand_piano\",\n //   \"acoustic_guitar_nylon\",\n //   \"acoustic_guitar_steel\",\n //   \"agogo\",\n //   \"alto_sax\",\n //   \"applause\",\n //   \"bagpipe\",\n //   \"banjo\",\n //   \"baritone_sax\",\n //   \"bassoon\",\n //   \"bird_tweet\",\n //   \"blown_bottle\",\n //   \"brass_section\",\n //   \"breath_noise\",\n //   \"bright_acoustic_piano\",\n //   \"celesta\",\n //   \"cello\",\n //   \"choir_aahs\",\n //   \"church_organ\",\n //   \"clarinet\",\n //   \"clavinet\",\n //   \"contrabass\",\n //   \"distortion_guitar\",\n //   \"drawbar_organ\",\n //   \"dulcimer\",\n //   \"electric_bass_finger\",\n //   \"electric_bass_pick\",\n //   \"electric_grand_piano\",\n //   \"electric_guitar_clean\",\n //   \"electric_guitar_jazz\",\n //   \"electric_guitar_muted\",\n //   \"electric_piano_1\",\n //   \"electric_piano_2\",\n //   \"english_horn\",\n //   \"fiddle\",\n //   \"flute\",\n //   \"french_horn\",\n //   \"fretless_bass\",\n //   \"fx_1_rain\",\n //   \"fx_2_soundtrack\",\n //   \"fx_3_crystal\",\n //   \"fx_4_atmosphere\",\n //   \"fx_5_brightness\",\n //   \"fx_6_goblins\",\n //   \"fx_7_echoes\",\n //   \"fx_8_scifi\",\n //   \"glockenspiel\",\n //   \"guitar_fret_noise\",\n //   \"guitar_harmonics\",\n //   \"gunshot\",\n //   \"harmonica\",\n //   \"harpsichord\",\n //   \"helicopter\",\n //   \"honkytonk_piano\",\n //   \"kalimba\",\n //   \"koto\",\n //   \"lead_1_square\",\n //   \"lead_2_sawtooth\",\n //   \"lead_3_calliope\",\n //   \"lead_4_chiff\",\n //   \"lead_5_charang\",\n //   \"lead_6_voice\",\n //   \"lead_7_fifths\",\n //   \"lead_8_bass__lead\",\n //   \"marimba\",\n //   \"melodic_tom\",\n //   \"music_box\",\n //   \"muted_trumpet\",\n //   \"oboe\",\n //   \"ocarina\",\n //   \"orchestra_hit\",\n //   \"orchestral_harp\",\n //   \"overdriven_guitar\",\n //   \"pad_1_new_age\",\n //   \"pad_2_warm\",\n //   \"pad_3_polysynth\",\n //   \"pad_4_choir\",\n //   \"pad_5_bowed\",\n //   \"pad_6_metallic\",\n //   \"pad_7_halo\",\n //   \"pad_8_sweep\",\n //   \"pan_flute\",\n //   \"percussive_organ\",\n //   \"piccolo\",\n //   \"pizzicato_strings\",\n //   \"recorder\",\n //   \"reed_organ\",\n //   \"reverse_cymbal\",\n //   \"rock_organ\",\n //   \"seashore\",\n //   \"shakuhachi\",\n //   \"shamisen\",\n //   \"shanai\",\n //   \"sitar\",\n //   \"slap_bass_1\",\n //   \"slap_bass_2\",\n //   \"soprano_sax\",\n //   \"steel_drums\",\n //   \"string_ensemble_1\",\n //   \"string_ensemble_2\",\n //   \"synth_bass_1\",\n //   \"synth_bass_2\",\n //   \"synth_brass_1\",\n //   \"synth_brass_2\",\n //   \"synth_choir\",\n //   \"synth_drum\",\n //   \"synth_strings_1\",\n //   \"synth_strings_2\",\n //   \"taiko_drum\",\n //   \"tango_accordion\",\n //   \"telephone_ring\",\n //   \"tenor_sax\",\n //   \"timpani\",\n //   \"tinkle_bell\",\n //   \"tremolo_strings\",\n //   \"trombone\",\n //   \"trumpet\",\n //   \"tuba\",\n //   \"tubular_bells\",\n //   \"vibraphone\",\n //   \"viola\",\n //   \"violin\",\n //   \"voice_oohs\",\n //   \"whistle\",\n //   \"woodblock\",\n //   \"xylophone\",\n // ];\n;\n\n\n//# sourceMappingURL=index.be3d89a1.js.map\n","import {Soundfont, SplendidGrandPiano} from \"smplr\";\n\nconst context = new AudioContext();\nconst marimba = new Soundfont(context, {instrument: \"marimba\"});\nconst piano =  new SplendidGrandPiano(context);\nconst flute = new Soundfont(context, {instrument: \"flute\"});\nconst cello= new Soundfont(context, {instrument: \"cello\"});\n\ndocument.getElementById(\"marimba\").onclick = ()=>{\n    context.resume()\n    marimba.start({note: 60, velocity: 80});\n    setTimeout(()=>{marimba.stop(60)}, 1000)\n}\n\ndocument.getElementById(\"piano\").onclick = ()=>{\n    context.resume()\n    piano.start({note: 60, velocity: 80});\n    setTimeout(()=>{piano.stop(60)}, 1000)\n}\n\ndocument.getElementById(\"flute\").onclick = ()=>{\n    context.resume()\n    flute.start({note: 72, velocity: 80});\n    setTimeout(()=>{flute.stop(72)}, 1000)\n}\n\ndocument.getElementById(\"cello\").onclick = ()=>{\n    context.resume()\n    cello.start({note: 48, velocity: 80});\n    setTimeout(()=>{cello.stop(48)}, 1000)\n}\n\n\n\n\n\n//SOUNDFONT_INSTRUMENTS = [\n//   \"accordion\",\n//   \"acoustic_bass\",\n//   \"acoustic_grand_piano\",\n//   \"acoustic_guitar_nylon\",\n//   \"acoustic_guitar_steel\",\n//   \"agogo\",\n//   \"alto_sax\",\n//   \"applause\",\n//   \"bagpipe\",\n//   \"banjo\",\n//   \"baritone_sax\",\n//   \"bassoon\",\n//   \"bird_tweet\",\n//   \"blown_bottle\",\n//   \"brass_section\",\n//   \"breath_noise\",\n//   \"bright_acoustic_piano\",\n//   \"celesta\",\n//   \"cello\",\n//   \"choir_aahs\",\n//   \"church_organ\",\n//   \"clarinet\",\n//   \"clavinet\",\n//   \"contrabass\",\n//   \"distortion_guitar\",\n//   \"drawbar_organ\",\n//   \"dulcimer\",\n//   \"electric_bass_finger\",\n//   \"electric_bass_pick\",\n//   \"electric_grand_piano\",\n//   \"electric_guitar_clean\",\n//   \"electric_guitar_jazz\",\n//   \"electric_guitar_muted\",\n//   \"electric_piano_1\",\n//   \"electric_piano_2\",\n//   \"english_horn\",\n//   \"fiddle\",\n//   \"flute\",\n//   \"french_horn\",\n//   \"fretless_bass\",\n//   \"fx_1_rain\",\n//   \"fx_2_soundtrack\",\n//   \"fx_3_crystal\",\n//   \"fx_4_atmosphere\",\n//   \"fx_5_brightness\",\n//   \"fx_6_goblins\",\n//   \"fx_7_echoes\",\n//   \"fx_8_scifi\",\n//   \"glockenspiel\",\n//   \"guitar_fret_noise\",\n//   \"guitar_harmonics\",\n//   \"gunshot\",\n//   \"harmonica\",\n//   \"harpsichord\",\n//   \"helicopter\",\n//   \"honkytonk_piano\",\n//   \"kalimba\",\n//   \"koto\",\n//   \"lead_1_square\",\n//   \"lead_2_sawtooth\",\n//   \"lead_3_calliope\",\n//   \"lead_4_chiff\",\n//   \"lead_5_charang\",\n//   \"lead_6_voice\",\n//   \"lead_7_fifths\",\n//   \"lead_8_bass__lead\",\n//   \"marimba\",\n//   \"melodic_tom\",\n//   \"music_box\",\n//   \"muted_trumpet\",\n//   \"oboe\",\n//   \"ocarina\",\n//   \"orchestra_hit\",\n//   \"orchestral_harp\",\n//   \"overdriven_guitar\",\n//   \"pad_1_new_age\",\n//   \"pad_2_warm\",\n//   \"pad_3_polysynth\",\n//   \"pad_4_choir\",\n//   \"pad_5_bowed\",\n//   \"pad_6_metallic\",\n//   \"pad_7_halo\",\n//   \"pad_8_sweep\",\n//   \"pan_flute\",\n//   \"percussive_organ\",\n//   \"piccolo\",\n//   \"pizzicato_strings\",\n//   \"recorder\",\n//   \"reed_organ\",\n//   \"reverse_cymbal\",\n//   \"rock_organ\",\n//   \"seashore\",\n//   \"shakuhachi\",\n//   \"shamisen\",\n//   \"shanai\",\n//   \"sitar\",\n//   \"slap_bass_1\",\n//   \"slap_bass_2\",\n//   \"soprano_sax\",\n//   \"steel_drums\",\n//   \"string_ensemble_1\",\n//   \"string_ensemble_2\",\n//   \"synth_bass_1\",\n//   \"synth_bass_2\",\n//   \"synth_brass_1\",\n//   \"synth_brass_2\",\n//   \"synth_choir\",\n//   \"synth_drum\",\n//   \"synth_strings_1\",\n//   \"synth_strings_2\",\n//   \"taiko_drum\",\n//   \"tango_accordion\",\n//   \"telephone_ring\",\n//   \"tenor_sax\",\n//   \"timpani\",\n//   \"tinkle_bell\",\n//   \"tremolo_strings\",\n//   \"trombone\",\n//   \"trumpet\",\n//   \"tuba\",\n//   \"tubular_bells\",\n//   \"vibraphone\",\n//   \"viola\",\n//   \"violin\",\n//   \"voice_oohs\",\n//   \"whistle\",\n//   \"woodblock\",\n//   \"xylophone\",\n// ];","var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/player/connect.ts\nfunction connectSerial(nodes) {\n  const _nodes = nodes.filter((x) => !!x);\n  _nodes.reduce((a, b) => {\n    const left = \"output\" in a ? a.output : a;\n    const right = \"input\" in b ? b.input : b;\n    left.connect(right);\n    return b;\n  });\n  return () => {\n    _nodes.reduce((a, b) => {\n      const left = \"output\" in a ? a.output : a;\n      const right = \"input\" in b ? b.input : b;\n      left.disconnect(right);\n      return b;\n    });\n  };\n}\n\n// src/player/signals.ts\nfunction createControl(initialValue) {\n  let current = initialValue;\n  const listeners = /* @__PURE__ */ new Set();\n  function subscribe(listener) {\n    listeners.add(listener);\n    listener(current);\n    return () => {\n      listeners.delete(listener);\n    };\n  }\n  function set(value) {\n    current = value;\n    listeners.forEach((listener) => listener(current));\n  }\n  function get() {\n    return current;\n  }\n  return { subscribe, set, get };\n}\nfunction createTrigger() {\n  const listeners = /* @__PURE__ */ new Set();\n  function subscribe(listener) {\n    listeners.add(listener);\n    return () => {\n      listeners.delete(listener);\n    };\n  }\n  function trigger(value) {\n    listeners.forEach((listener) => listener(value));\n  }\n  return { subscribe, trigger };\n}\nfunction unsubscribeAll(unsubscribe) {\n  let done = false;\n  return () => {\n    if (done)\n      return;\n    done = true;\n    unsubscribe.forEach((cb) => cb == null ? void 0 : cb());\n  };\n}\n\n// src/player/volume.ts\nfunction midiVelToGain(vel) {\n  return vel * vel / 16129;\n}\nfunction dbToGain(decibels) {\n  return Math.pow(10, decibels / 20);\n}\n\n// src/player/channel.ts\nvar _volume, _sends, _inserts, _disconnect, _unsubscribe, _config, _disconnected;\nvar Channel = class {\n  constructor(context, options) {\n    this.context = context;\n    __privateAdd(this, _volume, void 0);\n    __privateAdd(this, _sends, void 0);\n    __privateAdd(this, _inserts, void 0);\n    __privateAdd(this, _disconnect, void 0);\n    __privateAdd(this, _unsubscribe, void 0);\n    __privateAdd(this, _config, void 0);\n    __privateAdd(this, _disconnected, false);\n    var _a, _b, _c;\n    __privateSet(this, _config, {\n      destination: (_a = options == null ? void 0 : options.destination) != null ? _a : context.destination,\n      volume: (_b = options == null ? void 0 : options.volume) != null ? _b : 100,\n      volumeToGain: (_c = options == null ? void 0 : options.volumeToGain) != null ? _c : midiVelToGain\n    });\n    this.input = context.createGain();\n    __privateSet(this, _volume, context.createGain());\n    __privateSet(this, _disconnect, connectSerial([\n      this.input,\n      __privateGet(this, _volume),\n      __privateGet(this, _config).destination\n    ]));\n    const volume = createControl(__privateGet(this, _config).volume);\n    this.setVolume = volume.set;\n    __privateSet(this, _unsubscribe, volume.subscribe((volume2) => {\n      __privateGet(this, _volume).gain.value = __privateGet(this, _config).volumeToGain(volume2);\n    }));\n  }\n  addInsert(effect) {\n    var _a;\n    if (__privateGet(this, _disconnected)) {\n      throw Error(\"Can't add insert to disconnected channel\");\n    }\n    (_a = __privateGet(this, _inserts)) != null ? _a : __privateSet(this, _inserts, []);\n    __privateGet(this, _inserts).push(effect);\n    __privateGet(this, _disconnect).call(this);\n    __privateSet(this, _disconnect, connectSerial([\n      this.input,\n      ...__privateGet(this, _inserts),\n      __privateGet(this, _volume),\n      __privateGet(this, _config).destination\n    ]));\n  }\n  addEffect(name, effect, mixValue) {\n    var _a;\n    if (__privateGet(this, _disconnected)) {\n      throw Error(\"Can't add effect to disconnected channel\");\n    }\n    const mix = this.context.createGain();\n    mix.gain.value = mixValue;\n    const input = \"input\" in effect ? effect.input : effect;\n    const disconnect = connectSerial([__privateGet(this, _volume), mix, input]);\n    (_a = __privateGet(this, _sends)) != null ? _a : __privateSet(this, _sends, []);\n    __privateGet(this, _sends).push({ name, mix, disconnect });\n  }\n  sendEffect(name, mix) {\n    var _a;\n    if (__privateGet(this, _disconnected)) {\n      throw Error(\"Can't send effect to disconnected channel\");\n    }\n    const send = (_a = __privateGet(this, _sends)) == null ? void 0 : _a.find((send2) => send2.name === name);\n    if (send) {\n      send.mix.gain.value = mix;\n    } else {\n      console.warn(\"Send bus not found: \" + name);\n    }\n  }\n  disconnect() {\n    var _a;\n    if (__privateGet(this, _disconnected))\n      return;\n    __privateSet(this, _disconnected, true);\n    __privateGet(this, _disconnect).call(this);\n    __privateGet(this, _unsubscribe).call(this);\n    (_a = __privateGet(this, _sends)) == null ? void 0 : _a.forEach((send) => send.disconnect());\n    __privateSet(this, _sends, void 0);\n  }\n};\n_volume = new WeakMap();\n_sends = new WeakMap();\n_inserts = new WeakMap();\n_disconnect = new WeakMap();\n_unsubscribe = new WeakMap();\n_config = new WeakMap();\n_disconnected = new WeakMap();\n\n// src/player/sorted-queue.ts\nvar _items;\nvar SortedQueue = class {\n  constructor(compare) {\n    this.compare = compare;\n    __privateAdd(this, _items, []);\n  }\n  push(item) {\n    const len = __privateGet(this, _items).length;\n    let left = 0;\n    let right = len - 1;\n    let index = len;\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2);\n      if (this.compare(item, __privateGet(this, _items)[mid]) < 0) {\n        index = mid;\n        right = mid - 1;\n      } else {\n        left = mid + 1;\n      }\n    }\n    __privateGet(this, _items).splice(index, 0, item);\n  }\n  pop() {\n    return __privateGet(this, _items).shift();\n  }\n  peek() {\n    return __privateGet(this, _items)[0];\n  }\n  removeAll(predicate) {\n    const len = __privateGet(this, _items).length;\n    __privateSet(this, _items, __privateGet(this, _items).filter((item) => !predicate(item)));\n    return __privateGet(this, _items).length !== len;\n  }\n  clear() {\n    __privateSet(this, _items, []);\n  }\n  size() {\n    return __privateGet(this, _items).length;\n  }\n};\n_items = new WeakMap();\n\n// src/player/queued-player.ts\nfunction compose(a, b) {\n  return a && b ? (x) => {\n    a(x);\n    b(x);\n  } : a != null ? a : b;\n}\nfunction getConfig(options) {\n  var _a, _b;\n  const config = {\n    scheduleLookaheadMs: (_a = options.scheduleLookaheadMs) != null ? _a : 200,\n    scheduleIntervalMs: (_b = options.scheduleIntervalMs) != null ? _b : 50,\n    onStart: options.onStart,\n    onEnded: options.onEnded\n  };\n  if (config.scheduleLookaheadMs < 1) {\n    throw Error(\"scheduleLookaheadMs must be greater than 0\");\n  }\n  if (config.scheduleIntervalMs < 1) {\n    throw Error(\"scheduleIntervalMs must be greater than 0\");\n  }\n  if (config.scheduleLookaheadMs < config.scheduleIntervalMs) {\n    throw Error(\"scheduleLookaheadMs must be greater than scheduleIntervalMs\");\n  }\n  return config;\n}\nvar _config2, _queue, _intervalId;\nvar QueuedPlayer = class {\n  constructor(player, options = {}) {\n    __privateAdd(this, _config2, void 0);\n    __privateAdd(this, _queue, void 0);\n    __privateAdd(this, _intervalId, void 0);\n    __privateSet(this, _config2, getConfig(options));\n    __privateSet(this, _queue, new SortedQueue(\n      (a, b) => a.time - b.time\n    ));\n    this.player = player;\n  }\n  get context() {\n    return this.player.context;\n  }\n  get buffers() {\n    return this.player.buffers;\n  }\n  get isRunning() {\n    return __privateGet(this, _intervalId) !== void 0;\n  }\n  start(sample) {\n    var _a;\n    const context = this.player.context;\n    const now = context.currentTime;\n    const startAt = (_a = sample.time) != null ? _a : now;\n    const lookAhead = __privateGet(this, _config2).scheduleLookaheadMs / 1e3;\n    sample.onStart = compose(sample.onStart, __privateGet(this, _config2).onStart);\n    sample.onEnded = compose(sample.onEnded, __privateGet(this, _config2).onEnded);\n    if (startAt < now + lookAhead) {\n      return this.player.start(sample);\n    }\n    __privateGet(this, _queue).push(__spreadProps(__spreadValues({}, sample), { time: startAt }));\n    if (!__privateGet(this, _intervalId)) {\n      __privateSet(this, _intervalId, setInterval(() => {\n        const nextTick = context.currentTime + lookAhead;\n        while (__privateGet(this, _queue).size() && __privateGet(this, _queue).peek().time <= nextTick) {\n          const sample2 = __privateGet(this, _queue).pop();\n          if (sample2) {\n            this.player.start(sample2);\n          }\n        }\n        if (!__privateGet(this, _queue).size()) {\n          clearInterval(__privateGet(this, _intervalId));\n          __privateSet(this, _intervalId, void 0);\n        }\n      }, __privateGet(this, _config2).scheduleIntervalMs));\n    }\n    return (time) => {\n      if (!time || time < startAt) {\n        if (!__privateGet(this, _queue).removeAll((item) => item === sample)) {\n          this.player.stop(__spreadProps(__spreadValues({}, sample), { time }));\n        }\n      } else {\n        this.player.stop(__spreadProps(__spreadValues({}, sample), { time }));\n      }\n    };\n  }\n  stop(sample) {\n    var _a;\n    this.player.stop(sample);\n    if (!sample) {\n      __privateGet(this, _queue).clear();\n      return;\n    }\n    const time = (_a = sample == null ? void 0 : sample.time) != null ? _a : 0;\n    const stopId = sample == null ? void 0 : sample.stopId;\n    if (stopId) {\n      __privateGet(this, _queue).removeAll(\n        (item) => item.time >= time && item.stopId ? item.stopId === stopId : item.note === stopId\n      );\n    } else {\n      __privateGet(this, _queue).removeAll((item) => item.time >= time);\n    }\n  }\n  disconnect() {\n    this.player.disconnect();\n  }\n};\n_config2 = new WeakMap();\n_queue = new WeakMap();\n_intervalId = new WeakMap();\n\n// src/player/sample-player.ts\nvar _config3, _disconnected2, _stop;\nvar SamplePlayer = class {\n  constructor(context, options) {\n    this.context = context;\n    this.options = options;\n    __privateAdd(this, _config3, void 0);\n    __privateAdd(this, _disconnected2, false);\n    __privateAdd(this, _stop, void 0);\n    var _a, _b;\n    __privateSet(this, _config3, {\n      velocityToGain: (_a = options.velocityToGain) != null ? _a : midiVelToGain,\n      destination: (_b = options.destination) != null ? _b : context.destination\n    });\n    this.buffers = {};\n    __privateSet(this, _stop, createTrigger());\n  }\n  start(sample) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;\n    if (__privateGet(this, _disconnected2)) {\n      throw new Error(\"Can't start a sample on disconnected player\");\n    }\n    const context = this.context;\n    const buffer = sample.name && this.buffers[sample.name] || this.buffers[sample.note];\n    if (!buffer) {\n      console.warn(`Sample not found: '${sample.note}'`);\n      return () => void 0;\n    }\n    const source = context.createBufferSource();\n    source.buffer = buffer;\n    const cents = (_b = (_a = sample.detune) != null ? _a : this.options.detune) != null ? _b : 0;\n    if (source.detune) {\n      source.detune.value = cents;\n    } else if (source.playbackRate) {\n      source.playbackRate.value = Math.pow(2, cents / 1200);\n    }\n    const lpfCutoffHz = (_c = sample.lpfCutoffHz) != null ? _c : this.options.lpfCutoffHz;\n    const lpf = lpfCutoffHz ? context.createBiquadFilter() : void 0;\n    if (lpfCutoffHz && lpf) {\n      lpf.type = \"lowpass\";\n      lpf.frequency.value = lpfCutoffHz;\n    }\n    const volume = context.createGain();\n    const velocity = (_e = (_d = sample.velocity) != null ? _d : this.options.velocity) != null ? _e : 100;\n    volume.gain.value = __privateGet(this, _config3).velocityToGain(velocity);\n    const loop = (_f = sample.loop) != null ? _f : this.options.loop;\n    if (loop) {\n      source.loop = true;\n      source.loopStart = (_g = sample.loopStart) != null ? _g : 0;\n      source.loopEnd = (_h = sample.loopEnd) != null ? _h : buffer.duration;\n    }\n    const decayTime = (_i = sample.decayTime) != null ? _i : this.options.decayTime;\n    const [decay, startDecay] = createDecayEnvelope(context, decayTime);\n    function stop(time) {\n      time != null ? time : time = context.currentTime;\n      if (time <= startAt) {\n        source.stop(time);\n      } else {\n        const stopAt = startDecay(time);\n        source.stop(stopAt);\n      }\n    }\n    const gainCompensation = sample.gainOffset ? context.createGain() : void 0;\n    if (gainCompensation && sample.gainOffset) {\n      gainCompensation.gain.value = sample.gainOffset;\n    }\n    const stopId = (_j = sample.stopId) != null ? _j : sample.note;\n    const cleanup = unsubscribeAll([\n      connectSerial([\n        source,\n        lpf,\n        volume,\n        decay,\n        gainCompensation,\n        __privateGet(this, _config3).destination\n      ]),\n      (_k = sample.stop) == null ? void 0 : _k.call(sample, stop),\n      __privateGet(this, _stop).subscribe((event) => {\n        if (!event || event.stopId === void 0 || event.stopId === stopId) {\n          stop(event == null ? void 0 : event.time);\n        }\n      })\n    ]);\n    source.onended = () => {\n      var _a2;\n      cleanup();\n      (_a2 = sample.onEnded) == null ? void 0 : _a2.call(sample, sample);\n    };\n    (_l = sample.onStart) == null ? void 0 : _l.call(sample, sample);\n    const startAt = Math.max((_m = sample.time) != null ? _m : 0, context.currentTime);\n    source.start(sample.time);\n    let duration = (_n = sample.duration) != null ? _n : buffer.duration;\n    if (typeof sample.duration == \"number\") {\n      stop(startAt + duration);\n    }\n    return stop;\n  }\n  stop(sample) {\n    __privateGet(this, _stop).trigger(sample);\n  }\n  disconnect() {\n    if (__privateGet(this, _disconnected2))\n      return;\n    __privateSet(this, _disconnected2, true);\n    this.stop();\n    Object.keys(this.buffers).forEach((key) => {\n      delete this.buffers[key];\n    });\n  }\n  get connected() {\n    return !__privateGet(this, _disconnected2);\n  }\n};\n_config3 = new WeakMap();\n_disconnected2 = new WeakMap();\n_stop = new WeakMap();\nfunction createDecayEnvelope(context, envelopeTime = 0.2) {\n  let stopAt = 0;\n  const envelope = context.createGain();\n  envelope.gain.value = 1;\n  function start(time) {\n    if (stopAt)\n      return stopAt;\n    envelope.gain.cancelScheduledValues(time);\n    const envelopeAt = time || context.currentTime;\n    stopAt = envelopeAt + envelopeTime;\n    envelope.gain.setValueAtTime(1, envelopeAt);\n    envelope.gain.linearRampToValueAtTime(0, stopAt);\n    return stopAt;\n  }\n  return [envelope, start];\n}\n\n// src/player/default-player.ts\nvar DefaultPlayer = class {\n  constructor(context, options) {\n    this.context = context;\n    const channel = new Channel(context, options);\n    this.player = new QueuedPlayer(\n      new SamplePlayer(context, __spreadProps(__spreadValues({}, options), { destination: channel.input })),\n      options\n    );\n    this.output = channel;\n  }\n  get buffers() {\n    return this.player.buffers;\n  }\n  start(sample) {\n    return this.player.start(sample);\n  }\n  stop(sample) {\n    this.player.stop(\n      typeof sample === \"object\" ? sample : sample !== void 0 ? { stopId: sample } : void 0\n    );\n  }\n  disconnect() {\n    this.output.disconnect();\n    this.player.disconnect();\n  }\n};\n\n// src/player/load-audio.ts\nfunction loadAudioBuffer(context, url, storage) {\n  return __async(this, null, function* () {\n    url = url.replace(/#/g, \"%23\").replace(/([^:]\\/)\\/+/g, \"$1\");\n    const response = yield storage.fetch(url);\n    if (response.status !== 200) {\n      console.warn(\n        \"Error loading buffer. Invalid status: \",\n        response.status,\n        url\n      );\n      return;\n    }\n    try {\n      const audioData = yield response.arrayBuffer();\n      const buffer = yield context.decodeAudioData(audioData);\n      return buffer;\n    } catch (error) {\n      console.warn(\"Error loading buffer\", error, url);\n    }\n  });\n}\nfunction findFirstSupportedFormat(formats) {\n  if (typeof document === \"undefined\")\n    return null;\n  const audio = document.createElement(\"audio\");\n  for (let i = 0; i < formats.length; i++) {\n    const format = formats[i];\n    const canPlay = audio.canPlayType(`audio/${format}`);\n    if (canPlay === \"probably\" || canPlay === \"maybe\") {\n      return format;\n    }\n    if (format === \"m4a\") {\n      const canPlay2 = audio.canPlayType(`audio/aac`);\n      if (canPlay2 === \"probably\" || canPlay2 === \"maybe\") {\n        return format;\n      }\n    }\n  }\n  return null;\n}\nfunction getPreferredAudioExtension() {\n  var _a;\n  const format = (_a = findFirstSupportedFormat([\"ogg\", \"m4a\"])) != null ? _a : \"ogg\";\n  return \".\" + format;\n}\n\n// src/storage.ts\nvar HttpStorage = {\n  fetch(url) {\n    return fetch(url);\n  }\n};\nvar _cache, _tryFromCache, tryFromCache_fn, _saveResponse, saveResponse_fn;\nvar CacheStorage = class {\n  constructor(name = \"smplr\") {\n    __privateAdd(this, _tryFromCache);\n    __privateAdd(this, _saveResponse);\n    __privateAdd(this, _cache, void 0);\n    if (typeof window === \"undefined\" || !(\"caches\" in window)) {\n      __privateSet(this, _cache, Promise.reject(\"CacheStorage not supported\"));\n    } else {\n      __privateSet(this, _cache, caches.open(name));\n    }\n  }\n  fetch(url) {\n    return __async(this, null, function* () {\n      const request = new Request(url);\n      try {\n        return yield __privateMethod(this, _tryFromCache, tryFromCache_fn).call(this, request);\n      } catch (err) {\n        const response = yield fetch(request);\n        yield __privateMethod(this, _saveResponse, saveResponse_fn).call(this, request, response);\n        return response;\n      }\n    });\n  }\n};\n_cache = new WeakMap();\n_tryFromCache = new WeakSet();\ntryFromCache_fn = function(request) {\n  return __async(this, null, function* () {\n    const cache = yield __privateGet(this, _cache);\n    const response = yield cache.match(request);\n    if (response)\n      return response;\n    else\n      throw Error(\"Not found\");\n  });\n};\n_saveResponse = new WeakSet();\nsaveResponse_fn = function(request, response) {\n  return __async(this, null, function* () {\n    try {\n      const cache = yield __privateGet(this, _cache);\n      yield cache.put(request, response.clone());\n    } catch (err) {\n    }\n  });\n};\n\n// src/drum-machine/dm-instrument.ts\nvar EMPTY_INSTRUMENT = {\n  baseUrl: \"\",\n  name: \"\",\n  samples: [],\n  sampleNames: [],\n  nameToSample: {},\n  sampleNameVariations: {}\n};\nfunction fetchDrumMachineInstrument(url, storage) {\n  return __async(this, null, function* () {\n    var _a, _b, _c, _d;\n    const res = yield storage.fetch(url);\n    const json = yield res.json();\n    json.baseUrl = url.replace(\"/dm.json\", \"\");\n    json.sampleNames = [];\n    json.nameToSample = {};\n    json.sampleNameVariations = {};\n    for (const sampleSrc of json.samples) {\n      const sample = sampleSrc.indexOf(\"/\") !== -1 ? sampleSrc : sampleSrc.replace(\"-\", \"/\");\n      json.nameToSample[sample] = sample;\n      const [base, variation] = sample.split(\"/\");\n      if (!json.sampleNames.includes(base)) {\n        json.sampleNames.push(base);\n      }\n      (_b = (_a = json.nameToSample)[base]) != null ? _b : _a[base] = sample;\n      (_d = (_c = json.sampleNameVariations)[base]) != null ? _d : _c[base] = [];\n      if (variation) {\n        json.sampleNameVariations[base].push(`${base}/${variation}`);\n      }\n    }\n    return json;\n  });\n}\n\n// src/drum-machine/drum-machine.ts\nfunction getDrumMachineNames() {\n  return Object.keys(INSTRUMENTS);\n}\nvar INSTRUMENTS = {\n  \"TR-808\": \"https://danigb.github.io/samples/drum-machines/TR-808/dm.json\",\n  \"Casio-RZ1\": \"https://danigb.github.io/samples/drum-machines/Casio-RZ1/dm.json\",\n  \"LM-2\": \"https://danigb.github.io/samples/drum-machines/LM-2/dm.json\",\n  \"MFB-512\": \"https://danigb.github.io/samples/drum-machines/MFB-512/dm.json\",\n  \"Roland CR-8000\": \"https://danigb.github.io/samples/drum-machines/Roland-CR-8000/dm.json\"\n};\nfunction getConfig2(options) {\n  var _a, _b, _c;\n  const config = {\n    instrument: (_a = options == null ? void 0 : options.instrument) != null ? _a : \"TR-808\",\n    storage: (_b = options == null ? void 0 : options.storage) != null ? _b : HttpStorage,\n    url: (_c = options == null ? void 0 : options.url) != null ? _c : \"\"\n  };\n  config.url || (config.url = INSTRUMENTS[config.instrument]);\n  if (!config.url)\n    throw new Error(\"Invalid instrument: \" + config.instrument);\n  return config;\n}\nvar _instrument;\nvar DrumMachine = class {\n  constructor(context, options) {\n    __privateAdd(this, _instrument, EMPTY_INSTRUMENT);\n    const config = getConfig2(options);\n    const instrument = fetchDrumMachineInstrument(config.url, config.storage);\n    this.player = new DefaultPlayer(context, options);\n    this.output = this.player.output;\n    this.load = drumMachineLoader(\n      context,\n      this.player.buffers,\n      instrument,\n      config.storage\n    ).then(() => this);\n    instrument.then((instrument2) => {\n      __privateSet(this, _instrument, instrument2);\n    });\n  }\n  loaded() {\n    return __async(this, null, function* () {\n      console.warn(\"deprecated: use load instead\");\n      return this.load;\n    });\n  }\n  get sampleNames() {\n    return __privateGet(this, _instrument).sampleNames;\n  }\n  getVariations(name) {\n    var _a;\n    return (_a = __privateGet(this, _instrument).sampleNameVariations[name]) != null ? _a : [];\n  }\n  start(sample) {\n    var _a;\n    const sampleName = __privateGet(this, _instrument).nameToSample[sample.note];\n    return this.player.start(__spreadProps(__spreadValues({}, sample), {\n      note: sampleName ? sampleName : sample.note,\n      stopId: (_a = sample.stopId) != null ? _a : sample.note\n    }));\n  }\n  stop(sample) {\n    return this.player.stop(sample);\n  }\n};\n_instrument = new WeakMap();\nfunction drumMachineLoader(context, buffers, instrument, storage) {\n  var _a;\n  const format = (_a = findFirstSupportedFormat([\"ogg\", \"m4a\"])) != null ? _a : \"ogg\";\n  return instrument.then(\n    (data) => Promise.all(\n      data.samples.map((sample) => __async(this, null, function* () {\n        const url = `${data.baseUrl}/${sample}.${format}`;\n        const sampleName = sample.indexOf(\"/\") !== -1 ? sample : sample.replace(\"-\", \"/\");\n        const buffer = yield loadAudioBuffer(context, url, storage);\n        if (buffer)\n          buffers[sampleName] = buffer;\n      }))\n    )\n  );\n}\n\n// src/player/midi.ts\nfunction noteNameToMidi(note) {\n  const REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|)(-?\\d+)$/;\n  const m = REGEX.exec(note);\n  if (!m)\n    return;\n  const letter = m[1].toUpperCase();\n  if (!letter)\n    return;\n  const acc = m[2];\n  const alt = acc[0] === \"b\" ? -acc.length : acc.length;\n  const oct = m[3] ? +m[3] : 4;\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  return [0, 2, 4, 5, 7, 9, 11][step] + alt + 12 * (oct + 1);\n}\nfunction toMidi(note) {\n  return note === void 0 ? void 0 : typeof note === \"number\" ? note : noteNameToMidi(note);\n}\n\n// src/sfz/sfz-load.ts\nfunction loadSfzBuffers(context, buffers, websfz, storage) {\n  return __async(this, null, function* () {\n    websfz.groups.forEach((group) => {\n      const urls = getWebsfzGroupUrls(websfz, group);\n      return loadAudioBuffers(context, buffers, urls, storage);\n    });\n  });\n}\nfunction SfzInstrumentLoader(instrument, storage) {\n  return __async(this, null, function* () {\n    var _a;\n    const isWebsfz = (inst) => \"global\" in inst;\n    const isSfzInstrument = (inst) => \"websfzUrl\" in inst;\n    if (typeof instrument === \"string\") {\n      return fetchWebSfz(instrument, storage);\n    } else if (isWebsfz(instrument)) {\n      return instrument;\n    } else if (isSfzInstrument(instrument)) {\n      const websfz = yield fetchWebSfz(instrument.websfzUrl, storage);\n      (_a = websfz.meta) != null ? _a : websfz.meta = {};\n      if (instrument.name)\n        websfz.meta.name = instrument.name;\n      if (instrument.baseUrl)\n        websfz.meta.baseUrl = instrument.baseUrl;\n      if (instrument.formats)\n        websfz.meta.formats = instrument.formats;\n      return websfz;\n    } else {\n      throw new Error(\"Invalid instrument: \" + JSON.stringify(instrument));\n    }\n  });\n}\nfunction loadAudioBuffers(context, buffers, urls, storage) {\n  return __async(this, null, function* () {\n    yield Promise.all(\n      Object.keys(urls).map((sampleId) => __async(this, null, function* () {\n        if (buffers[sampleId])\n          return;\n        const buffer = yield loadAudioBuffer(context, urls[sampleId], storage);\n        if (buffer)\n          buffers[sampleId] = buffer;\n        return buffers;\n      }))\n    );\n  });\n}\nfunction fetchWebSfz(url, storage) {\n  return __async(this, null, function* () {\n    try {\n      const response = yield fetch(url);\n      const json = yield response.json();\n      return json;\n    } catch (error) {\n      console.warn(`Can't load SFZ file ${url}`, error);\n      throw new Error(`Can't load SFZ file ${url}`);\n    }\n  });\n}\nfunction getWebsfzGroupUrls(websfz, group) {\n  var _a, _b, _c, _d;\n  const urls = {};\n  const baseUrl = (_a = websfz.meta.baseUrl) != null ? _a : \"\";\n  const format = (_c = findFirstSupportedFormat((_b = websfz.meta.formats) != null ? _b : [])) != null ? _c : \"ogg\";\n  const prefix = (_d = websfz.global[\"default_path\"]) != null ? _d : \"\";\n  if (!group)\n    return urls;\n  return group.regions.reduce((urls2, region) => {\n    if (region.sample) {\n      urls2[region.sample] = `${baseUrl}/${prefix}${region.sample}.${format}`;\n    }\n    return urls2;\n  }, urls);\n}\n\n// src/sfz/sfz-regions.ts\nfunction checkRange(value, low, hi) {\n  const isAboveLow = low === void 0 || value !== void 0 && value >= low;\n  const isBelowHi = hi === void 0 || value !== void 0 && value <= hi;\n  return isAboveLow && isBelowHi;\n}\nfunction findRegions(websfz, note) {\n  const regions = [];\n  for (const group of websfz.groups) {\n    if (checkRange(note.midi, group.lokey, group.hikey) && checkRange(note.velocity, group.lovel, group.hivel) && checkRange(note.cc64, group.locc64, group.hicc64)) {\n      for (const region of group.regions) {\n        if (checkRange(note.midi, region.lokey, region.hikey) && checkRange(note.velocity, region.lovel, region.hivel) && checkRange(note.cc64, group.locc64, group.hicc64)) {\n          regions.push([group, region]);\n        }\n      }\n    }\n  }\n  return regions;\n}\n\n// src/sfz/sfz-sampler.ts\nvar EMPTY_WEBSFZ = Object.freeze({\n  meta: {},\n  global: {},\n  groups: []\n});\nvar _websfz, _startLayers, startLayers_fn;\nvar SfzSampler = class {\n  constructor(context, options) {\n    this.context = context;\n    __privateAdd(this, _startLayers);\n    __privateAdd(this, _websfz, void 0);\n    this.options = Object.freeze(\n      Object.assign(\n        {\n          volume: 100,\n          velocity: 100,\n          storage: HttpStorage,\n          detune: 0,\n          destination: context.destination\n        },\n        options\n      )\n    );\n    this.player = new DefaultPlayer(context, options);\n    __privateSet(this, _websfz, EMPTY_WEBSFZ);\n    this.load = SfzInstrumentLoader(options.instrument, this.options.storage).then((result) => {\n      __privateSet(this, _websfz, Object.freeze(result));\n      return loadSfzBuffers(\n        context,\n        this.player.buffers,\n        __privateGet(this, _websfz),\n        this.options.storage\n      );\n    }).then(() => this);\n  }\n  get output() {\n    return this.player.output;\n  }\n  loaded() {\n    return __async(this, null, function* () {\n      console.warn(\"deprecated: use load instead\");\n      return this.load;\n    });\n  }\n  start(sample) {\n    __privateMethod(this, _startLayers, startLayers_fn).call(this, typeof sample === \"object\" ? sample : { note: sample });\n  }\n  stop(sample) {\n    this.player.stop(sample);\n  }\n  disconnect() {\n    this.player.disconnect();\n  }\n};\n_websfz = new WeakMap();\n_startLayers = new WeakSet();\nstartLayers_fn = function(sample) {\n  var _a;\n  const midi = toMidi(sample.note);\n  if (midi === void 0)\n    return () => void 0;\n  const velocity = (_a = sample.velocity) != null ? _a : this.options.velocity;\n  const regions = findRegions(__privateGet(this, _websfz), { midi, velocity });\n  const onEnded = () => {\n    var _a2;\n    (_a2 = sample.onEnded) == null ? void 0 : _a2.call(sample, sample);\n  };\n  const stopAll = regions.map(([group, region]) => {\n    var _a2, _b, _c;\n    let target = (_b = (_a2 = region.pitch_keycenter) != null ? _a2 : region.key) != null ? _b : midi;\n    const detune = (midi - target) * 100;\n    return this.player.start(__spreadProps(__spreadValues({}, sample), {\n      note: region.sample,\n      decayTime: sample.decayTime,\n      detune: detune + ((_c = sample.detune) != null ? _c : this.options.detune),\n      onEnded,\n      stopId: midi\n    }));\n  });\n  switch (stopAll.length) {\n    case 0:\n      return () => void 0;\n    case 1:\n      return stopAll[0];\n    default:\n      return (time) => stopAll.forEach((stop) => stop(time));\n  }\n};\n\n// src/tremolo.ts\nfunction createTremolo(context, depth) {\n  const input = context.createGain();\n  const output = context.createGain();\n  input.channelCount = 2;\n  input.channelCountMode = \"explicit\";\n  const splitter = context.createChannelSplitter(2);\n  const ampL = context.createGain();\n  const ampR = context.createGain();\n  const merger = context.createChannelMerger(2);\n  const lfoL = context.createOscillator();\n  lfoL.type = \"sine\";\n  lfoL.frequency.value = 1;\n  lfoL.start();\n  const lfoLAmp = context.createGain();\n  const lfoR = context.createOscillator();\n  lfoR.type = \"sine\";\n  lfoR.frequency.value = 1.1;\n  lfoR.start();\n  const lfoRAmp = context.createGain();\n  input.connect(splitter);\n  splitter.connect(ampL, 0);\n  splitter.connect(ampR, 1);\n  ampL.connect(merger, 0, 0);\n  ampR.connect(merger, 0, 1);\n  lfoL.connect(lfoLAmp);\n  lfoLAmp.connect(ampL.gain);\n  lfoR.connect(lfoRAmp);\n  lfoRAmp.connect(ampR.gain);\n  merger.connect(output);\n  const unsubscribe = depth((depth2) => {\n    lfoLAmp.gain.value = depth2;\n    lfoRAmp.gain.value = depth2;\n  });\n  input.disconnect = () => {\n    unsubscribe();\n    lfoL.stop();\n    lfoR.stop();\n    input.disconnect(splitter);\n    splitter.disconnect(ampL, 0);\n    splitter.disconnect(ampR, 1);\n    ampL.disconnect(merger, 0, 0);\n    ampR.disconnect(merger, 0, 1);\n    lfoL.disconnect(ampL);\n    lfoR.disconnect(ampR);\n    merger.disconnect(output);\n  };\n  return { input, output };\n}\n\n// src/electric-piano.ts\nfunction getElectricPianoNames() {\n  return Object.keys(INSTRUMENTS2);\n}\nvar INSTRUMENTS2 = {\n  CP80: \"https://danigb.github.io/samples/gs-e-pianos/CP80/cp80.websfz.json\",\n  PianetT: \"https://danigb.github.io/samples/gs-e-pianos/Pianet T/pianet-t.websfz.json\",\n  WurlitzerEP200: \"https://danigb.github.io/samples/gs-e-pianos/Wurlitzer EP200/wurlitzer-ep200.websfz.json\",\n  TX81Z: \"https://danigb.github.io/samples/vcsl/TX81Z/tx81z-fm-piano.websfz.json\"\n};\nvar ElectricPiano = class extends SfzSampler {\n  constructor(context, options) {\n    var _a;\n    super(context, __spreadProps(__spreadValues({}, options), {\n      instrument: (_a = INSTRUMENTS2[options.instrument]) != null ? _a : options.instrument\n    }));\n    const depth = createControl(0);\n    this.tremolo = {\n      level: (level) => depth.set(midiVelToGain(level))\n    };\n    const tremolo = createTremolo(context, depth.subscribe);\n    this.output.addInsert(tremolo);\n  }\n};\n\n// src/player/layers.ts\nfunction createEmptyRegionGroup(sample = {}) {\n  return { regions: [], sample };\n}\nfunction findSamplesInRegions(group, sample, seqNumber) {\n  const results = [];\n  const midi = toMidi(sample.note);\n  if (midi === void 0)\n    return results;\n  for (const region of group.regions) {\n    const found = findSampleInRegion(\n      midi,\n      seqNumber != null ? seqNumber : 0,\n      sample,\n      region,\n      group.sample\n    );\n    if (found)\n      results.push(found);\n  }\n  return results;\n}\nfunction findFirstSampleInRegions(group, sample, seqNumber) {\n  const midi = toMidi(sample.note);\n  if (midi === void 0)\n    return void 0;\n  for (const region of group.regions) {\n    const found = findSampleInRegion(\n      midi,\n      seqNumber != null ? seqNumber : 0,\n      sample,\n      region,\n      group.sample\n    );\n    if (found)\n      return found;\n  }\n  return void 0;\n}\nfunction findSampleInRegion(midi, seqNum, sample, region, defaults) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _A;\n  const matchMidi = midi >= ((_a = region.midiLow) != null ? _a : 0) && midi <= ((_b = region.midiHigh) != null ? _b : 127);\n  if (!matchMidi)\n    return void 0;\n  const matchVelocity = sample.velocity === void 0 || sample.velocity >= ((_c = region.velLow) != null ? _c : 0) && sample.velocity <= ((_d = region.velHigh) != null ? _d : 127);\n  if (!matchVelocity)\n    return void 0;\n  if (region.seqLength) {\n    const currentSeq = seqNum % region.seqLength;\n    const regionIndex = ((_e = region.seqPosition) != null ? _e : 1) - 1;\n    if (currentSeq !== regionIndex)\n      return void 0;\n  }\n  const semitones = midi - region.midiPitch;\n  const velocity = (_f = sample.velocity) != null ? _f : defaults.velocity;\n  const regionGainOffset = region.volume ? dbToGain(region.volume) : 0;\n  const sampleGainOffset = (_h = (_g = sample.gainOffset) != null ? _g : defaults.gainOffset) != null ? _h : 0;\n  return {\n    decayTime: (_k = (_j = sample == null ? void 0 : sample.decayTime) != null ? _j : (_i = region.sample) == null ? void 0 : _i.decayTime) != null ? _k : defaults.decayTime,\n    detune: 100 * (semitones + ((_l = region.tune) != null ? _l : 0)),\n    duration: (_o = (_n = sample == null ? void 0 : sample.duration) != null ? _n : (_m = region.sample) == null ? void 0 : _m.duration) != null ? _o : defaults.duration,\n    gainOffset: sampleGainOffset + regionGainOffset || void 0,\n    loop: (_r = (_q = sample == null ? void 0 : sample.loop) != null ? _q : (_p = region.sample) == null ? void 0 : _p.loop) != null ? _r : defaults.loop,\n    loopEnd: (_u = (_t = sample == null ? void 0 : sample.loopEnd) != null ? _t : (_s = region.sample) == null ? void 0 : _s.loopEnd) != null ? _u : defaults.loopEnd,\n    loopStart: (_x = (_w = sample == null ? void 0 : sample.loopStart) != null ? _w : (_v = region.sample) == null ? void 0 : _v.loopStart) != null ? _x : defaults.loopStart,\n    lpfCutoffHz: (_A = (_z = sample == null ? void 0 : sample.lpfCutoffHz) != null ? _z : (_y = region.sample) == null ? void 0 : _y.lpfCutoffHz) != null ? _A : defaults.lpfCutoffHz,\n    name: region.sampleName,\n    note: midi,\n    onEnded: sample.onEnded,\n    onStart: sample.onStart,\n    stopId: sample.name,\n    time: sample.time,\n    velocity: velocity == void 0 ? void 0 : velocity\n  };\n}\nfunction spreadRegions(regions) {\n  if (regions.length === 0)\n    return [];\n  regions.sort((a, b) => a.midiPitch - b.midiPitch);\n  regions[0].midiLow = 0;\n  regions[0].midiHigh = 127;\n  if (regions.length === 1)\n    return regions;\n  for (let i = 1; i < regions.length; i++) {\n    const prev = regions[i - 1];\n    const curr = regions[i];\n    const mid = Math.floor((prev.midiPitch + curr.midiPitch) / 2);\n    prev.midiHigh = mid;\n    curr.midiLow = mid + 1;\n  }\n  regions[regions.length - 1].midiHigh = 127;\n  return regions;\n}\n\n// src/player/region-player.ts\nvar RegionPlayer = class {\n  constructor(context, options) {\n    this.context = context;\n    this.seqNum = 0;\n    const channel = new Channel(context, options);\n    this.group = createEmptyRegionGroup();\n    this.player = new QueuedPlayer(\n      new SamplePlayer(context, __spreadProps(__spreadValues({}, options), { destination: channel.input })),\n      options\n    );\n    this.output = channel;\n  }\n  get buffers() {\n    return this.player.buffers;\n  }\n  start(sample) {\n    const found = findSamplesInRegions(\n      this.group,\n      typeof sample === \"object\" ? sample : { note: sample },\n      this.seqNum\n    );\n    this.seqNum++;\n    const stopAll = found.map((sample2) => this.player.start(sample2));\n    return (time) => stopAll.forEach((stop) => stop(time));\n  }\n  stop(sample) {\n    if (sample == void 0) {\n      this.player.stop();\n      return;\n    }\n    const toStop = typeof sample === \"object\" ? sample : { stopId: sample };\n    const midi = toMidi(toStop.stopId);\n    if (!midi)\n      return;\n    toStop.stopId = midi;\n    this.player.stop(toStop);\n  }\n  disconnect() {\n    this.output.disconnect();\n    this.player.disconnect();\n  }\n};\n\n// src/sfz2.ts\nfunction SfzInstrumentLoader2(url, config) {\n  const audioExt = getPreferredAudioExtension();\n  return (context, storage) => __async(this, null, function* () {\n    const sfz = yield fetch(url).then((res) => res.text());\n    const errors = sfzToLayer(sfz, config.group);\n    if (errors.length) {\n      console.warn(\"Problems converting sfz\", errors);\n    }\n    const sampleNames = /* @__PURE__ */ new Set();\n    config.group.regions.forEach((r) => sampleNames.add(r.sampleName));\n    return Promise.all(\n      Array.from(sampleNames).map((sampleName) => __async(this, null, function* () {\n        const sampleUrl = config.urlFromSampleName(sampleName, audioExt);\n        const buffer = yield loadAudioBuffer(context, sampleUrl, storage);\n        config.buffers[sampleName] = buffer;\n      }))\n    );\n  });\n}\nfunction sfzToLayer(sfz, group) {\n  let mode = \"global\";\n  const tokens = sfz.split(\"\\n\").map(parseToken).filter((x) => !!x);\n  const scope = new Scope();\n  let errors = [];\n  for (const token of tokens) {\n    switch (token.type) {\n      case \"mode\":\n        errors.push(scope.closeScope(mode, group));\n        mode = token.value;\n        break;\n      case \"prop:num\":\n      case \"prop:str\":\n      case \"prop:num_arr\":\n        scope.push(token.key, token.value);\n        break;\n      case \"unknown\":\n        console.warn(\"Unknown SFZ token\", token.value);\n        break;\n    }\n  }\n  closeScope(mode, scope, group);\n  return errors.filter((x) => !!x);\n  function closeScope(mode2, scope2, group2) {\n  }\n}\nvar MODE_REGEX = /^<([^>]+)>$/;\nvar PROP_NUM_REGEX = /^([^=]+)=([-\\.\\d]+)$/;\nvar PROP_STR_REGEX = /^([^=]+)=(.+)$/;\nvar PROP_NUM_ARR_REGEX = /^([^=]+)_(\\d+)=(\\d+)$/;\nfunction parseToken(line) {\n  line = line.trim();\n  if (line === \"\")\n    return void 0;\n  if (line.startsWith(\"//\"))\n    return void 0;\n  const modeMatch = line.match(MODE_REGEX);\n  if (modeMatch)\n    return { type: \"mode\", value: modeMatch[1] };\n  const propNumArrMatch = line.match(PROP_NUM_ARR_REGEX);\n  if (propNumArrMatch)\n    return {\n      type: \"prop:num_arr\",\n      key: propNumArrMatch[1],\n      value: [Number(propNumArrMatch[2]), Number(propNumArrMatch[3])]\n    };\n  const propNumMatch = line.match(PROP_NUM_REGEX);\n  if (propNumMatch)\n    return {\n      type: \"prop:num\",\n      key: propNumMatch[1],\n      value: Number(propNumMatch[2])\n    };\n  const propStrMatch = line.match(PROP_STR_REGEX);\n  if (propStrMatch)\n    return {\n      type: \"prop:str\",\n      key: propStrMatch[1],\n      value: propStrMatch[2]\n    };\n  return { type: \"unknown\", value: line };\n}\nvar _closeRegion, closeRegion_fn;\nvar Scope = class {\n  constructor() {\n    __privateAdd(this, _closeRegion);\n    this.values = {};\n    this.global = {};\n    this.group = {};\n  }\n  closeScope(mode, group) {\n    if (mode === \"global\") {\n      __privateMethod(this, _closeRegion, closeRegion_fn).call(this, this.global);\n    } else if (mode === \"group\") {\n      this.group = __privateMethod(this, _closeRegion, closeRegion_fn).call(this, {});\n    } else if (mode === \"region\") {\n      const region = __privateMethod(this, _closeRegion, closeRegion_fn).call(this, __spreadValues(__spreadValues({\n        sampleName: \"\",\n        midiPitch: -1\n      }, this.global), this.group));\n      if (region.sampleName === \"\") {\n        return \"Missing sample name\";\n      }\n      if (region.midiPitch === -1) {\n        if (region.midiLow !== void 0) {\n          region.midiPitch = region.midiLow;\n        } else {\n          return \"Missing pitch_keycenter\";\n        }\n      }\n      if (region.seqLength && region.seqPosition === void 0) {\n        region.seqPosition = 1;\n      }\n      if (region.ampRelease) {\n        region.sample = { decayTime: region.ampRelease };\n        delete region.ampRelease;\n      }\n      group.regions.push(region);\n    }\n  }\n  get empty() {\n    return Object.keys(this.values).length === 0;\n  }\n  get keys() {\n    return Object.keys(this.values);\n  }\n  push(key, value) {\n    this.values[key] = value;\n  }\n  popNum(key, dest, destKey) {\n    if (typeof this.values[key] !== \"number\")\n      return false;\n    dest[destKey] = this.values[key];\n    delete this.values[key];\n    return true;\n  }\n  popStr(key, dest, destKey) {\n    if (typeof this.values[key] !== \"string\")\n      return false;\n    dest[destKey] = this.values[key];\n    delete this.values[key];\n    return true;\n  }\n  popNumArr(key, dest, destKey) {\n    if (!Array.isArray(this.values[key]))\n      return false;\n    dest[destKey] = this.values[key];\n    delete this.values[key];\n    return true;\n  }\n};\n_closeRegion = new WeakSet();\ncloseRegion_fn = function(region) {\n  this.popStr(\"sample\", region, \"sampleName\");\n  this.popNum(\"pitch_keycenter\", region, \"midiPitch\");\n  this.popNum(\"ampeg_attack\", region, \"ampAttack\");\n  this.popNum(\"ampeg_release\", region, \"ampRelease\");\n  this.popNum(\"bend_down\", region, \"bendDown\");\n  this.popNum(\"bend_up\", region, \"bendUp\");\n  this.popNum(\"group\", region, \"group\");\n  this.popNum(\"hikey\", region, \"midiHigh\");\n  this.popNum(\"hivel\", region, \"velHigh\");\n  this.popNum(\"lokey\", region, \"midiLow\");\n  this.popNum(\"offset\", region, \"offset\");\n  this.popNum(\"lovel\", region, \"velLow\");\n  this.popNum(\"off_by\", region, \"groupOffBy\");\n  this.popNum(\"pitch_keytrack\", region, \"ignore\");\n  this.popNum(\"seq_length\", region, \"seqLength\");\n  this.popNum(\"seq_position\", region, \"seqPosition\");\n  this.popNum(\"tune\", region, \"tune\");\n  this.popNum(\"volume\", region, \"volume\");\n  this.popNumArr(\"amp_velcurve\", region, \"ampVelCurve\");\n  this.values = {};\n  return region;\n};\n\n// src/versilian.ts\nvar instruments = [];\nvar BASE_URL = \"https://smpldsnds.github.io/sgossner-vcsl/\";\nfunction getVersilianInstruments() {\n  return __async(this, null, function* () {\n    if (instruments.length)\n      return instruments;\n    instruments = yield fetch(BASE_URL + \"sfz_files.json\").then(\n      (res) => res.json()\n    );\n    return instruments;\n  });\n}\nfunction getVcslInstrumentSfzUrl(instrument) {\n  return BASE_URL + instrument + \".sfz\";\n}\nfunction VcslInstrumentLoader(instrument, buffers, group) {\n  const url = getVcslInstrumentSfzUrl(instrument);\n  const base = instrument.slice(0, instrument.lastIndexOf(\"/\") + 1);\n  const sampleBase = `https://smpldsnds.github.io/sgossner-vcsl/${base}`;\n  return SfzInstrumentLoader2(url, {\n    buffers,\n    group,\n    urlFromSampleName: (sampleName, audioExt) => {\n      return sampleBase + \"/\" + sampleName.replace(\".wav\", audioExt);\n    }\n  });\n}\nvar Versilian = class {\n  constructor(context, options = {}) {\n    var _a, _b;\n    this.config = {\n      instrument: (_a = options.instrument) != null ? _a : \"Arco\",\n      storage: (_b = options.storage) != null ? _b : HttpStorage\n    };\n    this.player = new RegionPlayer(context, options);\n    const loader = VcslInstrumentLoader(\n      this.config.instrument,\n      this.player.buffers,\n      this.player.group\n    );\n    this.load = loader(context, this.config.storage).then(() => this);\n  }\n  get output() {\n    return this.player.output;\n  }\n  get buffers() {\n    return this.player.buffers;\n  }\n  get context() {\n    return this.player.context;\n  }\n  start(sample) {\n    return this.player.start(sample);\n  }\n  stop(sample) {\n    return this.player.stop(sample);\n  }\n  disconnect() {\n    this.player.disconnect();\n  }\n};\n\n// src/mallet.ts\nfunction getMalletNames() {\n  return Object.keys(NAME_TO_PATH);\n}\nvar Mallet = class extends Versilian {\n  constructor(context, options) {\n    var _a;\n    super(context, __spreadProps(__spreadValues({}, options), {\n      instrument: NAME_TO_PATH[(_a = options.instrument) != null ? _a : \"\"]\n    }));\n  }\n};\nvar NAME_TO_PATH = {\n  \"Balafon - Hard Mallet\": \"Idiophones/Struck Idiophones/Balafon - Hard Mallet\",\n  \"Balafon - Keyswitch\": \"Idiophones/Struck Idiophones/Balafon - Keyswitch\",\n  \"Balafon - Soft Mallet\": \"Idiophones/Struck Idiophones/Balafon - Soft Mallet\",\n  \"Balafon - Traditional Mallet\": \"Idiophones/Struck Idiophones/Balafon - Traditional Mallet\",\n  \"Tubular Bells 1\": \"Idiophones/Struck Idiophones/Tubular Bells 1\",\n  \"Tubular Bells 2\": \"Idiophones/Struck Idiophones/Tubular Bells 2\",\n  \"Vibraphone - Bowed\": \"Idiophones/Struck Idiophones/Vibraphone - Bowed\",\n  \"Vibraphone - Hard Mallets\": \"Idiophones/Struck Idiophones/Vibraphone - Hard Mallets\",\n  \"Vibraphone - Keyswitch\": \"Idiophones/Struck Idiophones/Vibraphone - Keyswitch\",\n  \"Vibraphone - Soft Mallets\": \"Idiophones/Struck Idiophones/Vibraphone - Soft Mallets\",\n  \"Xylophone - Hard Mallets\": \"Idiophones/Struck Idiophones/Xylophone - Hard Mallets\",\n  \"Xylophone - Keyswitch\": \"Idiophones/Struck Idiophones/Xylophone - Keyswitch\",\n  \"Xylophone - Medium Mallets\": \"Idiophones/Struck Idiophones/Xylophone - Medium Mallets\",\n  \"Xylophone - Soft Mallets\": \"Idiophones/Struck Idiophones/Xylophone - Soft Mallets\"\n};\n\n// src/mellotron.ts\nvar INSTRUMENT_VARIATIONS = {\n  \"300 STRINGS CELLO\": [\"300 STRINGS\", \"CELL\"],\n  \"300 STRINGS VIOLA\": [\"300 STRINGS\", \"VIOL\"]\n};\nfunction getMellotronNames() {\n  return [\n    \"300 STRINGS CELLO\",\n    \"300 STRINGS VIOLA\",\n    \"8VOICE CHOIR\",\n    \"BASSA+STRNGS\",\n    \"BOYS CHOIR\",\n    \"CHA CHA FLT\",\n    \"CHM CLARINET\",\n    \"CHMB 3 VLNS\",\n    \"CHMB ALTOSAX\",\n    \"CHMB FEMALE\",\n    \"CHMB MALE VC\",\n    \"CHMB TNR SAX\",\n    \"CHMB TRMBONE\",\n    \"CHMB TRUMPET\",\n    \"CHMBLN CELLO\",\n    \"CHMBLN FLUTE\",\n    \"CHMBLN OBOE\",\n    \"DIXIE+TRMBN\",\n    \"FOXTROT+SAX\",\n    \"HALFSP.BRASS\",\n    \"MIXED STRGS\",\n    \"MKII BRASS\",\n    \"MKII GUITAR\",\n    \"MKII ORGAN\",\n    \"MKII SAX\",\n    \"MKII VIBES\",\n    \"MKII VIOLINS\",\n    \"MOVE BS+STGS\",\n    \"STRGS+BRASS\",\n    \"TROMB+TRMPT\",\n    \"TRON 16VLNS\",\n    \"TRON CELLO\",\n    \"TRON FLUTE\",\n    \"TRON VIOLA\"\n  ];\n}\nvar Mellotron = class {\n  constructor(context, options) {\n    this.context = context;\n    this.config = getMellotronConfig(options);\n    this.player = new DefaultPlayer(context, options);\n    this.group = createEmptyRegionGroup(options);\n    const loader = loadMellotronInstrument(\n      this.config.instrument,\n      this.player.buffers,\n      this.group\n    );\n    this.load = loader(context, this.config.storage).then(() => this);\n  }\n  get buffers() {\n    return this.player.buffers;\n  }\n  get output() {\n    return this.player.output;\n  }\n  start(sample) {\n    const found = findFirstSampleInRegions(\n      this.group,\n      typeof sample === \"object\" ? sample : { note: sample }\n    );\n    if (!found)\n      return () => void 0;\n    return this.player.start(found);\n  }\n  stop(sample) {\n    this.player.stop(sample);\n  }\n  disconnect() {\n    this.player.disconnect();\n  }\n};\nfunction getMellotronConfig(options) {\n  var _a, _b;\n  return {\n    instrument: (_a = options.instrument) != null ? _a : \"MKII VIOLINS\",\n    storage: (_b = options.storage) != null ? _b : HttpStorage\n  };\n}\nfunction loadMellotronInstrument(instrument, buffers, group) {\n  let variation = INSTRUMENT_VARIATIONS[instrument];\n  if (variation)\n    instrument = variation[0];\n  return (context, storage) => {\n    const baseUrl = `https://smpldsnds.github.io/archiveorg-mellotron/${instrument}/`;\n    const audioExt = getPreferredAudioExtension();\n    return fetch(baseUrl + \"files.json\").then((res) => res.json()).then(\n      (sampleNames) => Promise.all(\n        sampleNames.map((sampleName) => {\n          var _a;\n          if (variation && !sampleName.includes(variation[1]))\n            return;\n          const midi = toMidi((_a = sampleName.split(\" \")[0]) != null ? _a : \"\");\n          if (!midi)\n            return;\n          const sampleUrl = baseUrl + sampleName + audioExt;\n          loadAudioBuffer(context, sampleUrl, storage).then((audioBuffer) => {\n            var _a2;\n            buffers[sampleName] = audioBuffer;\n            const duration = (_a2 = audioBuffer == null ? void 0 : audioBuffer.duration) != null ? _a2 : 0;\n            group.regions.push({\n              sampleName,\n              midiPitch: midi,\n              sample: {\n                loop: true,\n                loopStart: duration / 10,\n                loopEnd: duration - duration / 10\n              }\n            });\n          });\n        })\n      )\n    ).then(() => {\n      spreadRegions(group.regions);\n    });\n  };\n}\n\n// src/reverb/processor.min.ts\nvar PROCESSOR = `\"use strict\";(()=>{var f=class extends AudioWorkletProcessor{_pDLength;_preDelay;_pDWrite;_lp1;_lp2;_lp3;_excPhase;_taps;_Delays;sampleRate;static get parameterDescriptors(){return[[\"preDelay\",0,0,sampleRate-1,\"k-rate\"],[\"bandwidth\",.9999,0,1,\"k-rate\"],[\"inputDiffusion1\",.75,0,1,\"k-rate\"],[\"inputDiffusion2\",.625,0,1,\"k-rate\"],[\"decay\",.5,0,1,\"k-rate\"],[\"decayDiffusion1\",.7,0,.999999,\"k-rate\"],[\"decayDiffusion2\",.5,0,.999999,\"k-rate\"],[\"damping\",.005,0,1,\"k-rate\"],[\"excursionRate\",.5,0,2,\"k-rate\"],[\"excursionDepth\",.7,0,2,\"k-rate\"],[\"wet\",1,0,1,\"k-rate\"],[\"dry\",0,0,1,\"k-rate\"]].map(e=>new Object({name:e[0],defaultValue:e[1],minValue:e[2],maxValue:e[3],automationRate:e[4]}))}constructor(e){super(),this.sampleRate=sampleRate,this._Delays=[],this._pDLength=sampleRate+(128-sampleRate%128),this._preDelay=new Float32Array(this._pDLength),this._pDWrite=0,this._lp1=0,this._lp2=0,this._lp3=0,this._excPhase=0,[.004771345,.003595309,.012734787,.009307483,.022579886,.149625349,.060481839,.1249958,.030509727,.141695508,.089244313,.106280031].forEach(a=>this.makeDelay(a,sampleRate)),this._taps=Int16Array.from([.008937872,.099929438,.064278754,.067067639,.066866033,.006283391,.035818689,.011861161,.121870905,.041262054,.08981553,.070931756,.011256342,.004065724],a=>Math.round(a*sampleRate))}makeDelay(e,a){let t=Math.round(e*a),s=2**Math.ceil(Math.log2(t));this._Delays.push([new Float32Array(s),t-1,0,s-1])}writeDelay(e,a){return this._Delays[e][0][this._Delays[e][1]]=a}readDelay(e){return this._Delays[e][0][this._Delays[e][2]]}readDelayAt(e,a){let t=this._Delays[e];return t[0][t[2]+a&t[3]]}readDelayCAt(e,a){let t=this._Delays[e],s=a-~~a,d=~~a+t[2]-1,r=t[3],D=t[0][d++&r],l=t[0][d++&r],h=t[0][d++&r],y=t[0][d&r],u=(3*(l-h)-D+y)/2,m=2*h+D-(5*l+y)/2,c=(h-D)/2;return((u*s+m)*s+c)*s+l}process(e,a,t){let s=~~t.preDelay[0],d=t.bandwidth[0],r=t.inputDiffusion1[0],D=t.inputDiffusion2[0],l=t.decay[0],h=t.decayDiffusion1[0],y=t.decayDiffusion2[0],u=1-t.damping[0],m=t.excursionRate[0]/sampleRate,c=t.excursionDepth[0]*sampleRate/1e3,w=t.wet[0]*.6,A=t.dry[0];if(e[0].length==2)for(let i=127;i>=0;i--)this._preDelay[this._pDWrite+i]=(e[0][0][i]+e[0][1][i])*.5,a[0][0][i]=e[0][0][i]*A,a[0][1][i]=e[0][1][i]*A;else if(e[0].length>0){this._preDelay.set(e[0][0],this._pDWrite);for(let i=127;i>=0;i--)a[0][0][i]=a[0][1][i]=e[0][0][i]*A}else this._preDelay.set(new Float32Array(128),this._pDWrite);let o=0;for(;o<128;){let i=0,b=0;this._lp1+=d*(this._preDelay[(this._pDLength+this._pDWrite-s+o)%this._pDLength]-this._lp1);let p=this.writeDelay(0,this._lp1-r*this.readDelay(0));p=this.writeDelay(1,r*(p-this.readDelay(1))+this.readDelay(0)),p=this.writeDelay(2,r*p+this.readDelay(1)-D*this.readDelay(2)),p=this.writeDelay(3,D*(p-this.readDelay(3))+this.readDelay(2));let k=D*p+this.readDelay(3),g=c*(1+Math.cos(this._excPhase*6.28)),x=c*(1+Math.sin(this._excPhase*6.2847)),_=this.writeDelay(4,k+l*this.readDelay(11)+h*this.readDelayCAt(4,g));this.writeDelay(5,this.readDelayCAt(4,g)-h*_),this._lp2+=u*(this.readDelay(5)-this._lp2),_=this.writeDelay(6,l*this._lp2-y*this.readDelay(6)),this.writeDelay(7,this.readDelay(6)+y*_),_=this.writeDelay(8,k+l*this.readDelay(7)+h*this.readDelayCAt(8,x)),this.writeDelay(9,this.readDelayCAt(8,x)-h*_),this._lp3+=u*(this.readDelay(9)-this._lp3),_=this.writeDelay(10,l*this._lp3-y*this.readDelay(10)),this.writeDelay(11,this.readDelay(10)+y*_),i=this.readDelayAt(9,this._taps[0])+this.readDelayAt(9,this._taps[1])-this.readDelayAt(10,this._taps[2])+this.readDelayAt(11,this._taps[3])-this.readDelayAt(5,this._taps[4])-this.readDelayAt(6,this._taps[5])-this.readDelayAt(7,this._taps[6]),b=this.readDelayAt(5,this._taps[7])+this.readDelayAt(5,this._taps[8])-this.readDelayAt(6,this._taps[9])+this.readDelayAt(7,this._taps[10])-this.readDelayAt(9,this._taps[11])-this.readDelayAt(10,this._taps[12])-this.readDelayAt(11,this._taps[13]),a[0][0][o]+=i*w,a[0][1][o]+=b*w,this._excPhase+=m,o++;for(let R=0,n=this._Delays[0];R<this._Delays.length;n=this._Delays[++R])n[1]=n[1]+1&n[3],n[2]=n[2]+1&n[3]}return this._pDWrite=(this._pDWrite+128)%this._pDLength,!0}};registerProcessor(\"DattorroReverb\",f);})();`;\n\n// src/reverb/reverb.ts\nvar PARAMS = [\n  \"preDelay\",\n  \"bandwidth\",\n  \"inputDiffusion1\",\n  \"inputDiffusion2\",\n  \"decay\",\n  \"decayDiffusion1\",\n  \"decayDiffusion2\",\n  \"damping\",\n  \"excursionRate\",\n  \"excursionDepth\",\n  \"wet\",\n  \"dry\"\n];\nvar init = /* @__PURE__ */ new WeakMap();\nfunction createDattorroReverbEffect(context) {\n  return __async(this, null, function* () {\n    let ready = init.get(context);\n    if (!ready) {\n      const blob = new Blob([PROCESSOR], { type: \"application/javascript\" });\n      const url = URL.createObjectURL(blob);\n      ready = context.audioWorklet.addModule(url);\n      init.set(context, ready);\n    }\n    yield ready;\n    const reverb = new AudioWorkletNode(context, \"DattorroReverb\", {\n      outputChannelCount: [2]\n    });\n    return reverb;\n  });\n}\nvar _effect, _ready, _output;\nvar Reverb = class {\n  constructor(context) {\n    __privateAdd(this, _effect, void 0);\n    __privateAdd(this, _ready, void 0);\n    __privateAdd(this, _output, void 0);\n    this.input = context.createGain();\n    __privateSet(this, _output, context.destination);\n    __privateSet(this, _ready, createDattorroReverbEffect(context).then((reverb) => {\n      this.input.connect(reverb);\n      reverb.connect(__privateGet(this, _output));\n      __privateSet(this, _effect, reverb);\n      return this;\n    }));\n  }\n  get paramNames() {\n    return PARAMS;\n  }\n  getParam(name) {\n    var _a;\n    return (_a = __privateGet(this, _effect)) == null ? void 0 : _a.parameters.get(\"preDelay\");\n  }\n  get isReady() {\n    return __privateGet(this, _effect) !== void 0;\n  }\n  ready() {\n    return __privateGet(this, _ready);\n  }\n  connect(output) {\n    if (__privateGet(this, _effect)) {\n      __privateGet(this, _effect).disconnect(__privateGet(this, _output));\n      __privateGet(this, _effect).connect(output);\n    }\n    __privateSet(this, _output, output);\n  }\n};\n_effect = new WeakMap();\n_ready = new WeakMap();\n_output = new WeakMap();\n\n// src/sampler.ts\nvar _options;\nvar Sampler = class {\n  constructor(context, options = {}) {\n    this.context = context;\n    __privateAdd(this, _options, void 0);\n    var _a, _b, _c, _d, _e, _f;\n    __privateSet(this, _options, {\n      destination: (_a = options.destination) != null ? _a : context.destination,\n      detune: 0,\n      volume: (_b = options.volume) != null ? _b : 100,\n      velocity: (_c = options.velocity) != null ? _c : 100,\n      buffers: (_d = options.buffers) != null ? _d : {},\n      volumeToGain: (_e = options.volumeToGain) != null ? _e : midiVelToGain\n    });\n    this.player = new DefaultPlayer(context, __privateGet(this, _options));\n    const storage = (_f = options.storage) != null ? _f : HttpStorage;\n    const loader = typeof __privateGet(this, _options).buffers === \"function\" ? __privateGet(this, _options).buffers : createAudioBuffersLoader(__privateGet(this, _options).buffers, storage);\n    this.load = loader(context, this.player.buffers).then(() => this);\n  }\n  loaded() {\n    return __async(this, null, function* () {\n      console.warn(\"deprecated: use load instead\");\n      return this.load;\n    });\n  }\n  get output() {\n    return this.player.output;\n  }\n  start(sample) {\n    return this.player.start(\n      typeof sample === \"object\" ? sample : { note: sample }\n    );\n  }\n  stop(sample) {\n    return this.player.stop(\n      typeof sample === \"object\" ? sample : sample === void 0 ? void 0 : { stopId: sample }\n    );\n  }\n  disconnect() {\n    return this.player.disconnect();\n  }\n};\n_options = new WeakMap();\nfunction createAudioBuffersLoader(source, storage) {\n  return (context, buffers) => __async(this, null, function* () {\n    yield Promise.all([\n      Object.keys(source).map((key) => __async(this, null, function* () {\n        const value = source[key];\n        if (value instanceof AudioBuffer) {\n          buffers[key] = value;\n        } else if (typeof value === \"string\") {\n          const buffer = yield loadAudioBuffer(context, value, storage);\n          if (buffer)\n            buffers[key] = buffer;\n        }\n      }))\n    ]);\n  });\n}\n\n// src/smolken.ts\nfunction getSmolkenNames() {\n  return [\"Pizzicato\", \"Arco\", \"Switched\"];\n}\nfunction getSmolkenUrl(instrument) {\n  const FILES = {\n    Arco: \"arco\",\n    Pizzicato: \"pizz\",\n    Switched: \"switched\"\n  };\n  return `https://smpldsnds.github.io/sfzinstruments-dsmolken-double-bass/d_smolken_rubner_bass_${FILES[instrument]}.sfz`;\n}\nvar Smolken = class {\n  constructor(context, options = {}) {\n    this.seqNum = 0;\n    var _a, _b;\n    this.config = {\n      instrument: (_a = options.instrument) != null ? _a : \"Arco\",\n      storage: (_b = options.storage) != null ? _b : HttpStorage\n    };\n    this.player = new DefaultPlayer(context, options);\n    this.group = createEmptyRegionGroup();\n    const url = getSmolkenUrl(this.config.instrument);\n    const loader = SfzInstrumentLoader2(url, {\n      buffers: this.player.buffers,\n      group: this.group,\n      urlFromSampleName: (sampleName, audioExt) => {\n        const samplePath = sampleName.replace(\"\\\\\", \"/\").replace(\".wav\", audioExt);\n        return `https://smpldsnds.github.io/sfzinstruments-dsmolken-double-bass/${samplePath}`;\n      }\n    });\n    this.load = loader(context, this.config.storage).then(() => this);\n  }\n  get output() {\n    return this.player.output;\n  }\n  get buffers() {\n    return this.player.buffers;\n  }\n  get context() {\n    return this.player.context;\n  }\n  start(sample) {\n    const found = findSamplesInRegions(\n      this.group,\n      typeof sample === \"object\" ? sample : { note: sample },\n      this.seqNum\n    );\n    this.seqNum++;\n    const stopAll = found.map((sample2) => this.player.start(sample2));\n    return (time) => stopAll.forEach((stop) => stop(time));\n  }\n  stop(sample) {\n    if (sample == void 0) {\n      this.player.stop();\n      return;\n    }\n    const toStop = typeof sample === \"object\" ? sample : { stopId: sample };\n    const midi = toMidi(toStop.stopId);\n    if (!midi)\n      return;\n    toStop.stopId = midi;\n    this.player.stop(toStop);\n  }\n  disconnect() {\n    this.player.disconnect();\n  }\n};\n\n// src/soundfont/soundfont-instrument.ts\nfunction gleitzKitUrl(name, kit) {\n  var _a;\n  const format = (_a = findFirstSupportedFormat([\"ogg\", \"mp3\"])) != null ? _a : \"mp3\";\n  return `https://gleitz.github.io/midi-js-soundfonts/${kit}/${name}-${format}.js`;\n}\nfunction soundfontInstrumentLoader(url, buffers, group) {\n  return (context, storage) => __async(this, null, function* () {\n    const sourceFile = yield (yield storage.fetch(url)).text();\n    const json = midiJsToJson(sourceFile);\n    const noteNames = Object.keys(json);\n    yield Promise.all(\n      noteNames.map((noteName) => __async(this, null, function* () {\n        const midi = toMidi(noteName);\n        if (!midi)\n          return;\n        const audioData = base64ToArrayBuffer(\n          removeBase64Prefix(json[noteName])\n        );\n        const buffer = yield context.decodeAudioData(audioData);\n        buffers[noteName] = buffer;\n        group.regions.push({\n          sampleName: noteName,\n          midiPitch: midi\n        });\n      }))\n    );\n    spreadRegions(group.regions);\n  });\n}\nfunction midiJsToJson(source) {\n  const header = source.indexOf(\"MIDI.Soundfont.\");\n  if (header < 0)\n    throw Error(\"Invalid MIDI.js Soundfont format\");\n  const start = source.indexOf(\"=\", header) + 2;\n  const end = source.lastIndexOf(\",\");\n  return JSON.parse(source.slice(start, end) + \"}\");\n}\nfunction removeBase64Prefix(audioBase64) {\n  return audioBase64.slice(audioBase64.indexOf(\",\") + 1);\n}\nfunction base64ToArrayBuffer(base64) {\n  const decoded = window.atob(base64);\n  const len = decoded.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = decoded.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\nvar SOUNDFONT_KITS = [\"MusyngKite\", \"FluidR3_GM\"];\nvar SOUNDFONT_INSTRUMENTS = [\n  \"accordion\",\n  \"acoustic_bass\",\n  \"acoustic_grand_piano\",\n  \"acoustic_guitar_nylon\",\n  \"acoustic_guitar_steel\",\n  \"agogo\",\n  \"alto_sax\",\n  \"applause\",\n  \"bagpipe\",\n  \"banjo\",\n  \"baritone_sax\",\n  \"bassoon\",\n  \"bird_tweet\",\n  \"blown_bottle\",\n  \"brass_section\",\n  \"breath_noise\",\n  \"bright_acoustic_piano\",\n  \"celesta\",\n  \"cello\",\n  \"choir_aahs\",\n  \"church_organ\",\n  \"clarinet\",\n  \"clavinet\",\n  \"contrabass\",\n  \"distortion_guitar\",\n  \"drawbar_organ\",\n  \"dulcimer\",\n  \"electric_bass_finger\",\n  \"electric_bass_pick\",\n  \"electric_grand_piano\",\n  \"electric_guitar_clean\",\n  \"electric_guitar_jazz\",\n  \"electric_guitar_muted\",\n  \"electric_piano_1\",\n  \"electric_piano_2\",\n  \"english_horn\",\n  \"fiddle\",\n  \"flute\",\n  \"french_horn\",\n  \"fretless_bass\",\n  \"fx_1_rain\",\n  \"fx_2_soundtrack\",\n  \"fx_3_crystal\",\n  \"fx_4_atmosphere\",\n  \"fx_5_brightness\",\n  \"fx_6_goblins\",\n  \"fx_7_echoes\",\n  \"fx_8_scifi\",\n  \"glockenspiel\",\n  \"guitar_fret_noise\",\n  \"guitar_harmonics\",\n  \"gunshot\",\n  \"harmonica\",\n  \"harpsichord\",\n  \"helicopter\",\n  \"honkytonk_piano\",\n  \"kalimba\",\n  \"koto\",\n  \"lead_1_square\",\n  \"lead_2_sawtooth\",\n  \"lead_3_calliope\",\n  \"lead_4_chiff\",\n  \"lead_5_charang\",\n  \"lead_6_voice\",\n  \"lead_7_fifths\",\n  \"lead_8_bass__lead\",\n  \"marimba\",\n  \"melodic_tom\",\n  \"music_box\",\n  \"muted_trumpet\",\n  \"oboe\",\n  \"ocarina\",\n  \"orchestra_hit\",\n  \"orchestral_harp\",\n  \"overdriven_guitar\",\n  \"pad_1_new_age\",\n  \"pad_2_warm\",\n  \"pad_3_polysynth\",\n  \"pad_4_choir\",\n  \"pad_5_bowed\",\n  \"pad_6_metallic\",\n  \"pad_7_halo\",\n  \"pad_8_sweep\",\n  \"pan_flute\",\n  \"percussive_organ\",\n  \"piccolo\",\n  \"pizzicato_strings\",\n  \"recorder\",\n  \"reed_organ\",\n  \"reverse_cymbal\",\n  \"rock_organ\",\n  \"seashore\",\n  \"shakuhachi\",\n  \"shamisen\",\n  \"shanai\",\n  \"sitar\",\n  \"slap_bass_1\",\n  \"slap_bass_2\",\n  \"soprano_sax\",\n  \"steel_drums\",\n  \"string_ensemble_1\",\n  \"string_ensemble_2\",\n  \"synth_bass_1\",\n  \"synth_bass_2\",\n  \"synth_brass_1\",\n  \"synth_brass_2\",\n  \"synth_choir\",\n  \"synth_drum\",\n  \"synth_strings_1\",\n  \"synth_strings_2\",\n  \"taiko_drum\",\n  \"tango_accordion\",\n  \"telephone_ring\",\n  \"tenor_sax\",\n  \"timpani\",\n  \"tinkle_bell\",\n  \"tremolo_strings\",\n  \"trombone\",\n  \"trumpet\",\n  \"tuba\",\n  \"tubular_bells\",\n  \"vibraphone\",\n  \"viola\",\n  \"violin\",\n  \"voice_oohs\",\n  \"whistle\",\n  \"woodblock\",\n  \"xylophone\"\n];\n\n// src/soundfont/soundfont-loops.ts\nfunction getGoldstSoundfontLoopsUrl(instrument, kit) {\n  if (instrument.startsWith(\"http\"))\n    return void 0;\n  return `https://goldst.dev/midi-js-soundfonts/${kit}/${instrument}-loop.json`;\n}\nfunction fetchSoundfontLoopData(url) {\n  return __async(this, null, function* () {\n    if (!url)\n      return void 0;\n    try {\n      const req = yield fetch(url);\n      if (req.status !== 200)\n        return;\n      const raw = yield req.json();\n      const loopData = {};\n      const sampleRate = 41e3;\n      Object.keys(raw).forEach((key) => {\n        const midi = toMidi(key);\n        if (midi) {\n          const offsets = raw[key];\n          loopData[midi] = [offsets[0] / sampleRate, offsets[1] / sampleRate];\n        }\n      });\n      return loopData;\n    } catch (err) {\n      return void 0;\n    }\n  });\n}\n\n// src/soundfont/soundfont.ts\nfunction getSoundfontKits() {\n  return SOUNDFONT_KITS;\n}\nfunction getSoundfontNames() {\n  return SOUNDFONT_INSTRUMENTS;\n}\nvar _hasLoops;\nvar Soundfont = class {\n  constructor(context, options) {\n    this.context = context;\n    __privateAdd(this, _hasLoops, void 0);\n    this.config = getSoundfontConfig(options);\n    this.player = new DefaultPlayer(context, options);\n    this.group = createEmptyRegionGroup();\n    __privateSet(this, _hasLoops, false);\n    const loader = soundfontLoader(\n      this.config.instrumentUrl,\n      this.config.loopDataUrl,\n      this.player.buffers,\n      this.group\n    );\n    this.load = loader(context, this.config.storage).then((hasLoops) => {\n      __privateSet(this, _hasLoops, hasLoops);\n      return this;\n    });\n    const gain = context.createGain();\n    gain.gain.value = this.config.extraGain;\n    this.player.output.addInsert(gain);\n  }\n  get output() {\n    return this.player.output;\n  }\n  get hasLoops() {\n    return __privateGet(this, _hasLoops);\n  }\n  loaded() {\n    return __async(this, null, function* () {\n      console.warn(\"deprecated: use load instead\");\n      return this.load;\n    });\n  }\n  disconnect() {\n    this.player.disconnect();\n  }\n  start(sample) {\n    const found = findFirstSampleInRegions(\n      this.group,\n      typeof sample === \"object\" ? sample : { note: sample }\n    );\n    if (!found)\n      return () => void 0;\n    return this.player.start(found);\n  }\n  stop(sample) {\n    return this.player.stop(sample);\n  }\n};\n_hasLoops = new WeakMap();\nfunction soundfontLoader(url, loopsUrl, buffers, group) {\n  const loadInstrument = soundfontInstrumentLoader(url, buffers, group);\n  return (context, storage) => __async(this, null, function* () {\n    const [_, loops] = yield Promise.all([\n      loadInstrument(context, storage),\n      fetchSoundfontLoopData(loopsUrl)\n    ]);\n    if (loops) {\n      group.regions.forEach((region) => {\n        var _a;\n        const loop = loops[region.midiPitch];\n        if (loop) {\n          (_a = region.sample) != null ? _a : region.sample = {};\n          region.sample.loop = true;\n          region.sample.loopStart = loop[0];\n          region.sample.loopEnd = loop[1];\n        }\n      });\n    }\n    return !!loops;\n  });\n}\nfunction getSoundfontConfig(options) {\n  var _a, _b, _c, _d;\n  if (!options.instrument && !options.instrumentUrl) {\n    throw Error(\"Soundfont: instrument or instrumentUrl is required\");\n  }\n  const config = {\n    kit: \"MusyngKite\",\n    instrument: options.instrument,\n    storage: (_a = options.storage) != null ? _a : HttpStorage,\n    // This is to compensate the low volume of the original samples\n    extraGain: (_b = options.extraGain) != null ? _b : 5,\n    loadLoopData: (_c = options.loadLoopData) != null ? _c : false,\n    loopDataUrl: options.loopDataUrl,\n    instrumentUrl: (_d = options.instrumentUrl) != null ? _d : \"\"\n  };\n  if (config.instrument && config.instrument.startsWith(\"http\")) {\n    console.warn(\n      \"Use 'instrumentUrl' instead of 'instrument' to load from a URL\"\n    );\n    config.instrumentUrl = config.instrument;\n    config.instrument = void 0;\n  }\n  if (config.instrument && !config.instrumentUrl) {\n    config.instrumentUrl = gleitzKitUrl(config.instrument, config.kit);\n  }\n  if (config.loadLoopData && config.instrument && !config.loopDataUrl) {\n    config.loopDataUrl = getGoldstSoundfontLoopsUrl(\n      config.instrument,\n      config.kit\n    );\n  }\n  return config;\n}\n\n// src/splendid-grand-piano.ts\nvar BASE_URL2 = \"https://danigb.github.io/samples/splendid-grand-piano\";\nvar _sampleToMidi, sampleToMidi_fn;\nvar SplendidGrandPiano = class {\n  constructor(context, options) {\n    this.context = context;\n    __privateAdd(this, _sampleToMidi);\n    this.options = Object.assign(\n      {\n        baseUrl: BASE_URL2,\n        storage: HttpStorage,\n        detune: 0,\n        volume: 100,\n        velocity: 100,\n        decayTime: 0.5\n      },\n      options\n    );\n    this.player = new DefaultPlayer(context, this.options);\n    const loader = splendidGrandPianoLoader(\n      this.options.baseUrl,\n      this.options.storage,\n      this.options.notesToLoad\n    );\n    this.load = loader(context, this.player.buffers).then(() => this);\n  }\n  get output() {\n    return this.player.output;\n  }\n  get buffers() {\n    return this.player.buffers;\n  }\n  loaded() {\n    return __async(this, null, function* () {\n      console.warn(\"deprecated: use load instead\");\n      return this.load;\n    });\n  }\n  start(sampleOrNote) {\n    var _a, _b;\n    const sample = typeof sampleOrNote === \"object\" ? __spreadValues({}, sampleOrNote) : { note: sampleOrNote };\n    const found = __privateMethod(this, _sampleToMidi, sampleToMidi_fn).call(this, sample);\n    if (!found)\n      return () => void 0;\n    sample.note = found[0];\n    sample.stopId = (_a = sample.stopId) != null ? _a : found[1];\n    sample.detune = found[2] + ((_b = sample.detune) != null ? _b : this.options.detune);\n    return this.player.start(sample);\n  }\n  stop(sample) {\n    return this.player.stop(sample);\n  }\n};\n_sampleToMidi = new WeakSet();\nsampleToMidi_fn = function(sample) {\n  var _a;\n  const midi = toMidi(sample.note);\n  if (!midi)\n    return;\n  const vel = (_a = sample.velocity) != null ? _a : this.options.velocity;\n  const layerIdx = LAYERS.findIndex(\n    (layer2) => vel >= layer2.vel_range[0] && vel <= layer2.vel_range[1]\n  );\n  const layer = LAYERS[layerIdx];\n  if (!layer)\n    return;\n  return findNearestMidiInLayer(layer.name, midi, this.player.buffers);\n};\nfunction findNearestMidiInLayer(prefix, midi, buffers) {\n  let i = 0;\n  while (buffers[prefix + (midi + i)] === void 0 && i < 128) {\n    if (i > 0)\n      i = -i;\n    else\n      i = -i + 1;\n  }\n  return i === 127 ? [prefix + midi, midi, 0] : [prefix + (midi + i), midi, -i * 100];\n}\nfunction splendidGrandPianoLoader(baseUrl, storage, notesToLoad) {\n  var _a;\n  const format = (_a = findFirstSupportedFormat([\"ogg\", \"m4a\"])) != null ? _a : \"ogg\";\n  let layers = notesToLoad ? LAYERS.filter(\n    (layer) => layer.vel_range[0] <= notesToLoad.velocityRange[1] && layer.vel_range[1] >= notesToLoad.velocityRange[0]\n  ) : LAYERS;\n  return (context, buffers) => __async(this, null, function* () {\n    for (const layer of layers) {\n      const samples = notesToLoad ? layer.samples.filter((sample) => notesToLoad.notes.includes(sample[0])) : layer.samples;\n      yield Promise.all(\n        samples.map((_0) => __async(this, [_0], function* ([midi, name]) {\n          const url = `${baseUrl}/${name}.${format}`;\n          const buffer = yield loadAudioBuffer(context, url, storage);\n          if (buffer)\n            buffers[layer.name + midi] = buffer;\n        }))\n      );\n    }\n  });\n}\nvar LAYERS = [\n  {\n    name: \"PPP\",\n    vel_range: [1, 40],\n    cutoff: 1e3,\n    samples: [\n      [23, \"PP-B-1\"],\n      [27, \"PP-D#0\"],\n      [29, \"PP-F0\"],\n      [31, \"PP-G0\"],\n      [33, \"PP-A0\"],\n      [35, \"PP-B0\"],\n      [37, \"PP-C#1\"],\n      [38, \"PP-D1\"],\n      [40, \"PP-E1\"],\n      [41, \"PP-F1\"],\n      [43, \"PP-G1\"],\n      [45, \"PP-A1\"],\n      [47, \"PP-B1\"],\n      [48, \"PP-C2\"],\n      [50, \"PP-D2\"],\n      [52, \"PP-E2\"],\n      [53, \"PP-F2\"],\n      [55, \"PP-G2\"],\n      [56, \"PP-G#2\"],\n      [57, \"PP-A2\"],\n      [58, \"PP-A#2\"],\n      [59, \"PP-B2\"],\n      [60, \"PP-C3\"],\n      [62, \"PP-D3\"],\n      [64, \"PP-E3\"],\n      [65, \"PP-F3\"],\n      [67, \"PP-G3\"],\n      [69, \"PP-A3\"],\n      [71, \"PP-B3\"],\n      [72, \"PP-C4\"],\n      [74, \"PP-D4\"],\n      [76, \"PP-E4\"],\n      [77, \"PP-F4\"],\n      [79, \"PP-G4\"],\n      [80, \"PP-G#4\"],\n      [81, \"PP-A4\"],\n      [82, \"PP-A#4\"],\n      [83, \"PP-B4\"],\n      [85, \"PP-C#5\"],\n      [86, \"PP-D5\"],\n      [87, \"PP-D#5\"],\n      [89, \"PP-F5\"],\n      [90, \"PP-F#5\"],\n      [91, \"PP-G5\"],\n      [92, \"PP-G#5\"],\n      [93, \"PP-A5\"],\n      [94, \"PP-A#5\"],\n      [95, \"PP-B5\"],\n      [96, \"PP-C6\"],\n      [97, \"PP-C#6\"],\n      [98, \"PP-D6\"],\n      [99, \"PP-D#6\"],\n      [100, \"PP-E6\"],\n      [101, \"PP-F6\"],\n      [102, \"PP-F#6\"],\n      [103, \"PP-G6\"],\n      [104, \"PP-G#6\"],\n      [105, \"PP-A6\"],\n      [106, \"PP-A#6\"],\n      [107, \"PP-B6\"],\n      [108, \"PP-C7\"]\n    ]\n  },\n  {\n    name: \"PP\",\n    vel_range: [41, 67],\n    samples: [\n      [23, \"PP-B-1\"],\n      [27, \"PP-D#0\"],\n      [29, \"PP-F0\"],\n      [31, \"PP-G0\"],\n      [33, \"PP-A0\"],\n      [35, \"PP-B0\"],\n      [37, \"PP-C#1\"],\n      [38, \"PP-D1\"],\n      [40, \"PP-E1\"],\n      [41, \"PP-F1\"],\n      [43, \"PP-G1\"],\n      [45, \"PP-A1\"],\n      [47, \"PP-B1\"],\n      [48, \"PP-C2\"],\n      [50, \"PP-D2\"],\n      [52, \"PP-E2\"],\n      [53, \"PP-F2\"],\n      [55, \"PP-G2\"],\n      [56, \"PP-G#2\"],\n      [57, \"PP-A2\"],\n      [58, \"PP-A#2\"],\n      [59, \"PP-B2\"],\n      [60, \"PP-C3\"],\n      [62, \"PP-D3\"],\n      [64, \"PP-E3\"],\n      [65, \"PP-F3\"],\n      [67, \"PP-G3\"],\n      [69, \"PP-A3\"],\n      [71, \"PP-B3\"],\n      [72, \"PP-C4\"],\n      [74, \"PP-D4\"],\n      [76, \"PP-E4\"],\n      [77, \"PP-F4\"],\n      [79, \"PP-G4\"],\n      [80, \"PP-G#4\"],\n      [81, \"PP-A4\"],\n      [82, \"PP-A#4\"],\n      [83, \"PP-B4\"],\n      [85, \"PP-C#5\"],\n      [86, \"PP-D5\"],\n      [87, \"PP-D#5\"],\n      [89, \"PP-F5\"],\n      [90, \"PP-F#5\"],\n      [91, \"PP-G5\"],\n      [92, \"PP-G#5\"],\n      [93, \"PP-A5\"],\n      [94, \"PP-A#5\"],\n      [95, \"PP-B5\"],\n      [96, \"PP-C6\"],\n      [97, \"PP-C#6\"],\n      [98, \"PP-D6\"],\n      [99, \"PP-D#6\"],\n      [100, \"PP-E6\"],\n      [101, \"PP-F6\"],\n      [102, \"PP-F#6\"],\n      [103, \"PP-G6\"],\n      [104, \"PP-G#6\"],\n      [105, \"PP-A6\"],\n      [106, \"PP-A#6\"],\n      [107, \"PP-B6\"],\n      [108, \"PP-C7\"]\n    ]\n  },\n  {\n    name: \"MP\",\n    vel_range: [68, 84],\n    samples: [\n      [23, \"Mp-B-1\"],\n      [27, \"Mp-D#0\"],\n      [29, \"Mp-F0\"],\n      [31, \"Mp-G0\"],\n      [33, \"Mp-A0\"],\n      [35, \"Mp-B0\"],\n      [37, \"Mp-C#1\"],\n      [38, \"Mp-D1\"],\n      [40, \"Mp-E1\"],\n      [41, \"Mp-F1\"],\n      [43, \"Mp-G1\"],\n      [45, \"Mp-A1\"],\n      [47, \"Mp-B1\"],\n      [48, \"Mp-C2\"],\n      [50, \"Mp-D2\"],\n      [52, \"Mp-E2\"],\n      [53, \"Mp-F2\"],\n      [55, \"Mp-G2\"],\n      [56, \"Mp-G#2\"],\n      [57, \"Mp-A2\"],\n      [58, \"Mp-A#2\"],\n      [59, \"Mp-B2\"],\n      [60, \"Mp-C3\"],\n      [62, \"Mp-D3\"],\n      [64, \"Mp-E3\"],\n      [65, \"Mp-F3\"],\n      [67, \"Mp-G3\"],\n      [69, \"Mp-A3\"],\n      [71, \"Mp-B3\"],\n      [72, \"Mp-C4\"],\n      [74, \"Mp-D4\"],\n      [76, \"Mp-E4\"],\n      [77, \"Mp-F4\"],\n      [79, \"Mp-G4\"],\n      [80, \"Mp-G#4\"],\n      [81, \"Mp-A4\"],\n      [82, \"Mp-A#4\"],\n      [83, \"Mp-B4\"],\n      [85, \"Mp-C#5\"],\n      [86, \"Mp-D5\"],\n      [87, \"Mp-D#5\"],\n      [88, \"Mp-E5\"],\n      [89, \"Mp-F5\"],\n      [90, \"Mp-F#5\"],\n      [91, \"Mp-G5\"],\n      [92, \"Mp-G#5\"],\n      [93, \"Mp-A5\"],\n      [94, \"Mp-A#5\"],\n      [95, \"Mp-B5\"],\n      [96, \"Mp-C6\"],\n      [97, \"Mp-C#6\"],\n      [98, \"Mp-D6\"],\n      [99, \"Mp-D#6\"],\n      [100, \"PP-E6\"],\n      [101, \"Mp-F6\"],\n      [102, \"Mp-F#6\"],\n      [103, \"Mp-G6\"],\n      [104, \"Mp-G#6\"],\n      [105, \"Mp-A6\"],\n      [106, \"Mp-A#6\"],\n      [107, \"PP-B6\"],\n      [108, \"PP-C7\"]\n    ]\n  },\n  {\n    name: \"MF\",\n    vel_range: [85, 100],\n    samples: [\n      [23, \"Mf-B-1\"],\n      [27, \"Mf-D#0\"],\n      [29, \"Mf-F0\"],\n      [31, \"Mf-G0\"],\n      [33, \"Mf-A0\"],\n      [35, \"Mf-B0\"],\n      [37, \"Mf-C#1\"],\n      [38, \"Mf-D1\"],\n      [40, \"Mf-E1\"],\n      [41, \"Mf-F1\"],\n      [43, \"Mf-G1\"],\n      [45, \"Mf-A1\"],\n      [47, \"Mf-B1\"],\n      [48, \"Mf-C2\"],\n      [50, \"Mf-D2\"],\n      [52, \"Mf-E2\"],\n      [53, \"Mf-F2\"],\n      [55, \"Mf-G2\"],\n      [56, \"Mf-G#2\"],\n      [57, \"Mf-A2\"],\n      [58, \"Mf-A#2\"],\n      [59, \"Mf-B2\"],\n      [60, \"Mf-C3\"],\n      [62, \"Mf-D3\"],\n      [64, \"Mf-E3\"],\n      [65, \"Mf-F3\"],\n      [67, \"Mf-G3\"],\n      [69, \"Mf-A3\"],\n      [71, \"Mf-B3\"],\n      [72, \"Mf-C4\"],\n      [74, \"Mf-D4\"],\n      [76, \"Mf-E4\"],\n      [77, \"Mf-F4\"],\n      [79, \"Mf-G4\"],\n      [80, \"Mf-G#4\"],\n      [81, \"Mf-A4\"],\n      [82, \"Mf-A#4\"],\n      [83, \"Mf-B4\"],\n      [85, \"Mf-C#5\"],\n      [86, \"Mf-D5\"],\n      [87, \"Mf-D#5\"],\n      [88, \"Mf-E5\"],\n      [89, \"Mf-F5\"],\n      [90, \"Mf-F#5\"],\n      [91, \"Mf-G5\"],\n      [92, \"Mf-G#5\"],\n      [93, \"Mf-A5\"],\n      [94, \"Mf-A#5\"],\n      [95, \"Mf-B5\"],\n      [96, \"Mf-C6\"],\n      [97, \"Mf-C#6\"],\n      [98, \"Mf-D6\"],\n      [99, \"Mf-D#6\"],\n      [100, \"Mf-E6\"],\n      [101, \"Mf-F6\"],\n      [102, \"Mf-F#6\"],\n      [103, \"Mf-G6\"],\n      [104, \"Mf-G#6\"],\n      [105, \"Mf-A6\"],\n      [106, \"Mf-A#6\"],\n      [107, \"Mf-B6\"],\n      [108, \"PP-C7\"]\n    ]\n  },\n  {\n    name: \"FF\",\n    vel_range: [101, 127],\n    samples: [\n      [23, \"FF-B-1\"],\n      [27, \"FF-D#0\"],\n      [29, \"FF-F0\"],\n      [31, \"FF-G0\"],\n      [33, \"FF-A0\"],\n      [35, \"FF-B0\"],\n      [37, \"FF-C#1\"],\n      [38, \"FF-D1\"],\n      [40, \"FF-E1\"],\n      [41, \"FF-F1\"],\n      [43, \"FF-G1\"],\n      [45, \"FF-A1\"],\n      [47, \"FF-B1\"],\n      [48, \"FF-C2\"],\n      [50, \"FF-D2\"],\n      [52, \"FF-E2\"],\n      [53, \"FF-F2\"],\n      [55, \"FF-G2\"],\n      [56, \"FF-G#2\"],\n      [57, \"FF-A2\"],\n      [58, \"FF-A#2\"],\n      [59, \"FF-B2\"],\n      [60, \"FF-C3\"],\n      [62, \"FF-D3\"],\n      [64, \"FF-E3\"],\n      [65, \"FF-F3\"],\n      [67, \"FF-G3\"],\n      [69, \"FF-A3\"],\n      [71, \"FF-B3\"],\n      [72, \"FF-C4\"],\n      [74, \"FF-D4\"],\n      [76, \"FF-E4\"],\n      [77, \"FF-F4\"],\n      [79, \"FF-G4\"],\n      [80, \"FF-G#4\"],\n      [81, \"FF-A4\"],\n      [82, \"FF-A#4\"],\n      [83, \"FF-B4\"],\n      [85, \"FF-C#5\"],\n      [86, \"FF-D5\"],\n      [88, \"FF-E5\"],\n      [89, \"FF-F5\"],\n      [91, \"FF-G5\"],\n      [93, \"FF-A5\"],\n      [95, \"Mf-B5\"],\n      [96, \"Mf-C6\"],\n      [97, \"Mf-C#6\"],\n      [98, \"Mf-D6\"],\n      [99, \"Mf-D#6\"],\n      [100, \"Mf-E6\"],\n      [102, \"Mf-F#6\"],\n      [103, \"Mf-G6\"],\n      [104, \"Mf-G#6\"],\n      [105, \"Mf-A6\"],\n      [106, \"Mf-A#6\"],\n      [107, \"Mf-B6\"],\n      [108, \"Mf-C7\"]\n    ]\n  }\n];\nexport {\n  CacheStorage,\n  DrumMachine,\n  ElectricPiano,\n  HttpStorage,\n  LAYERS,\n  Mallet,\n  Mellotron,\n  NAME_TO_PATH,\n  Reverb,\n  Sampler,\n  Smolken,\n  Soundfont,\n  SplendidGrandPiano,\n  VcslInstrumentLoader,\n  Versilian,\n  getDrumMachineNames,\n  getElectricPianoNames,\n  getMalletNames,\n  getMellotronNames,\n  getSmolkenNames,\n  getSoundfontKits,\n  getSoundfontNames,\n  getVersilianInstruments\n};\n//# sourceMappingURL=index.mjs.map","export type AudioInsert = {\n  input: AudioNode;\n  output: AudioNode;\n};\n\nexport function connectSerial(nodes: (AudioNode | AudioInsert | undefined)[]) {\n  const _nodes = nodes.filter((x): x is AudioNode | AudioInsert => !!x);\n  _nodes.reduce((a, b) => {\n    const left = \"output\" in a ? a.output : a;\n    const right = \"input\" in b ? b.input : b;\n    left.connect(right);\n    return b;\n  });\n\n  return () => {\n    _nodes.reduce((a, b) => {\n      const left = \"output\" in a ? a.output : a;\n      const right = \"input\" in b ? b.input : b;\n      left.disconnect(right);\n      return b;\n    });\n  };\n}\n\nexport function connectAudioBus(\n  node: AudioNode,\n  destination: AudioNode,\n  gain: number\n) {\n  const mix = node.context.createGain();\n  mix.gain.value = gain;\n  node.connect(mix);\n  mix.connect(destination);\n\n  return () => {\n    node.disconnect(mix);\n    mix.disconnect(destination);\n  };\n}\n","/**\n * A function to unsubscribe from an event or control\n */\nexport type Unsubscribe = () => void;\n/**\n * A function that listener to event or control changes\n */\nexport type Listener<T> = (value: T) => void;\n/**\n * A function to subscribe an trigger or control events\n */\nexport type Subscribe<T> = (listener: Listener<T>) => Unsubscribe;\n\n/**\n * A trigger is a subscribable event\n */\nexport type Trigger<T> = {\n  subscribe: Subscribe<T>;\n  trigger: (event: T) => void;\n};\n\n/**\n * A control is a subscribable value\n */\nexport type Control<T> = {\n  subscribe: Subscribe<T>;\n  set: (value: T) => void;\n  get: () => T;\n};\n\n/**\n * Create a control signal\n * @param initialValue\n * @returns Control\n */\nexport function createControl<T>(initialValue: T): Control<T> {\n  let current = initialValue;\n  const listeners = new Set<Listener<T>>();\n\n  function subscribe(listener: Listener<T>) {\n    listeners.add(listener);\n    listener(current);\n    return () => {\n      listeners.delete(listener);\n    };\n  }\n\n  function set(value: T) {\n    current = value;\n    listeners.forEach((listener) => listener(current));\n  }\n\n  function get(): T {\n    return current;\n  }\n  return { subscribe, set, get };\n}\n\nexport function createTrigger<T>(): Trigger<T> {\n  const listeners = new Set<Listener<T>>();\n\n  function subscribe(listener: Listener<T>) {\n    listeners.add(listener);\n    return () => {\n      listeners.delete(listener);\n    };\n  }\n\n  function trigger(value: T) {\n    listeners.forEach((listener) => listener(value));\n  }\n\n  return { subscribe, trigger };\n}\n\nexport function unsubscribeAll(unsubscribe: Array<Unsubscribe | undefined>) {\n  let done = false;\n  return () => {\n    if (done) return;\n    done = true;\n    unsubscribe.forEach((cb) => cb?.());\n  };\n}\n","/// This is how the MIDI association converts midi velocity [0..127] into gain [0..1]\n/// @see https://www.midi.org/specifications/file-format-specifications/dls-downloadable-sounds/dls-level-1\nexport function midiVelToGain(vel: number) {\n  return (vel * vel) / 16129; // 16129 = 127 * 127\n}\n\nexport function dbToGain(decibels: number) {\n  return Math.pow(10, decibels / 20);\n}\n","import { AudioInsert, connectSerial } from \"./connect\";\nimport { createControl } from \"./signals\";\nimport { midiVelToGain } from \"./volume\";\n\nexport type ChannelConfig = {\n  destination: AudioNode;\n  volume: number;\n  volumeToGain: (volume: number) => number;\n};\n\nexport type OutputChannel = Omit<Channel, \"input\">;\n\ntype Send = {\n  name: string;\n  mix: GainNode;\n  disconnect: () => void;\n};\n\n/**\n * An output channel with audio effects\n * @private\n */\nexport class Channel {\n  public readonly setVolume: (vol: number) => void;\n  public readonly input: AudioNode;\n\n  #volume: GainNode;\n  #sends?: Send[];\n  #inserts?: (AudioNode | AudioInsert)[];\n  #disconnect: () => void;\n  #unsubscribe: () => void;\n  #config: Readonly<ChannelConfig>;\n  #disconnected = false;\n\n  constructor(\n    public readonly context: BaseAudioContext,\n    options?: Partial<ChannelConfig>\n  ) {\n    this.#config = {\n      destination: options?.destination ?? context.destination,\n      volume: options?.volume ?? 100,\n      volumeToGain: options?.volumeToGain ?? midiVelToGain,\n    };\n\n    this.input = context.createGain();\n    this.#volume = context.createGain();\n\n    this.#disconnect = connectSerial([\n      this.input,\n      this.#volume,\n      this.#config.destination,\n    ]);\n\n    const volume = createControl(this.#config.volume);\n    this.setVolume = volume.set;\n    this.#unsubscribe = volume.subscribe((volume) => {\n      this.#volume.gain.value = this.#config.volumeToGain(volume);\n    });\n  }\n\n  addInsert(effect: AudioNode | AudioInsert) {\n    if (this.#disconnected) {\n      throw Error(\"Can't add insert to disconnected channel\");\n    }\n    this.#inserts ??= [];\n    this.#inserts.push(effect);\n    this.#disconnect();\n    this.#disconnect = connectSerial([\n      this.input,\n      ...this.#inserts,\n      this.#volume,\n      this.#config.destination,\n    ]);\n  }\n\n  addEffect(\n    name: string,\n    effect: AudioNode | { input: AudioNode },\n    mixValue: number\n  ) {\n    if (this.#disconnected) {\n      throw Error(\"Can't add effect to disconnected channel\");\n    }\n    const mix = this.context.createGain();\n    mix.gain.value = mixValue;\n    const input = \"input\" in effect ? effect.input : effect;\n    const disconnect = connectSerial([this.#volume, mix, input]);\n\n    this.#sends ??= [];\n    this.#sends.push({ name, mix, disconnect });\n  }\n\n  sendEffect(name: string, mix: number) {\n    if (this.#disconnected) {\n      throw Error(\"Can't send effect to disconnected channel\");\n    }\n\n    const send = this.#sends?.find((send) => send.name === name);\n    if (send) {\n      send.mix.gain.value = mix;\n    } else {\n      console.warn(\"Send bus not found: \" + name);\n    }\n  }\n\n  disconnect() {\n    if (this.#disconnected) return;\n    this.#disconnected = true;\n    this.#disconnect();\n    this.#unsubscribe();\n    this.#sends?.forEach((send) => send.disconnect());\n    this.#sends = undefined;\n  }\n}\n","/**\n * A sorted items that uses binary search to insert items in sorted order.\n * @private\n */\nexport class SortedQueue<T> {\n  #items: T[] = [];\n  constructor(public readonly compare: (a: T, b: T) => number) {}\n\n  push(item: T) {\n    const len = this.#items.length;\n\n    let left = 0;\n    let right = len - 1;\n    let index = len;\n\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2);\n      if (this.compare(item, this.#items[mid]) < 0) {\n        index = mid;\n        right = mid - 1;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    this.#items.splice(index, 0, item);\n  }\n\n  pop() {\n    return this.#items.shift();\n  }\n\n  peek(): T | undefined {\n    return this.#items[0];\n  }\n\n  removeAll(predicate: (item: T) => boolean) {\n    const len = this.#items.length;\n    this.#items = this.#items.filter((item) => !predicate(item));\n    return this.#items.length !== len;\n  }\n\n  clear() {\n    this.#items = [];\n  }\n\n  size() {\n    return this.#items.length;\n  }\n}\n","import { SortedQueue } from \"./sorted-queue\";\nimport { InternalPlayer, SampleStart, SampleStop } from \"./types\";\n\ntype SampleStartWithTime = SampleStart & { time: number };\n\nfunction compose<T>(a?: (x: T) => void, b?: (x: T) => void) {\n  return a && b\n    ? (x: T) => {\n        a(x);\n        b(x);\n      }\n    : a ?? b;\n}\n\nexport type QueuedPlayerConfig = {\n  scheduleLookaheadMs: number;\n  scheduleIntervalMs: number;\n  onStart?: (sample: SampleStart) => void;\n  onEnded?: (sample: SampleStart) => void;\n};\n\nfunction getConfig(options: Partial<QueuedPlayerConfig>) {\n  const config: QueuedPlayerConfig = {\n    scheduleLookaheadMs: options.scheduleLookaheadMs ?? 200,\n    scheduleIntervalMs: options.scheduleIntervalMs ?? 50,\n    onStart: options.onStart,\n    onEnded: options.onEnded,\n  };\n\n  if (config.scheduleLookaheadMs < 1) {\n    throw Error(\"scheduleLookaheadMs must be greater than 0\");\n  }\n  if (config.scheduleIntervalMs < 1) {\n    throw Error(\"scheduleIntervalMs must be greater than 0\");\n  }\n  if (config.scheduleLookaheadMs < config.scheduleIntervalMs) {\n    throw Error(\"scheduleLookaheadMs must be greater than scheduleIntervalMs\");\n  }\n\n  return config;\n}\n\n/**\n * A SamplePlayer that queues up samples to be played in the future.\n *\n * @private\n */\nexport class QueuedPlayer implements InternalPlayer {\n  private readonly player: InternalPlayer;\n  #config: QueuedPlayerConfig;\n  #queue: SortedQueue<SampleStartWithTime>;\n  #intervalId: NodeJS.Timeout | undefined;\n\n  public constructor(\n    player: InternalPlayer,\n    options: Partial<QueuedPlayerConfig> = {}\n  ) {\n    this.#config = getConfig(options);\n\n    this.#queue = new SortedQueue<SampleStartWithTime>(\n      (a, b) => a.time - b.time\n    );\n    this.player = player;\n  }\n\n  get context() {\n    return this.player.context;\n  }\n\n  get buffers() {\n    return this.player.buffers;\n  }\n\n  get isRunning() {\n    return this.#intervalId !== undefined;\n  }\n\n  start(sample: SampleStart) {\n    const context = this.player.context;\n    const now = context.currentTime;\n    const startAt = sample.time ?? now;\n    const lookAhead = this.#config.scheduleLookaheadMs / 1000;\n    sample.onStart = compose(sample.onStart, this.#config.onStart);\n    sample.onEnded = compose(sample.onEnded, this.#config.onEnded);\n\n    if (startAt < now + lookAhead) {\n      return this.player.start(sample);\n    }\n    this.#queue.push({ ...sample, time: startAt });\n\n    if (!this.#intervalId) {\n      this.#intervalId = setInterval(() => {\n        const nextTick = context.currentTime + lookAhead;\n        while (this.#queue.size() && this.#queue.peek()!.time <= nextTick) {\n          const sample = this.#queue.pop();\n          if (sample) {\n            this.player.start(sample);\n          }\n        }\n        if (!this.#queue.size()) {\n          clearInterval(this.#intervalId!);\n          this.#intervalId = undefined;\n        }\n      }, this.#config.scheduleIntervalMs);\n    }\n\n    return (time?: number) => {\n      if (!time || time < startAt) {\n        if (!this.#queue.removeAll((item) => item === sample)) {\n          this.player.stop({ ...sample, time });\n        }\n      } else {\n        this.player.stop({ ...sample, time });\n      }\n    };\n  }\n\n  stop(sample?: SampleStop) {\n    this.player.stop(sample);\n\n    if (!sample) {\n      this.#queue.clear();\n      return;\n    }\n\n    const time = sample?.time ?? 0;\n    const stopId = sample?.stopId;\n    if (stopId) {\n      this.#queue.removeAll((item) =>\n        item.time >= time && item.stopId\n          ? item.stopId === stopId\n          : item.note === stopId\n      );\n    } else {\n      this.#queue.removeAll((item) => item.time >= time);\n    }\n  }\n\n  disconnect() {\n    this.player.disconnect();\n  }\n}\n","import { connectSerial } from \"./connect\";\nimport { AudioBuffers } from \"./load-audio\";\nimport { Trigger, createTrigger, unsubscribeAll } from \"./signals\";\nimport {\n  InternalPlayer,\n  SampleOptions,\n  SampleStart,\n  SampleStop,\n} from \"./types\";\nimport { midiVelToGain } from \"./volume\";\n\nexport type SamplePlayerConfig = {\n  velocityToGain: (velocity: number) => number;\n  destination: AudioNode;\n} & SampleOptions;\n\n/**\n * A sample player. This is used internally by the Sampler.\n *\n * @private Not intended for public use\n */\nexport class SamplePlayer implements InternalPlayer {\n  public readonly buffers: AudioBuffers;\n  #config: SamplePlayerConfig;\n  #disconnected = false;\n  #stop: Trigger<SampleStop | undefined>;\n\n  public constructor(\n    public readonly context: BaseAudioContext,\n    private readonly options: Partial<SamplePlayerConfig>\n  ) {\n    this.#config = {\n      velocityToGain: options.velocityToGain ?? midiVelToGain,\n      destination: options.destination ?? context.destination,\n    };\n    this.buffers = {};\n    this.#stop = createTrigger();\n  }\n\n  public start(sample: SampleStart) {\n    if (this.#disconnected) {\n      throw new Error(\"Can't start a sample on disconnected player\");\n    }\n    const context = this.context;\n    const buffer =\n      (sample.name && this.buffers[sample.name]) || this.buffers[sample.note];\n    if (!buffer) {\n      console.warn(`Sample not found: '${sample.note}'`);\n      return () => undefined;\n    }\n\n    const source = context.createBufferSource();\n    source.buffer = buffer;\n\n    // Seems that detune is not implemented in Safari (and therefore, in standardized-audio-context)\n    const cents = sample.detune ?? this.options.detune ?? 0;\n    if (source.detune) {\n      source.detune.value = cents;\n    } else if (source.playbackRate) {\n      source.playbackRate.value = Math.pow(2, cents / 1200);\n    }\n\n    // Low pass filter\n    const lpfCutoffHz = sample.lpfCutoffHz ?? this.options.lpfCutoffHz;\n    const lpf = lpfCutoffHz ? context.createBiquadFilter() : undefined;\n    if (lpfCutoffHz && lpf) {\n      lpf.type = \"lowpass\";\n      lpf.frequency.value = lpfCutoffHz;\n    }\n\n    // Sample volume\n    const volume = context.createGain();\n    const velocity = sample.velocity ?? this.options.velocity ?? 100;\n    volume.gain.value = this.#config.velocityToGain(velocity);\n\n    const loop = sample.loop ?? this.options.loop;\n    if (loop) {\n      source.loop = true;\n      source.loopStart = sample.loopStart ?? 0;\n      source.loopEnd = sample.loopEnd ?? buffer.duration;\n    }\n\n    // Stop with decay\n    const decayTime = sample.decayTime ?? this.options.decayTime;\n    const [decay, startDecay] = createDecayEnvelope(context, decayTime);\n    function stop(time?: number) {\n      time ??= context.currentTime;\n      if (time <= startAt) {\n        source.stop(time);\n      } else {\n        const stopAt = startDecay(time);\n        source.stop(stopAt);\n      }\n    }\n\n    // Compensate gain\n    const gainCompensation = sample.gainOffset\n      ? context.createGain()\n      : undefined;\n    if (gainCompensation && sample.gainOffset) {\n      gainCompensation.gain.value = sample.gainOffset;\n    }\n\n    const stopId = sample.stopId ?? sample.note;\n    const cleanup = unsubscribeAll([\n      connectSerial([\n        source,\n        lpf,\n        volume,\n        decay,\n        gainCompensation,\n        this.#config.destination,\n      ]),\n      sample.stop?.(stop),\n      this.#stop.subscribe((event) => {\n        if (!event || event.stopId === undefined || event.stopId === stopId) {\n          stop(event?.time);\n        }\n      }),\n    ]);\n    source.onended = () => {\n      cleanup();\n      sample.onEnded?.(sample);\n    };\n\n    sample.onStart?.(sample);\n    const startAt = Math.max(sample.time ?? 0, context.currentTime);\n    source.start(sample.time);\n\n    let duration = sample.duration ?? buffer.duration;\n    if (typeof sample.duration == \"number\") {\n      stop(startAt + duration);\n    }\n\n    return stop;\n  }\n\n  stop(sample?: SampleStop) {\n    this.#stop.trigger(sample);\n  }\n\n  public disconnect() {\n    if (this.#disconnected) return;\n    this.#disconnected = true;\n    this.stop();\n    Object.keys(this.buffers).forEach((key) => {\n      delete this.buffers[key];\n    });\n  }\n\n  public get connected() {\n    return !this.#disconnected;\n  }\n}\n\nfunction createDecayEnvelope(\n  context: BaseAudioContext,\n  envelopeTime = 0.2\n): [AudioNode, (time: number) => number] {\n  let stopAt = 0;\n  const envelope = context.createGain();\n  envelope.gain.value = 1.0;\n\n  function start(time: number): number {\n    if (stopAt) return stopAt;\n    envelope.gain.cancelScheduledValues(time);\n    const envelopeAt = time || context.currentTime;\n    stopAt = envelopeAt + envelopeTime;\n    envelope.gain.setValueAtTime(1.0, envelopeAt);\n    envelope.gain.linearRampToValueAtTime(0, stopAt);\n\n    return stopAt;\n  }\n\n  return [envelope, start];\n}\n","import { SamplerConfig } from \"../sampler\";\nimport { Channel, ChannelConfig, OutputChannel } from \"./channel\";\nimport { QueuedPlayer, QueuedPlayerConfig } from \"./queued-player\";\nimport { SamplePlayer } from \"./sample-player\";\nimport { InternalPlayer, SampleStart, SampleStop } from \"./types\";\n\nexport type DefaultPlayerConfig = ChannelConfig &\n  SamplerConfig &\n  QueuedPlayerConfig;\n\n/**\n * Player used by instruments\n * @private\n */\nexport class DefaultPlayer implements InternalPlayer {\n  public readonly output: OutputChannel;\n  private readonly player: InternalPlayer;\n\n  constructor(\n    public readonly context: BaseAudioContext,\n    options?: Partial<DefaultPlayerConfig>\n  ) {\n    const channel = new Channel(context, options);\n    this.player = new QueuedPlayer(\n      new SamplePlayer(context, { ...options, destination: channel.input }),\n      options\n    );\n    this.output = channel;\n  }\n\n  get buffers() {\n    return this.player.buffers;\n  }\n\n  public start(sample: SampleStart) {\n    return this.player.start(sample);\n  }\n\n  public stop(sample?: SampleStop | string | number) {\n    this.player.stop(\n      typeof sample === \"object\"\n        ? sample\n        : sample !== undefined\n        ? { stopId: sample }\n        : undefined\n    );\n  }\n\n  disconnect() {\n    this.output.disconnect();\n    this.player.disconnect();\n  }\n}\n","import { Storage } from \"../storage\";\n\nexport type AudioBuffers = Record<string | number, AudioBuffer | undefined>;\n\n/**\n * A function that downloads audio into a AudioBuffers\n */\nexport type AudioBuffersLoader = (\n  context: BaseAudioContext,\n  buffers: AudioBuffers\n) => Promise<void>;\n\nexport async function loadAudioBuffer(\n  context: BaseAudioContext,\n  url: string,\n  storage: Storage\n): Promise<AudioBuffer | undefined> {\n  url = url.replace(/#/g, \"%23\").replace(/([^:]\\/)\\/+/g, \"$1\");\n  const response = await storage.fetch(url);\n  if (response.status !== 200) {\n    console.warn(\n      \"Error loading buffer. Invalid status: \",\n      response.status,\n      url\n    );\n    return;\n  }\n  try {\n    const audioData = await response.arrayBuffer();\n    const buffer = await context.decodeAudioData(audioData);\n    return buffer;\n  } catch (error) {\n    console.warn(\"Error loading buffer\", error, url);\n  }\n}\n\nexport function findFirstSupportedFormat(formats: string[]): string | null {\n  if (typeof document === \"undefined\") return null;\n\n  const audio = document.createElement(\"audio\");\n  for (let i = 0; i < formats.length; i++) {\n    const format = formats[i];\n    const canPlay = audio.canPlayType(`audio/${format}`);\n    if (canPlay === \"probably\" || canPlay === \"maybe\") {\n      return format;\n    }\n    // check Safari for aac format\n    if (format === \"m4a\") {\n      const canPlay = audio.canPlayType(`audio/aac`);\n      if (canPlay === \"probably\" || canPlay === \"maybe\") {\n        return format;\n      }\n    }\n  }\n  return null;\n}\n\nexport function getPreferredAudioExtension() {\n  const format = findFirstSupportedFormat([\"ogg\", \"m4a\"]) ?? \"ogg\";\n  return \".\" + format;\n}\n","export type StorageResponse = {\n  readonly status: number;\n  arrayBuffer(): Promise<ArrayBuffer>;\n  json(): Promise<any>;\n  text(): Promise<string>;\n};\n\nexport type Storage = {\n  fetch: (url: string) => Promise<StorageResponse>;\n};\n\nexport const HttpStorage: Storage = {\n  fetch(url) {\n    return fetch(url);\n  },\n};\n\nexport class CacheStorage implements Storage {\n  #cache: Promise<Cache>;\n\n  constructor(name = \"smplr\") {\n    if (typeof window === \"undefined\" || !(\"caches\" in window)) {\n      this.#cache = Promise.reject(\"CacheStorage not supported\");\n    } else {\n      this.#cache = caches.open(name);\n    }\n  }\n\n  async fetch(url: string): Promise<StorageResponse> {\n    const request = new Request(url);\n    try {\n      return await this.#tryFromCache(request);\n    } catch (err) {\n      const response = await fetch(request);\n      await this.#saveResponse(request, response);\n      return response;\n    }\n  }\n\n  async #tryFromCache(request: Request): Promise<StorageResponse> {\n    const cache = await this.#cache;\n    const response = await cache.match(request);\n    if (response) return response;\n    else throw Error(\"Not found\");\n  }\n\n  async #saveResponse(request: Request, response: Response) {\n    try {\n      const cache = await this.#cache;\n      await cache.put(request, response.clone());\n    } catch (err) {}\n  }\n}\n","import { Storage } from \"../storage\";\n\nexport type DrumMachineInstrument = {\n  baseUrl: string;\n  name: string;\n  samples: string[];\n  sampleNames: string[];\n  nameToSample: Record<string, string | undefined>;\n  sampleNameVariations: Record<string, string[]>;\n};\nexport const EMPTY_INSTRUMENT: DrumMachineInstrument = {\n  baseUrl: \"\",\n  name: \"\",\n  samples: [],\n  sampleNames: [],\n  nameToSample: {},\n  sampleNameVariations: {},\n};\n\nexport async function fetchDrumMachineInstrument(\n  url: string,\n  storage: Storage\n): Promise<DrumMachineInstrument> {\n  const res = await storage.fetch(url);\n  const json = await res.json();\n  // need to fix json\n  json.baseUrl = url.replace(\"/dm.json\", \"\");\n  json.sampleNames = [];\n  json.nameToSample = {};\n  json.sampleNameVariations = {};\n  for (const sampleSrc of json.samples) {\n    const sample =\n      sampleSrc.indexOf(\"/\") !== -1 ? sampleSrc : sampleSrc.replace(\"-\", \"/\");\n    json.nameToSample[sample] = sample;\n    const [base, variation] = sample.split(\"/\");\n    if (!json.sampleNames.includes(base)) {\n      json.sampleNames.push(base);\n    }\n    json.nameToSample[base] ??= sample;\n    json.sampleNameVariations[base] ??= [];\n    if (variation) {\n      json.sampleNameVariations[base].push(`${base}/${variation}`);\n    }\n  }\n\n  return json;\n}\n","import { OutputChannel } from \"../player/channel\";\nimport { DefaultPlayer, DefaultPlayerConfig } from \"../player/default-player\";\nimport {\n  AudioBuffers,\n  findFirstSupportedFormat,\n  loadAudioBuffer,\n} from \"../player/load-audio\";\nimport { SampleStart, SampleStop } from \"../player/types\";\nimport { HttpStorage, Storage } from \"../storage\";\nimport {\n  DrumMachineInstrument,\n  EMPTY_INSTRUMENT,\n  fetchDrumMachineInstrument,\n} from \"./dm-instrument\";\n\nexport function getDrumMachineNames() {\n  return Object.keys(INSTRUMENTS);\n}\n\nconst INSTRUMENTS: Record<string, string> = {\n  \"TR-808\": \"https://danigb.github.io/samples/drum-machines/TR-808/dm.json\",\n  \"Casio-RZ1\":\n    \"https://danigb.github.io/samples/drum-machines/Casio-RZ1/dm.json\",\n  \"LM-2\": \"https://danigb.github.io/samples/drum-machines/LM-2/dm.json\",\n  \"MFB-512\": \"https://danigb.github.io/samples/drum-machines/MFB-512/dm.json\",\n  \"Roland CR-8000\":\n    \"https://danigb.github.io/samples/drum-machines/Roland-CR-8000/dm.json\",\n};\n\ntype DrumMachineConfig = {\n  instrument: string;\n  url: string;\n  storage: Storage;\n};\n\nexport type DrumMachineOptions = Partial<\n  DrumMachineConfig & DefaultPlayerConfig\n>;\n\nfunction getConfig(options?: DrumMachineOptions): DrumMachineConfig {\n  const config = {\n    instrument: options?.instrument ?? \"TR-808\",\n    storage: options?.storage ?? HttpStorage,\n    url: options?.url ?? \"\",\n  };\n  config.url ||= INSTRUMENTS[config.instrument];\n  if (!config.url) throw new Error(\"Invalid instrument: \" + config.instrument);\n\n  return config;\n}\n\nexport class DrumMachine {\n  #instrument = EMPTY_INSTRUMENT;\n  private readonly player: DefaultPlayer;\n  public readonly load: Promise<this>;\n  public readonly output: OutputChannel;\n\n  public constructor(context: AudioContext, options?: DrumMachineOptions) {\n    const config = getConfig(options);\n\n    const instrument = fetchDrumMachineInstrument(config.url, config.storage);\n    this.player = new DefaultPlayer(context, options);\n    this.output = this.player.output;\n    this.load = drumMachineLoader(\n      context,\n      this.player.buffers,\n      instrument,\n      config.storage\n    ).then(() => this);\n\n    instrument.then((instrument) => {\n      this.#instrument = instrument;\n    });\n  }\n\n  async loaded() {\n    console.warn(\"deprecated: use load instead\");\n    return this.load;\n  }\n\n  get sampleNames(): string[] {\n    return this.#instrument.sampleNames;\n  }\n\n  getVariations(name: string): string[] {\n    return this.#instrument.sampleNameVariations[name] ?? [];\n  }\n\n  start(sample: SampleStart) {\n    const sampleName = this.#instrument.nameToSample[sample.note];\n    return this.player.start({\n      ...sample,\n      note: sampleName ? sampleName : sample.note,\n      stopId: sample.stopId ?? sample.note,\n    });\n  }\n\n  stop(sample: SampleStop) {\n    return this.player.stop(sample);\n  }\n}\n\nfunction drumMachineLoader(\n  context: BaseAudioContext,\n  buffers: AudioBuffers,\n  instrument: Promise<DrumMachineInstrument>,\n  storage: Storage\n) {\n  const format = findFirstSupportedFormat([\"ogg\", \"m4a\"]) ?? \"ogg\";\n  return instrument.then((data) =>\n    Promise.all(\n      data.samples.map(async (sample) => {\n        const url = `${data.baseUrl}/${sample}.${format}`;\n        const sampleName =\n          sample.indexOf(\"/\") !== -1 ? sample : sample.replace(\"-\", \"/\");\n        const buffer = await loadAudioBuffer(context, url, storage);\n        if (buffer) buffers[sampleName] = buffer;\n      })\n    )\n  );\n}\n","function noteNameToMidi(note: string): number | undefined {\n  const REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|)(-?\\d+)$/;\n  const m = REGEX.exec(note);\n  if (!m) return;\n  const letter = m[1].toUpperCase();\n  if (!letter) return;\n\n  const acc = m[2];\n  const alt = acc[0] === \"b\" ? -acc.length : acc.length;\n  const oct = m[3] ? +m[3] : 4;\n\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  return [0, 2, 4, 5, 7, 9, 11][step] + alt + 12 * (oct + 1);\n}\n\nexport function toMidi(note: string | number | undefined): number | undefined {\n  return note === undefined\n    ? undefined\n    : typeof note === \"number\"\n    ? note\n    : noteNameToMidi(note);\n}\n\nexport function findNearestMidi(\n  midi: number,\n  isAvailable: Record<string | number, unknown>\n): [number, number] {\n  let i = 0;\n  while (isAvailable[midi + i] === undefined && i < 128) {\n    if (i > 0) i = -i;\n    else i = -i + 1;\n  }\n\n  return i === 127 ? [midi, 0] : [midi + i, -i * 100];\n}\n","import {\n  AudioBuffers,\n  findFirstSupportedFormat,\n  loadAudioBuffer,\n} from \"../player/load-audio\";\nimport { Storage } from \"../storage\";\nimport { SfzInstrument } from \"./sfz-kits\";\nimport { Websfz, WebsfzGroup } from \"./websfz\";\n\nexport async function loadSfzBuffers(\n  context: AudioContext,\n  buffers: AudioBuffers,\n  websfz: Websfz,\n  storage: Storage\n) {\n  websfz.groups.forEach((group) => {\n    const urls = getWebsfzGroupUrls(websfz, group);\n    return loadAudioBuffers(context, buffers, urls, storage);\n  });\n}\n\nexport async function SfzInstrumentLoader(\n  instrument: string | Websfz | SfzInstrument,\n  storage: Storage\n): Promise<Websfz> {\n  const isWebsfz = (inst: any): inst is Websfz => \"global\" in inst;\n  const isSfzInstrument = (inst: any): inst is SfzInstrument =>\n    \"websfzUrl\" in inst;\n\n  if (typeof instrument === \"string\") {\n    return fetchWebSfz(instrument, storage);\n  } else if (isWebsfz(instrument)) {\n    return instrument;\n  } else if (isSfzInstrument(instrument)) {\n    const websfz = await fetchWebSfz(instrument.websfzUrl, storage);\n    websfz.meta ??= {};\n    if (instrument.name) websfz.meta.name = instrument.name;\n    if (instrument.baseUrl) websfz.meta.baseUrl = instrument.baseUrl;\n    if (instrument.formats) websfz.meta.formats = instrument.formats;\n    return websfz;\n  } else {\n    throw new Error(\"Invalid instrument: \" + JSON.stringify(instrument));\n  }\n}\n\n// @private\nasync function loadAudioBuffers(\n  context: AudioContext,\n  buffers: AudioBuffers,\n  urls: Record<string, string>,\n  storage: Storage\n) {\n  await Promise.all(\n    Object.keys(urls).map(async (sampleId) => {\n      if (buffers[sampleId]) return;\n\n      const buffer = await loadAudioBuffer(context, urls[sampleId], storage);\n      if (buffer) buffers[sampleId] = buffer;\n      return buffers;\n    })\n  );\n}\n\n// @private\nasync function fetchWebSfz(url: string, storage: Storage): Promise<Websfz> {\n  try {\n    const response = await fetch(url);\n    const json = await response.json();\n    return json as Websfz;\n  } catch (error) {\n    console.warn(`Can't load SFZ file ${url}`, error);\n    throw new Error(`Can't load SFZ file ${url}`);\n  }\n}\n\n// @private\nexport function getWebsfzGroupUrls(websfz: Websfz, group: WebsfzGroup) {\n  const urls: Record<string, string> = {};\n  const baseUrl = websfz.meta.baseUrl ?? \"\";\n  const format = findFirstSupportedFormat(websfz.meta.formats ?? []) ?? \"ogg\";\n\n  const prefix = websfz.global[\"default_path\"] ?? \"\";\n\n  if (!group) return urls;\n\n  return group.regions.reduce((urls, region) => {\n    if (region.sample) {\n      urls[region.sample] = `${baseUrl}/${prefix}${region.sample}.${format}`;\n    }\n    return urls;\n  }, urls);\n}\n","import { Websfz, WebsfzGroup, WebsfzRegion } from \"./websfz\";\n\nfunction checkRange(value?: number, low?: number, hi?: number) {\n  const isAboveLow = low === undefined || (value !== undefined && value >= low);\n  const isBelowHi = hi === undefined || (value !== undefined && value <= hi);\n  return isAboveLow && isBelowHi;\n}\n\nexport function findRegions(\n  websfz: Websfz,\n  note: { midi?: number; velocity?: number; cc64?: number }\n): [WebsfzGroup, WebsfzRegion][] {\n  const regions: [WebsfzGroup, WebsfzRegion][] = [];\n  for (const group of websfz.groups) {\n    if (\n      checkRange(note.midi, group.lokey, group.hikey) &&\n      checkRange(note.velocity, group.lovel, group.hivel) &&\n      checkRange(note.cc64, group.locc64, group.hicc64)\n    ) {\n      for (const region of group.regions) {\n        if (\n          checkRange(note.midi, region.lokey, region.hikey) &&\n          checkRange(note.velocity, region.lovel, region.hivel) &&\n          checkRange(note.cc64, group.locc64, group.hicc64)\n        ) {\n          regions.push([group, region]);\n        }\n      }\n    }\n  }\n  return regions;\n}\n","import { DefaultPlayer, DefaultPlayerConfig } from \"../player/default-player\";\nimport { toMidi } from \"../player/midi\";\nimport { SampleStart, SampleStop } from \"../player/types\";\nimport { HttpStorage, Storage } from \"../storage\";\nimport { SfzInstrument } from \"./sfz-kits\";\nimport { SfzInstrumentLoader, loadSfzBuffers } from \"./sfz-load\";\nimport { findRegions } from \"./sfz-regions\";\nimport { Websfz } from \"./websfz\";\n\nexport type SfzSamplerConfig = {\n  instrument: SfzInstrument | Websfz | string;\n  storage: Storage;\n  destination: AudioNode;\n  volume: number;\n  velocity: number;\n  detune: number;\n  decayTime?: number;\n  lpfCutoffHz?: number;\n};\n\nconst EMPTY_WEBSFZ: Websfz = Object.freeze({\n  meta: {},\n  global: {},\n  groups: [],\n});\n\nexport class SfzSampler {\n  public readonly options: Readonly<SfzSamplerConfig>;\n  private readonly player: DefaultPlayer;\n  #websfz: Websfz;\n  public readonly load: Promise<this>;\n\n  constructor(\n    public readonly context: AudioContext,\n    options: Partial<SfzSamplerConfig & DefaultPlayerConfig> &\n      Pick<SfzSamplerConfig, \"instrument\">\n  ) {\n    this.options = Object.freeze(\n      Object.assign(\n        {\n          volume: 100,\n          velocity: 100,\n          storage: HttpStorage,\n          detune: 0,\n          destination: context.destination,\n        },\n        options\n      )\n    );\n    this.player = new DefaultPlayer(context, options);\n    this.#websfz = EMPTY_WEBSFZ;\n\n    this.load = SfzInstrumentLoader(options.instrument, this.options.storage)\n      .then((result) => {\n        this.#websfz = Object.freeze(result);\n        return loadSfzBuffers(\n          context,\n          this.player.buffers,\n          this.#websfz,\n          this.options.storage\n        );\n      })\n      .then(() => this);\n  }\n\n  get output() {\n    return this.player.output;\n  }\n\n  async loaded() {\n    console.warn(\"deprecated: use load instead\");\n    return this.load;\n  }\n\n  start(sample: SampleStart | string | number) {\n    this.#startLayers(typeof sample === \"object\" ? sample : { note: sample });\n  }\n\n  stop(sample?: SampleStop | string | number) {\n    this.player.stop(sample);\n  }\n\n  disconnect() {\n    this.player.disconnect();\n  }\n\n  #startLayers(sample: SampleStart) {\n    const midi = toMidi(sample.note);\n    if (midi === undefined) return () => undefined;\n\n    const velocity = sample.velocity ?? this.options.velocity;\n    const regions = findRegions(this.#websfz, { midi, velocity });\n\n    const onEnded = () => {\n      sample.onEnded?.(sample);\n    };\n\n    const stopAll = regions.map(([group, region]) => {\n      let target = region.pitch_keycenter ?? region.key ?? midi;\n      const detune = (midi - target) * 100;\n      return this.player.start({\n        ...sample,\n        note: region.sample,\n        decayTime: sample.decayTime,\n        detune: detune + (sample.detune ?? this.options.detune),\n        onEnded,\n        stopId: midi,\n      });\n    });\n\n    switch (stopAll.length) {\n      case 0:\n        return () => undefined;\n      case 1:\n        return stopAll[0];\n      default:\n        return (time?: number) => stopAll.forEach((stop) => stop(time));\n    }\n  }\n}\n","import { AudioInsert } from \"./player/connect\";\nimport { Subscribe } from \"./player/signals\";\n\n// @private\nexport function createTremolo(\n  context: AudioContext,\n  depth: Subscribe<number>\n): AudioInsert {\n  const input = context.createGain();\n  const output = context.createGain();\n\n  // force mono sources to be stereo\n  input.channelCount = 2;\n  input.channelCountMode = \"explicit\";\n\n  const splitter = context.createChannelSplitter(2);\n  const ampL = context.createGain();\n  const ampR = context.createGain();\n  const merger = context.createChannelMerger(2);\n\n  const lfoL = context.createOscillator();\n  lfoL.type = \"sine\";\n  lfoL.frequency.value = 1;\n  lfoL.start();\n  const lfoLAmp = context.createGain();\n  const lfoR = context.createOscillator();\n  lfoR.type = \"sine\";\n  lfoR.frequency.value = 1.1;\n  lfoR.start();\n  const lfoRAmp = context.createGain();\n\n  input.connect(splitter);\n  splitter.connect(ampL, 0);\n  splitter.connect(ampR, 1);\n  ampL.connect(merger, 0, 0);\n  ampR.connect(merger, 0, 1);\n  lfoL.connect(lfoLAmp);\n  lfoLAmp.connect(ampL.gain);\n  lfoR.connect(lfoRAmp);\n  lfoRAmp.connect(ampR.gain);\n  merger.connect(output);\n\n  const unsubscribe = depth((depth) => {\n    lfoLAmp.gain.value = depth;\n    lfoRAmp.gain.value = depth;\n  });\n\n  input.disconnect = () => {\n    unsubscribe();\n    lfoL.stop();\n    lfoR.stop();\n    input.disconnect(splitter);\n    splitter.disconnect(ampL, 0);\n    splitter.disconnect(ampR, 1);\n    ampL.disconnect(merger, 0, 0);\n    ampR.disconnect(merger, 0, 1);\n    lfoL.disconnect(ampL);\n    lfoR.disconnect(ampR);\n    merger.disconnect(output);\n  };\n\n  return { input, output };\n}\n","import { createControl } from \"./player/signals\";\nimport { midiVelToGain } from \"./player/volume\";\nimport { SfzSampler, SfzSamplerConfig } from \"./sfz/sfz-sampler\";\nimport { createTremolo } from \"./tremolo\";\n\nexport function getElectricPianoNames() {\n  return Object.keys(INSTRUMENTS);\n}\n\nconst INSTRUMENTS: Record<string, string> = {\n  CP80: \"https://danigb.github.io/samples/gs-e-pianos/CP80/cp80.websfz.json\",\n  PianetT:\n    \"https://danigb.github.io/samples/gs-e-pianos/Pianet T/pianet-t.websfz.json\",\n  WurlitzerEP200:\n    \"https://danigb.github.io/samples/gs-e-pianos/Wurlitzer EP200/wurlitzer-ep200.websfz.json\",\n  TX81Z:\n    \"https://danigb.github.io/samples/vcsl/TX81Z/tx81z-fm-piano.websfz.json\",\n};\n\nexport class ElectricPiano extends SfzSampler {\n  public readonly tremolo: Readonly<{ level: (value: number) => void }>;\n  constructor(\n    context: AudioContext,\n    options: Partial<SfzSamplerConfig> & { instrument: string }\n  ) {\n    super(context, {\n      ...options,\n      instrument: INSTRUMENTS[options.instrument] ?? options.instrument,\n    });\n    const depth = createControl(0);\n    this.tremolo = {\n      level: (level) => depth.set(midiVelToGain(level)),\n    };\n    const tremolo = createTremolo(context, depth.subscribe);\n    this.output.addInsert(tremolo);\n  }\n}\n","import { toMidi } from \"./midi\";\nimport { RegionGroup, SampleOptions, SampleRegion, SampleStart } from \"./types\";\nimport { dbToGain } from \"./volume\";\n\nexport function createEmptyRegionGroup(\n  sample: Partial<SampleOptions> = {}\n): RegionGroup {\n  return { regions: [], sample };\n}\n\nexport function findSamplesInRegions(\n  group: RegionGroup,\n  sample: SampleStart,\n  seqNumber?: number\n): SampleStart[] {\n  const results: SampleStart[] = [];\n  const midi = toMidi(sample.note);\n  if (midi === undefined) return results;\n\n  for (const region of group.regions) {\n    const found = findSampleInRegion(\n      midi,\n      seqNumber ?? 0,\n      sample,\n      region,\n      group.sample\n    );\n    if (found) results.push(found);\n  }\n  return results;\n}\n\nexport function findFirstSampleInRegions(\n  group: RegionGroup,\n  sample: SampleStart,\n  seqNumber?: number\n): SampleStart | undefined {\n  const midi = toMidi(sample.note);\n\n  if (midi === undefined) return undefined;\n\n  for (const region of group.regions) {\n    const found = findSampleInRegion(\n      midi,\n      seqNumber ?? 0,\n      sample,\n      region,\n      group.sample\n    );\n    if (found) return found;\n  }\n  return undefined;\n}\n\nfunction findSampleInRegion(\n  midi: number,\n  seqNum: number,\n  sample: SampleStart,\n  region: SampleRegion,\n  defaults: Partial<SampleOptions>\n): SampleStart | undefined {\n  const matchMidi =\n    midi >= (region.midiLow ?? 0) && midi <= (region.midiHigh ?? 127);\n  if (!matchMidi) return undefined;\n  const matchVelocity =\n    sample.velocity === undefined ||\n    (sample.velocity >= (region.velLow ?? 0) &&\n      sample.velocity <= (region.velHigh ?? 127));\n  if (!matchVelocity) return undefined;\n\n  if (region.seqLength) {\n    const currentSeq = seqNum % region.seqLength;\n    const regionIndex = (region.seqPosition ?? 1) - 1;\n    if (currentSeq !== regionIndex) return undefined;\n  }\n\n  const semitones = midi - region.midiPitch;\n  const velocity = sample.velocity ?? defaults.velocity;\n  const regionGainOffset = region.volume ? dbToGain(region.volume) : 0;\n  const sampleGainOffset = sample.gainOffset ?? defaults.gainOffset ?? 0;\n  return {\n    decayTime:\n      sample?.decayTime ?? region.sample?.decayTime ?? defaults.decayTime,\n    detune: 100 * (semitones + (region.tune ?? 0)),\n    duration: sample?.duration ?? region.sample?.duration ?? defaults.duration,\n    gainOffset: sampleGainOffset + regionGainOffset || undefined,\n    loop: sample?.loop ?? region.sample?.loop ?? defaults.loop,\n    loopEnd: sample?.loopEnd ?? region.sample?.loopEnd ?? defaults.loopEnd,\n    loopStart:\n      sample?.loopStart ?? region.sample?.loopStart ?? defaults.loopStart,\n    lpfCutoffHz:\n      sample?.lpfCutoffHz ?? region.sample?.lpfCutoffHz ?? defaults.lpfCutoffHz,\n    name: region.sampleName,\n    note: midi,\n    onEnded: sample.onEnded,\n    onStart: sample.onStart,\n    stopId: sample.name,\n    time: sample.time,\n    velocity: velocity == undefined ? undefined : velocity,\n  };\n}\n\nexport function spreadRegions(regions: SampleRegion[]) {\n  if (regions.length === 0) return [];\n  regions.sort((a, b) => a.midiPitch - b.midiPitch);\n  regions[0].midiLow = 0;\n  regions[0].midiHigh = 127;\n  if (regions.length === 1) return regions;\n\n  for (let i = 1; i < regions.length; i++) {\n    const prev = regions[i - 1];\n    const curr = regions[i];\n    const mid = Math.floor((prev.midiPitch + curr.midiPitch) / 2);\n    prev.midiHigh = mid;\n    curr.midiLow = mid + 1;\n  }\n  regions[regions.length - 1].midiHigh = 127;\n\n  return regions;\n}\n","import { Channel, ChannelConfig, OutputChannel } from \"./channel\";\nimport { createEmptyRegionGroup, findSamplesInRegions } from \"./layers\";\nimport { toMidi } from \"./midi\";\nimport { QueuedPlayer, QueuedPlayerConfig } from \"./queued-player\";\nimport { SamplePlayer } from \"./sample-player\";\nimport {\n  InternalPlayer,\n  RegionGroup,\n  SampleOptions,\n  SampleStart,\n  SampleStop,\n} from \"./types\";\n\ntype PlayerOptions = ChannelConfig & SampleOptions & QueuedPlayerConfig;\n\n/**\n * A player with an channel output and a region group to read samples info from\n * @private\n */\nexport class RegionPlayer implements InternalPlayer {\n  public readonly output: OutputChannel;\n  public readonly group: RegionGroup;\n  private readonly player: InternalPlayer;\n  private seqNum = 0;\n\n  constructor(\n    public readonly context: BaseAudioContext,\n    options: Partial<PlayerOptions>\n  ) {\n    const channel = new Channel(context, options);\n    this.group = createEmptyRegionGroup();\n    this.player = new QueuedPlayer(\n      new SamplePlayer(context, { ...options, destination: channel.input }),\n      options\n    );\n    this.output = channel;\n  }\n\n  get buffers() {\n    return this.player.buffers;\n  }\n\n  start(sample: SampleStart | string | number) {\n    const found = findSamplesInRegions(\n      this.group,\n      typeof sample === \"object\" ? sample : { note: sample },\n      this.seqNum\n    );\n    this.seqNum++;\n    const stopAll = found.map((sample) => this.player.start(sample));\n    return (time?: number) => stopAll.forEach((stop) => stop(time));\n  }\n\n  stop(sample?: SampleStop | string | number) {\n    if (sample == undefined) {\n      this.player.stop();\n      return;\n    }\n\n    const toStop = typeof sample === \"object\" ? sample : { stopId: sample };\n    const midi = toMidi(toStop.stopId);\n    if (!midi) return;\n    toStop.stopId = midi;\n    this.player.stop(toStop);\n  }\n\n  disconnect() {\n    this.output.disconnect();\n    this.player.disconnect();\n  }\n}\n","import {\n  AudioBuffers,\n  getPreferredAudioExtension,\n  loadAudioBuffer,\n} from \"./player/load-audio\";\nimport { RegionGroup, SampleRegion } from \"./player/types\";\nimport { Storage } from \"./storage\";\n\nexport type SfzLoaderConfig = {\n  urlFromSampleName: (sampleName: string, audioExt: string) => string;\n  buffers: AudioBuffers;\n  group: RegionGroup;\n};\n\nexport function SfzInstrumentLoader(url: string, config: SfzLoaderConfig) {\n  const audioExt = getPreferredAudioExtension();\n\n  return async (context: BaseAudioContext, storage: Storage) => {\n    const sfz = await fetch(url).then((res) => res.text());\n    const errors = sfzToLayer(sfz, config.group);\n    if (errors.length) {\n      console.warn(\"Problems converting sfz\", errors);\n    }\n    const sampleNames = new Set<string>();\n    config.group.regions.forEach((r) => sampleNames.add(r.sampleName));\n    return Promise.all(\n      Array.from(sampleNames).map(async (sampleName) => {\n        const sampleUrl = config.urlFromSampleName(sampleName, audioExt);\n        const buffer = await loadAudioBuffer(context, sampleUrl, storage);\n        config.buffers[sampleName] = buffer;\n      })\n    );\n  };\n}\n\nexport function sfzToLayer(sfz: string, group: RegionGroup) {\n  let mode = \"global\";\n  const tokens = sfz\n    .split(\"\\n\")\n    .map(parseToken)\n    .filter((x): x is Token => !!x);\n\n  const scope = new Scope();\n  let errors: (string | undefined)[] = [];\n\n  for (const token of tokens) {\n    switch (token.type) {\n      case \"mode\":\n        errors.push(scope.closeScope(mode, group));\n        mode = token.value;\n\n        break;\n\n      case \"prop:num\":\n      case \"prop:str\":\n      case \"prop:num_arr\":\n        scope.push(token.key, token.value);\n        break;\n\n      case \"unknown\":\n        console.warn(\"Unknown SFZ token\", token.value);\n        break;\n    }\n  }\n  closeScope(mode, scope, group);\n\n  return errors.filter((x) => !!x) as string[];\n\n  function closeScope(mode: string, scope: Scope, group: RegionGroup) {}\n}\n\ntype Token =\n  | { type: \"unknown\"; value: string }\n  | { type: \"mode\"; value: string }\n  | { type: \"prop:num\"; key: string; value: number }\n  | { type: \"prop:num_arr\"; key: string; value: [number, number] }\n  | { type: \"prop:str\"; key: string; value: string };\n\nconst MODE_REGEX = /^<([^>]+)>$/;\nconst PROP_NUM_REGEX = /^([^=]+)=([-\\.\\d]+)$/;\nconst PROP_STR_REGEX = /^([^=]+)=(.+)$/;\nconst PROP_NUM_ARR_REGEX = /^([^=]+)_(\\d+)=(\\d+)$/;\nfunction parseToken(line: string): Token | undefined {\n  line = line.trim();\n  if (line === \"\") return undefined;\n  if (line.startsWith(\"//\")) return undefined;\n\n  const modeMatch = line.match(MODE_REGEX);\n  if (modeMatch) return { type: \"mode\", value: modeMatch[1] };\n\n  const propNumArrMatch = line.match(PROP_NUM_ARR_REGEX);\n  if (propNumArrMatch)\n    return {\n      type: \"prop:num_arr\",\n      key: propNumArrMatch[1],\n      value: [Number(propNumArrMatch[2]), Number(propNumArrMatch[3])],\n    };\n\n  const propNumMatch = line.match(PROP_NUM_REGEX);\n  if (propNumMatch)\n    return {\n      type: \"prop:num\",\n      key: propNumMatch[1],\n      value: Number(propNumMatch[2]),\n    };\n\n  const propStrMatch = line.match(PROP_STR_REGEX);\n  if (propStrMatch)\n    return {\n      type: \"prop:str\",\n      key: propStrMatch[1],\n      value: propStrMatch[2],\n    };\n\n  return { type: \"unknown\", value: line };\n}\n\ntype DestKey = keyof SampleRegion | \"ignore\";\n\nclass Scope {\n  values: Record<string, any> = {};\n  global: Partial<SampleRegion> = {};\n  group: Partial<SampleRegion> = {};\n\n  closeScope(mode: string, group: RegionGroup) {\n    if (mode === \"global\") {\n      // Save global properties\n      this.#closeRegion(this.global as SampleRegion);\n    } else if (mode === \"group\") {\n      // Save group properties\n      this.group = this.#closeRegion({} as SampleRegion);\n    } else if (mode === \"region\") {\n      const region = this.#closeRegion({\n        sampleName: \"\",\n        midiPitch: -1,\n        ...this.global,\n        ...this.group,\n      });\n\n      if (region.sampleName === \"\") {\n        return \"Missing sample name\";\n      }\n      if (region.midiPitch === -1) {\n        // By default, if pitch_keycenter is not specified, the sampler will often use the value\n        // of lokey as the pitch key center.\n        if (region.midiLow !== undefined) {\n          region.midiPitch = region.midiLow;\n        } else {\n          return \"Missing pitch_keycenter\";\n        }\n      }\n\n      // Set default sequence number\n      if (region.seqLength && region.seqPosition === undefined) {\n        region.seqPosition = 1;\n      }\n\n      // Move amp_release to sample options\n      if (region.ampRelease) {\n        region.sample = { decayTime: region.ampRelease };\n        delete region.ampRelease;\n      }\n      group.regions.push(region);\n    }\n  }\n\n  #closeRegion(region: SampleRegion) {\n    this.popStr(\"sample\", region, \"sampleName\");\n    this.popNum(\"pitch_keycenter\", region, \"midiPitch\");\n\n    this.popNum(\"ampeg_attack\", region, \"ampAttack\");\n    this.popNum(\"ampeg_release\", region, \"ampRelease\");\n    this.popNum(\"bend_down\", region, \"bendDown\");\n    this.popNum(\"bend_up\", region, \"bendUp\");\n    this.popNum(\"group\", region, \"group\");\n    this.popNum(\"hikey\", region, \"midiHigh\");\n    this.popNum(\"hivel\", region, \"velHigh\");\n    this.popNum(\"lokey\", region, \"midiLow\");\n    this.popNum(\"offset\", region, \"offset\");\n    this.popNum(\"lovel\", region, \"velLow\");\n    this.popNum(\"off_by\", region, \"groupOffBy\");\n    this.popNum(\"pitch_keytrack\", region, \"ignore\");\n    this.popNum(\"seq_length\", region, \"seqLength\");\n    this.popNum(\"seq_position\", region, \"seqPosition\");\n    this.popNum(\"tune\", region, \"tune\");\n    this.popNum(\"volume\", region, \"volume\");\n    this.popNumArr(\"amp_velcurve\", region, \"ampVelCurve\");\n\n    // Enable only this while development\n    // const remainingKeys = Object.keys(this.values);\n    // if (remainingKeys.length) {\n    //   console.warn(\"Remaining keys in scope: \", remainingKeys);\n    // }\n    this.values = {};\n    return region;\n  }\n\n  get empty() {\n    return Object.keys(this.values).length === 0;\n  }\n\n  get keys() {\n    return Object.keys(this.values);\n  }\n\n  push(key: string, value: any) {\n    this.values[key] = value;\n  }\n\n  popNum(key: string, dest: Record<string, any>, destKey: DestKey): boolean {\n    if (typeof this.values[key] !== \"number\") return false;\n    dest[destKey] = this.values[key];\n    delete this.values[key];\n    return true;\n  }\n\n  popStr(key: string, dest: Record<string, any>, destKey: DestKey): boolean {\n    if (typeof this.values[key] !== \"string\") return false;\n    dest[destKey] = this.values[key];\n    delete this.values[key];\n    return true;\n  }\n\n  popNumArr(key: string, dest: Record<string, any>, destKey: DestKey): boolean {\n    if (!Array.isArray(this.values[key])) return false;\n    dest[destKey] = this.values[key];\n    delete this.values[key];\n    return true;\n  }\n}\n","import { DefaultPlayerConfig } from \"./player/default-player\";\nimport { AudioBuffers } from \"./player/load-audio\";\nimport { RegionPlayer } from \"./player/region-player\";\nimport {\n  InternalPlayer,\n  RegionGroup,\n  SampleStart,\n  SampleStop,\n} from \"./player/types\";\nimport { SfzInstrumentLoader } from \"./sfz2\";\nimport { HttpStorage, Storage } from \"./storage\";\n\nlet instruments: string[] = [];\n\nconst BASE_URL = \"https://smpldsnds.github.io/sgossner-vcsl/\";\n\nexport async function getVersilianInstruments(): Promise<string[]> {\n  if (instruments.length) return instruments;\n\n  instruments = await fetch(BASE_URL + \"sfz_files.json\").then((res) =>\n    res.json()\n  );\n  return instruments;\n}\n\nfunction getVcslInstrumentSfzUrl(instrument: string) {\n  return BASE_URL + instrument + \".sfz\";\n}\n\nexport function VcslInstrumentLoader(\n  instrument: string,\n  buffers: AudioBuffers,\n  group: RegionGroup\n) {\n  const url = getVcslInstrumentSfzUrl(instrument);\n  const base = instrument.slice(0, instrument.lastIndexOf(\"/\") + 1);\n  const sampleBase = `https://smpldsnds.github.io/sgossner-vcsl/${base}`;\n  return SfzInstrumentLoader(url, {\n    buffers: buffers,\n    group: group,\n    urlFromSampleName: (sampleName, audioExt) => {\n      return sampleBase + \"/\" + sampleName.replace(\".wav\", audioExt);\n    },\n  });\n}\n\nexport type VersilianConfig = {\n  instrument: string;\n  storage: Storage;\n};\nexport type VersilianOptions = Partial<VersilianConfig & DefaultPlayerConfig>;\n\n/**\n * Versilian\n *\n * The Versilian Community Sample Library is an open CC0 general-purpose sample library created by Versilian Studios LLC\n * for the purpose of introducing a set of quality, publicly available samples suitable for use in software and media of all kinds.\n */\nexport class Versilian implements InternalPlayer {\n  private readonly player: RegionPlayer;\n  public readonly load: Promise<this>;\n  private config: VersilianConfig;\n\n  constructor(context: BaseAudioContext, options: VersilianOptions = {}) {\n    this.config = {\n      instrument: options.instrument ?? \"Arco\",\n      storage: options.storage ?? HttpStorage,\n    };\n    this.player = new RegionPlayer(context, options);\n\n    const loader = VcslInstrumentLoader(\n      this.config.instrument,\n      this.player.buffers,\n      this.player.group\n    );\n    this.load = loader(context, this.config.storage).then(() => this);\n  }\n\n  get output() {\n    return this.player.output;\n  }\n\n  get buffers(): AudioBuffers {\n    return this.player.buffers;\n  }\n\n  get context(): BaseAudioContext {\n    return this.player.context;\n  }\n\n  start(sample: SampleStart | string | number) {\n    return this.player.start(sample);\n  }\n\n  stop(sample?: SampleStop | string | number) {\n    return this.player.stop(sample);\n  }\n\n  disconnect(): void {\n    this.player.disconnect();\n  }\n}\n","import { Versilian, VersilianOptions } from \"./versilian\";\n\nexport function getMalletNames() {\n  return Object.keys(NAME_TO_PATH) as MalletName[];\n}\n\nexport class Mallet extends Versilian {\n  constructor(context: AudioContext, options: VersilianOptions) {\n    super(context, {\n      ...options,\n      instrument: NAME_TO_PATH[options.instrument ?? \"\"],\n    });\n  }\n}\n\nconst BASE_URL = \"https://danigb.github.io/samples/vcsl/\";\nconst EXT = \".websfz.json\";\n\ntype MalletName = keyof typeof NAME_TO_PATH;\n\nexport const NAME_TO_PATH: Record<string, string | undefined> = {\n  \"Balafon - Hard Mallet\": \"Idiophones/Struck Idiophones/Balafon - Hard Mallet\",\n  \"Balafon - Keyswitch\": \"Idiophones/Struck Idiophones/Balafon - Keyswitch\",\n  \"Balafon - Soft Mallet\": \"Idiophones/Struck Idiophones/Balafon - Soft Mallet\",\n  \"Balafon - Traditional Mallet\":\n    \"Idiophones/Struck Idiophones/Balafon - Traditional Mallet\",\n\n  \"Tubular Bells 1\": \"Idiophones/Struck Idiophones/Tubular Bells 1\",\n  \"Tubular Bells 2\": \"Idiophones/Struck Idiophones/Tubular Bells 2\",\n\n  \"Vibraphone - Bowed\": \"Idiophones/Struck Idiophones/Vibraphone - Bowed\",\n  \"Vibraphone - Hard Mallets\":\n    \"Idiophones/Struck Idiophones/Vibraphone - Hard Mallets\",\n  \"Vibraphone - Keyswitch\":\n    \"Idiophones/Struck Idiophones/Vibraphone - Keyswitch\",\n  \"Vibraphone - Soft Mallets\":\n    \"Idiophones/Struck Idiophones/Vibraphone - Soft Mallets\",\n\n  \"Xylophone - Hard Mallets\":\n    \"Idiophones/Struck Idiophones/Xylophone - Hard Mallets\",\n  \"Xylophone - Keyswitch\": \"Idiophones/Struck Idiophones/Xylophone - Keyswitch\",\n  \"Xylophone - Medium Mallets\":\n    \"Idiophones/Struck Idiophones/Xylophone - Medium Mallets\",\n  \"Xylophone - Soft Mallets\":\n    \"Idiophones/Struck Idiophones/Xylophone - Soft Mallets\",\n} as const;\n","import { ChannelConfig } from \"./player/channel\";\nimport { DefaultPlayer, DefaultPlayerConfig } from \"./player/default-player\";\nimport {\n  createEmptyRegionGroup,\n  findFirstSampleInRegions,\n  spreadRegions,\n} from \"./player/layers\";\nimport {\n  AudioBuffers,\n  getPreferredAudioExtension,\n  loadAudioBuffer,\n} from \"./player/load-audio\";\nimport { toMidi } from \"./player/midi\";\nimport {\n  InternalPlayer,\n  RegionGroup,\n  SampleOptions,\n  SampleStart,\n  SampleStop,\n} from \"./player/types\";\nimport { HttpStorage, Storage } from \"./storage\";\n\nconst INSTRUMENT_VARIATIONS: Record<string, [string, string]> = {\n  \"300 STRINGS CELLO\": [\"300 STRINGS\", \"CELL\"],\n  \"300 STRINGS VIOLA\": [\"300 STRINGS\", \"VIOL\"],\n};\n\nexport function getMellotronNames() {\n  return [\n    \"300 STRINGS CELLO\",\n    \"300 STRINGS VIOLA\",\n    \"8VOICE CHOIR\",\n    \"BASSA+STRNGS\",\n    \"BOYS CHOIR\",\n    \"CHA CHA FLT\",\n    \"CHM CLARINET\",\n    \"CHMB 3 VLNS\",\n    \"CHMB ALTOSAX\",\n    \"CHMB FEMALE\",\n    \"CHMB MALE VC\",\n    \"CHMB TNR SAX\",\n    \"CHMB TRMBONE\",\n    \"CHMB TRUMPET\",\n    \"CHMBLN CELLO\",\n    \"CHMBLN FLUTE\",\n    \"CHMBLN OBOE\",\n    \"DIXIE+TRMBN\",\n    \"FOXTROT+SAX\",\n    \"HALFSP.BRASS\",\n    \"MIXED STRGS\",\n    \"MKII BRASS\",\n    \"MKII GUITAR\",\n    \"MKII ORGAN\",\n    \"MKII SAX\",\n    \"MKII VIBES\",\n    \"MKII VIOLINS\",\n    \"MOVE BS+STGS\",\n    \"STRGS+BRASS\",\n    \"TROMB+TRMPT\",\n    \"TRON 16VLNS\",\n    \"TRON CELLO\",\n    \"TRON FLUTE\",\n    \"TRON VIOLA\",\n  ];\n}\n\nexport type MellotronConfig = {\n  instrument: string;\n  storage: Storage;\n};\n\nexport type MellotronOptions = Partial<MellotronConfig & DefaultPlayerConfig>;\n\nexport class Mellotron implements InternalPlayer {\n  private readonly config: MellotronConfig;\n  private readonly player: DefaultPlayer;\n  private readonly group: RegionGroup;\n  readonly load: Promise<this>;\n\n  public constructor(\n    public readonly context: BaseAudioContext,\n    options: MellotronOptions\n  ) {\n    this.config = getMellotronConfig(options);\n    this.player = new DefaultPlayer(context, options);\n    this.group = createEmptyRegionGroup(options);\n\n    const loader = loadMellotronInstrument(\n      this.config.instrument,\n      this.player.buffers,\n      this.group\n    );\n    this.load = loader(context, this.config.storage).then(() => this);\n  }\n\n  get buffers() {\n    return this.player.buffers;\n  }\n\n  get output() {\n    return this.player.output;\n  }\n\n  start(sample: SampleStart | string | number) {\n    const found = findFirstSampleInRegions(\n      this.group,\n      typeof sample === \"object\" ? sample : { note: sample }\n    );\n\n    if (!found) return () => undefined;\n\n    return this.player.start(found);\n  }\n  stop(sample?: SampleStop | string | number) {\n    this.player.stop(sample);\n  }\n  disconnect() {\n    this.player.disconnect();\n  }\n}\n\nfunction getMellotronConfig(\n  options: Partial<SampleOptions & ChannelConfig & MellotronConfig>\n): MellotronConfig {\n  return {\n    instrument: options.instrument ?? \"MKII VIOLINS\",\n    storage: options.storage ?? HttpStorage,\n  };\n}\nfunction loadMellotronInstrument(\n  instrument: string,\n  buffers: AudioBuffers,\n  group: RegionGroup\n) {\n  let variation = INSTRUMENT_VARIATIONS[instrument];\n  if (variation) instrument = variation[0];\n\n  return (context: BaseAudioContext, storage: Storage) => {\n    const baseUrl = `https://smpldsnds.github.io/archiveorg-mellotron/${instrument}/`;\n    const audioExt = getPreferredAudioExtension();\n    return fetch(baseUrl + \"files.json\")\n      .then((res) => res.json() as Promise<string[]>)\n      .then((sampleNames) =>\n        Promise.all(\n          sampleNames.map((sampleName) => {\n            if (variation && !sampleName.includes(variation[1])) return;\n\n            const midi = toMidi(sampleName.split(\" \")[0] ?? \"\");\n            if (!midi) return;\n\n            const sampleUrl = baseUrl + sampleName + audioExt;\n            loadAudioBuffer(context, sampleUrl, storage).then((audioBuffer) => {\n              buffers[sampleName] = audioBuffer;\n              const duration = audioBuffer?.duration ?? 0;\n              group.regions.push({\n                sampleName: sampleName,\n                midiPitch: midi,\n                sample: {\n                  loop: true,\n                  loopStart: duration / 10,\n                  loopEnd: duration - duration / 10,\n                },\n              });\n            });\n          })\n        )\n      )\n      .then(() => {\n        spreadRegions(group.regions);\n      });\n  };\n}\n","export const PROCESSOR = `\"use strict\";(()=>{var f=class extends AudioWorkletProcessor{_pDLength;_preDelay;_pDWrite;_lp1;_lp2;_lp3;_excPhase;_taps;_Delays;sampleRate;static get parameterDescriptors(){return[[\"preDelay\",0,0,sampleRate-1,\"k-rate\"],[\"bandwidth\",.9999,0,1,\"k-rate\"],[\"inputDiffusion1\",.75,0,1,\"k-rate\"],[\"inputDiffusion2\",.625,0,1,\"k-rate\"],[\"decay\",.5,0,1,\"k-rate\"],[\"decayDiffusion1\",.7,0,.999999,\"k-rate\"],[\"decayDiffusion2\",.5,0,.999999,\"k-rate\"],[\"damping\",.005,0,1,\"k-rate\"],[\"excursionRate\",.5,0,2,\"k-rate\"],[\"excursionDepth\",.7,0,2,\"k-rate\"],[\"wet\",1,0,1,\"k-rate\"],[\"dry\",0,0,1,\"k-rate\"]].map(e=>new Object({name:e[0],defaultValue:e[1],minValue:e[2],maxValue:e[3],automationRate:e[4]}))}constructor(e){super(),this.sampleRate=sampleRate,this._Delays=[],this._pDLength=sampleRate+(128-sampleRate%128),this._preDelay=new Float32Array(this._pDLength),this._pDWrite=0,this._lp1=0,this._lp2=0,this._lp3=0,this._excPhase=0,[.004771345,.003595309,.012734787,.009307483,.022579886,.149625349,.060481839,.1249958,.030509727,.141695508,.089244313,.106280031].forEach(a=>this.makeDelay(a,sampleRate)),this._taps=Int16Array.from([.008937872,.099929438,.064278754,.067067639,.066866033,.006283391,.035818689,.011861161,.121870905,.041262054,.08981553,.070931756,.011256342,.004065724],a=>Math.round(a*sampleRate))}makeDelay(e,a){let t=Math.round(e*a),s=2**Math.ceil(Math.log2(t));this._Delays.push([new Float32Array(s),t-1,0,s-1])}writeDelay(e,a){return this._Delays[e][0][this._Delays[e][1]]=a}readDelay(e){return this._Delays[e][0][this._Delays[e][2]]}readDelayAt(e,a){let t=this._Delays[e];return t[0][t[2]+a&t[3]]}readDelayCAt(e,a){let t=this._Delays[e],s=a-~~a,d=~~a+t[2]-1,r=t[3],D=t[0][d++&r],l=t[0][d++&r],h=t[0][d++&r],y=t[0][d&r],u=(3*(l-h)-D+y)/2,m=2*h+D-(5*l+y)/2,c=(h-D)/2;return((u*s+m)*s+c)*s+l}process(e,a,t){let s=~~t.preDelay[0],d=t.bandwidth[0],r=t.inputDiffusion1[0],D=t.inputDiffusion2[0],l=t.decay[0],h=t.decayDiffusion1[0],y=t.decayDiffusion2[0],u=1-t.damping[0],m=t.excursionRate[0]/sampleRate,c=t.excursionDepth[0]*sampleRate/1e3,w=t.wet[0]*.6,A=t.dry[0];if(e[0].length==2)for(let i=127;i>=0;i--)this._preDelay[this._pDWrite+i]=(e[0][0][i]+e[0][1][i])*.5,a[0][0][i]=e[0][0][i]*A,a[0][1][i]=e[0][1][i]*A;else if(e[0].length>0){this._preDelay.set(e[0][0],this._pDWrite);for(let i=127;i>=0;i--)a[0][0][i]=a[0][1][i]=e[0][0][i]*A}else this._preDelay.set(new Float32Array(128),this._pDWrite);let o=0;for(;o<128;){let i=0,b=0;this._lp1+=d*(this._preDelay[(this._pDLength+this._pDWrite-s+o)%this._pDLength]-this._lp1);let p=this.writeDelay(0,this._lp1-r*this.readDelay(0));p=this.writeDelay(1,r*(p-this.readDelay(1))+this.readDelay(0)),p=this.writeDelay(2,r*p+this.readDelay(1)-D*this.readDelay(2)),p=this.writeDelay(3,D*(p-this.readDelay(3))+this.readDelay(2));let k=D*p+this.readDelay(3),g=c*(1+Math.cos(this._excPhase*6.28)),x=c*(1+Math.sin(this._excPhase*6.2847)),_=this.writeDelay(4,k+l*this.readDelay(11)+h*this.readDelayCAt(4,g));this.writeDelay(5,this.readDelayCAt(4,g)-h*_),this._lp2+=u*(this.readDelay(5)-this._lp2),_=this.writeDelay(6,l*this._lp2-y*this.readDelay(6)),this.writeDelay(7,this.readDelay(6)+y*_),_=this.writeDelay(8,k+l*this.readDelay(7)+h*this.readDelayCAt(8,x)),this.writeDelay(9,this.readDelayCAt(8,x)-h*_),this._lp3+=u*(this.readDelay(9)-this._lp3),_=this.writeDelay(10,l*this._lp3-y*this.readDelay(10)),this.writeDelay(11,this.readDelay(10)+y*_),i=this.readDelayAt(9,this._taps[0])+this.readDelayAt(9,this._taps[1])-this.readDelayAt(10,this._taps[2])+this.readDelayAt(11,this._taps[3])-this.readDelayAt(5,this._taps[4])-this.readDelayAt(6,this._taps[5])-this.readDelayAt(7,this._taps[6]),b=this.readDelayAt(5,this._taps[7])+this.readDelayAt(5,this._taps[8])-this.readDelayAt(6,this._taps[9])+this.readDelayAt(7,this._taps[10])-this.readDelayAt(9,this._taps[11])-this.readDelayAt(10,this._taps[12])-this.readDelayAt(11,this._taps[13]),a[0][0][o]+=i*w,a[0][1][o]+=b*w,this._excPhase+=m,o++;for(let R=0,n=this._Delays[0];R<this._Delays.length;n=this._Delays[++R])n[1]=n[1]+1&n[3],n[2]=n[2]+1&n[3]}return this._pDWrite=(this._pDWrite+128)%this._pDLength,!0}};registerProcessor(\"DattorroReverb\",f);})();`;\n","import { PROCESSOR } from \"./processor.min\";\n\nconst PARAMS = [\n  \"preDelay\",\n  \"bandwidth\",\n  \"inputDiffusion1\",\n  \"inputDiffusion2\",\n  \"decay\",\n  \"decayDiffusion1\",\n  \"decayDiffusion2\",\n  \"damping\",\n  \"excursionRate\",\n  \"excursionDepth\",\n  \"wet\",\n  \"dry\",\n] as const;\n\nconst init = new WeakMap<AudioContext, Promise<void>>();\n\nasync function createDattorroReverbEffect(context: AudioContext) {\n  let ready = init.get(context);\n  if (!ready) {\n    const blob = new Blob([PROCESSOR], { type: \"application/javascript\" });\n    const url = URL.createObjectURL(blob);\n    ready = context.audioWorklet.addModule(url);\n    init.set(context, ready);\n  }\n  await ready;\n\n  const reverb = new AudioWorkletNode(context, \"DattorroReverb\", {\n    outputChannelCount: [2],\n  });\n  return reverb;\n}\n\nexport class Reverb {\n  #effect: AudioWorkletNode | undefined;\n  #ready: Promise<this>;\n  public readonly input: AudioNode;\n  #output: AudioNode;\n\n  constructor(context: AudioContext) {\n    this.input = context.createGain();\n    this.#output = context.destination;\n    this.#ready = createDattorroReverbEffect(context).then((reverb) => {\n      this.input.connect(reverb);\n      reverb.connect(this.#output);\n      this.#effect = reverb;\n      return this;\n    });\n  }\n\n  get paramNames() {\n    return PARAMS;\n  }\n\n  getParam(name: (typeof PARAMS)[number]): AudioParam | undefined {\n    return this.#effect?.parameters.get(\"preDelay\");\n  }\n\n  get isReady(): boolean {\n    return this.#effect !== undefined;\n  }\n\n  ready(): Promise<this> {\n    return this.#ready;\n  }\n\n  connect(output: AudioNode) {\n    if (this.#effect) {\n      this.#effect.disconnect(this.#output);\n      this.#effect.connect(output);\n    }\n    this.#output = output;\n  }\n}\n","import { DefaultPlayer } from \"./player/default-player\";\nimport {\n  AudioBuffers,\n  AudioBuffersLoader,\n  loadAudioBuffer,\n} from \"./player/load-audio\";\nimport { SampleStart, SampleStop } from \"./player/types\";\nimport { midiVelToGain } from \"./player/volume\";\nimport { HttpStorage, Storage } from \"./storage\";\n\nexport type SamplerConfig = {\n  storage?: Storage;\n  detune: number;\n  volume: number;\n  velocity: number;\n  decayTime?: number;\n  lpfCutoffHz?: number;\n  destination: AudioNode;\n\n  buffers: Record<string | number, string | AudioBuffers> | AudioBuffersLoader;\n  volumeToGain: (volume: number) => number;\n};\n\n/**\n * A Sampler instrument\n *\n * @private\n */\nexport class Sampler {\n  #options: SamplerConfig;\n  private readonly player: DefaultPlayer;\n  public readonly load: Promise<this>;\n\n  public constructor(\n    public readonly context: AudioContext,\n    options: Partial<SamplerConfig> = {}\n  ) {\n    this.#options = {\n      destination: options.destination ?? context.destination,\n      detune: 0,\n      volume: options.volume ?? 100,\n      velocity: options.velocity ?? 100,\n      buffers: options.buffers ?? {},\n      volumeToGain: options.volumeToGain ?? midiVelToGain,\n    };\n    this.player = new DefaultPlayer(context, this.#options);\n    const storage = options.storage ?? HttpStorage;\n    const loader =\n      typeof this.#options.buffers === \"function\"\n        ? this.#options.buffers\n        : createAudioBuffersLoader(this.#options.buffers, storage);\n    this.load = loader(context, this.player.buffers).then(() => this);\n  }\n\n  async loaded() {\n    console.warn(\"deprecated: use load instead\");\n    return this.load;\n  }\n\n  get output() {\n    return this.player.output;\n  }\n\n  start(sample: SampleStart | string | number) {\n    return this.player.start(\n      typeof sample === \"object\" ? sample : { note: sample }\n    );\n  }\n\n  stop(sample?: SampleStop | string | number) {\n    return this.player.stop(\n      typeof sample === \"object\"\n        ? sample\n        : sample === undefined\n        ? undefined\n        : { stopId: sample }\n    );\n  }\n\n  disconnect() {\n    return this.player.disconnect();\n  }\n}\n\nfunction createAudioBuffersLoader(\n  source: Record<string | number, string | AudioBuffers>,\n  storage: Storage\n): AudioBuffersLoader {\n  return async (context, buffers) => {\n    await Promise.all([\n      Object.keys(source).map(async (key) => {\n        const value = source[key];\n        if (value instanceof AudioBuffer) {\n          buffers[key] = value;\n        } else if (typeof value === \"string\") {\n          const buffer = await loadAudioBuffer(context, value, storage);\n          if (buffer) buffers[key] = buffer;\n        }\n      }),\n    ]);\n  };\n}\n","import { DefaultPlayer, DefaultPlayerConfig } from \"./player/default-player\";\nimport { createEmptyRegionGroup, findSamplesInRegions } from \"./player/layers\";\nimport { AudioBuffers } from \"./player/load-audio\";\nimport { toMidi } from \"./player/midi\";\nimport {\n  InternalPlayer,\n  RegionGroup,\n  SampleStart,\n  SampleStop,\n} from \"./player/types\";\nimport { SfzInstrumentLoader } from \"./sfz2\";\nimport { HttpStorage, Storage } from \"./storage\";\n\nexport function getSmolkenNames() {\n  return [\"Pizzicato\", \"Arco\", \"Switched\"];\n}\n\nfunction getSmolkenUrl(instrument: string) {\n  const FILES: Record<string, string> = {\n    Arco: \"arco\",\n    Pizzicato: \"pizz\",\n    Switched: \"switched\",\n  };\n  return `https://smpldsnds.github.io/sfzinstruments-dsmolken-double-bass/d_smolken_rubner_bass_${FILES[instrument]}.sfz`;\n}\n\nexport type SmolkenConfig = {\n  instrument: string;\n  storage: Storage;\n};\nexport type SmolkenOptions = Partial<SmolkenConfig & DefaultPlayerConfig>;\n\nexport class Smolken implements InternalPlayer {\n  private readonly player: DefaultPlayer;\n  private readonly group: RegionGroup;\n  public readonly load: Promise<this>;\n  private config: SmolkenConfig;\n  private seqNum = 0;\n\n  constructor(context: BaseAudioContext, options: SmolkenOptions = {}) {\n    this.config = {\n      instrument: options.instrument ?? \"Arco\",\n      storage: options.storage ?? HttpStorage,\n    };\n    this.player = new DefaultPlayer(context, options);\n    this.group = createEmptyRegionGroup();\n    const url = getSmolkenUrl(this.config.instrument);\n\n    const loader = SfzInstrumentLoader(url, {\n      buffers: this.player.buffers,\n      group: this.group,\n      urlFromSampleName: (sampleName, audioExt) => {\n        const samplePath = sampleName\n          .replace(\"\\\\\", \"/\")\n          .replace(\".wav\", audioExt);\n        return `https://smpldsnds.github.io/sfzinstruments-dsmolken-double-bass/${samplePath}`;\n      },\n    });\n    this.load = loader(context, this.config.storage).then(() => this);\n  }\n\n  get output() {\n    return this.player.output;\n  }\n\n  get buffers(): AudioBuffers {\n    return this.player.buffers;\n  }\n\n  get context(): BaseAudioContext {\n    return this.player.context;\n  }\n\n  start(sample: SampleStart | string | number) {\n    const found = findSamplesInRegions(\n      this.group,\n      typeof sample === \"object\" ? sample : { note: sample },\n      this.seqNum\n    );\n    this.seqNum++;\n    const stopAll = found.map((sample) => this.player.start(sample));\n    return (time?: number) => stopAll.forEach((stop) => stop(time));\n  }\n\n  stop(sample?: SampleStop | string | number) {\n    if (sample == undefined) {\n      this.player.stop();\n      return;\n    }\n\n    const toStop = typeof sample === \"object\" ? sample : { stopId: sample };\n    const midi = toMidi(toStop.stopId);\n    if (!midi) return;\n    toStop.stopId = midi;\n    this.player.stop(toStop);\n  }\n\n  disconnect(): void {\n    this.player.disconnect();\n  }\n}\n","import { spreadRegions } from \"../player/layers\";\nimport { AudioBuffers, findFirstSupportedFormat } from \"../player/load-audio\";\nimport { toMidi } from \"../player/midi\";\nimport { RegionGroup } from \"../player/types\";\nimport { Storage } from \"../storage\";\n\nexport function gleitzKitUrl(name: string, kit: string) {\n  const format = findFirstSupportedFormat([\"ogg\", \"mp3\"]) ?? \"mp3\";\n  return `https://gleitz.github.io/midi-js-soundfonts/${kit}/${name}-${format}.js`;\n}\n\nexport function soundfontInstrumentLoader(\n  url: string,\n  buffers: AudioBuffers,\n  group: RegionGroup\n) {\n  return async (context: BaseAudioContext, storage: Storage) => {\n    const sourceFile = await (await storage.fetch(url)).text();\n    const json = midiJsToJson(sourceFile);\n\n    const noteNames = Object.keys(json);\n    await Promise.all(\n      noteNames.map(async (noteName) => {\n        const midi = toMidi(noteName);\n        if (!midi) return;\n        const audioData = base64ToArrayBuffer(\n          removeBase64Prefix(json[noteName])\n        );\n        const buffer = await context.decodeAudioData(audioData);\n        buffers[noteName] = buffer;\n        group.regions.push({\n          sampleName: noteName,\n          midiPitch: midi,\n        });\n      })\n    );\n    spreadRegions(group.regions);\n  };\n}\n\n// convert a MIDI.js javascript soundfont file to json\nfunction midiJsToJson(source: string) {\n  const header = source.indexOf(\"MIDI.Soundfont.\");\n  if (header < 0) throw Error(\"Invalid MIDI.js Soundfont format\");\n  const start = source.indexOf(\"=\", header) + 2;\n  const end = source.lastIndexOf(\",\");\n  return JSON.parse(source.slice(start, end) + \"}\");\n}\n\nfunction removeBase64Prefix(audioBase64: string) {\n  return audioBase64.slice(audioBase64.indexOf(\",\") + 1);\n}\n\nfunction base64ToArrayBuffer(base64: string) {\n  const decoded = window.atob(base64);\n  const len = decoded.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = decoded.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\nexport const SOUNDFONT_KITS = [\"MusyngKite\", \"FluidR3_GM\"];\n\nexport const SOUNDFONT_INSTRUMENTS = [\n  \"accordion\",\n  \"acoustic_bass\",\n  \"acoustic_grand_piano\",\n  \"acoustic_guitar_nylon\",\n  \"acoustic_guitar_steel\",\n  \"agogo\",\n  \"alto_sax\",\n  \"applause\",\n  \"bagpipe\",\n  \"banjo\",\n  \"baritone_sax\",\n  \"bassoon\",\n  \"bird_tweet\",\n  \"blown_bottle\",\n  \"brass_section\",\n  \"breath_noise\",\n  \"bright_acoustic_piano\",\n  \"celesta\",\n  \"cello\",\n  \"choir_aahs\",\n  \"church_organ\",\n  \"clarinet\",\n  \"clavinet\",\n  \"contrabass\",\n  \"distortion_guitar\",\n  \"drawbar_organ\",\n  \"dulcimer\",\n  \"electric_bass_finger\",\n  \"electric_bass_pick\",\n  \"electric_grand_piano\",\n  \"electric_guitar_clean\",\n  \"electric_guitar_jazz\",\n  \"electric_guitar_muted\",\n  \"electric_piano_1\",\n  \"electric_piano_2\",\n  \"english_horn\",\n  \"fiddle\",\n  \"flute\",\n  \"french_horn\",\n  \"fretless_bass\",\n  \"fx_1_rain\",\n  \"fx_2_soundtrack\",\n  \"fx_3_crystal\",\n  \"fx_4_atmosphere\",\n  \"fx_5_brightness\",\n  \"fx_6_goblins\",\n  \"fx_7_echoes\",\n  \"fx_8_scifi\",\n  \"glockenspiel\",\n  \"guitar_fret_noise\",\n  \"guitar_harmonics\",\n  \"gunshot\",\n  \"harmonica\",\n  \"harpsichord\",\n  \"helicopter\",\n  \"honkytonk_piano\",\n  \"kalimba\",\n  \"koto\",\n  \"lead_1_square\",\n  \"lead_2_sawtooth\",\n  \"lead_3_calliope\",\n  \"lead_4_chiff\",\n  \"lead_5_charang\",\n  \"lead_6_voice\",\n  \"lead_7_fifths\",\n  \"lead_8_bass__lead\",\n  \"marimba\",\n  \"melodic_tom\",\n  \"music_box\",\n  \"muted_trumpet\",\n  \"oboe\",\n  \"ocarina\",\n  \"orchestra_hit\",\n  \"orchestral_harp\",\n  \"overdriven_guitar\",\n  \"pad_1_new_age\",\n  \"pad_2_warm\",\n  \"pad_3_polysynth\",\n  \"pad_4_choir\",\n  \"pad_5_bowed\",\n  \"pad_6_metallic\",\n  \"pad_7_halo\",\n  \"pad_8_sweep\",\n  \"pan_flute\",\n  \"percussive_organ\",\n  \"piccolo\",\n  \"pizzicato_strings\",\n  \"recorder\",\n  \"reed_organ\",\n  \"reverse_cymbal\",\n  \"rock_organ\",\n  \"seashore\",\n  \"shakuhachi\",\n  \"shamisen\",\n  \"shanai\",\n  \"sitar\",\n  \"slap_bass_1\",\n  \"slap_bass_2\",\n  \"soprano_sax\",\n  \"steel_drums\",\n  \"string_ensemble_1\",\n  \"string_ensemble_2\",\n  \"synth_bass_1\",\n  \"synth_bass_2\",\n  \"synth_brass_1\",\n  \"synth_brass_2\",\n  \"synth_choir\",\n  \"synth_drum\",\n  \"synth_strings_1\",\n  \"synth_strings_2\",\n  \"taiko_drum\",\n  \"tango_accordion\",\n  \"telephone_ring\",\n  \"tenor_sax\",\n  \"timpani\",\n  \"tinkle_bell\",\n  \"tremolo_strings\",\n  \"trombone\",\n  \"trumpet\",\n  \"tuba\",\n  \"tubular_bells\",\n  \"vibraphone\",\n  \"viola\",\n  \"violin\",\n  \"voice_oohs\",\n  \"whistle\",\n  \"woodblock\",\n  \"xylophone\",\n];\n","import { toMidi } from \"../player/midi\";\n\nexport type LoopData = Record<number, [number, number]>;\n\nexport function getGoldstSoundfontLoopsUrl(instrument: string, kit: string) {\n  if (instrument.startsWith(\"http\")) return undefined;\n  return `https://goldst.dev/midi-js-soundfonts/${kit}/${instrument}-loop.json`;\n}\n\n/**\n *\n * @see https://github.com/goldst/midi-js-soundfonts\n * @see https://github.com/danigb/smplr/issues/23\n */\nexport async function fetchSoundfontLoopData(\n  url?: string\n): Promise<LoopData | undefined> {\n  if (!url) return undefined;\n  try {\n    const req = await fetch(url);\n    if (req.status !== 200) return;\n\n    const raw = await req.json();\n    const loopData: LoopData = {};\n    const sampleRate = 41000; // this is sample rate from the repository samples\n    Object.keys(raw).forEach((key) => {\n      const midi = toMidi(key);\n      if (midi) {\n        const offsets = raw[key];\n        loopData[midi] = [offsets[0] / sampleRate, offsets[1] / sampleRate];\n      }\n    });\n    return loopData;\n  } catch (err) {\n    return undefined;\n  }\n}\n","import { DefaultPlayer, DefaultPlayerConfig } from \"../player/default-player\";\nimport {\n  createEmptyRegionGroup,\n  findFirstSampleInRegions,\n} from \"../player/layers\";\nimport { AudioBuffers } from \"../player/load-audio\";\nimport { RegionGroup, SampleStart, SampleStop } from \"../player/types\";\nimport { HttpStorage, Storage } from \"../storage\";\nimport {\n  SOUNDFONT_INSTRUMENTS,\n  SOUNDFONT_KITS,\n  gleitzKitUrl,\n  soundfontInstrumentLoader,\n} from \"./soundfont-instrument\";\nimport {\n  fetchSoundfontLoopData,\n  getGoldstSoundfontLoopsUrl,\n} from \"./soundfont-loops\";\n\nexport function getSoundfontKits() {\n  return SOUNDFONT_KITS;\n}\n\nexport function getSoundfontNames() {\n  return SOUNDFONT_INSTRUMENTS;\n}\n\ntype SoundfontConfig = {\n  kit: \"FluidR3_GM\" | \"MusyngKite\" | string;\n  instrument?: string;\n  instrumentUrl: string;\n  storage: Storage;\n  extraGain: number;\n  loadLoopData: boolean;\n  loopDataUrl?: string;\n};\n\nexport type SoundfontOptions = Partial<SoundfontConfig & DefaultPlayerConfig>;\n\nexport class Soundfont {\n  public readonly config: Readonly<SoundfontConfig>;\n  private readonly player: DefaultPlayer;\n  public readonly load: Promise<this>;\n  public readonly group: RegionGroup;\n  #hasLoops: boolean;\n\n  constructor(\n    public readonly context: AudioContext,\n    options: SoundfontOptions\n  ) {\n    this.config = getSoundfontConfig(options);\n    this.player = new DefaultPlayer(context, options);\n    this.group = createEmptyRegionGroup();\n\n    this.#hasLoops = false;\n    const loader = soundfontLoader(\n      this.config.instrumentUrl,\n      this.config.loopDataUrl,\n      this.player.buffers,\n      this.group\n    );\n    this.load = loader(context, this.config.storage).then((hasLoops) => {\n      this.#hasLoops = hasLoops;\n      return this;\n    });\n\n    const gain = context.createGain();\n    gain.gain.value = this.config.extraGain;\n    this.player.output.addInsert(gain);\n  }\n\n  get output() {\n    return this.player.output;\n  }\n\n  get hasLoops() {\n    return this.#hasLoops;\n  }\n\n  async loaded() {\n    console.warn(\"deprecated: use load instead\");\n    return this.load;\n  }\n\n  public disconnect() {\n    this.player.disconnect();\n  }\n\n  start(sample: SampleStart | string | number) {\n    const found = findFirstSampleInRegions(\n      this.group,\n      typeof sample === \"object\" ? sample : { note: sample }\n    );\n    if (!found) return () => undefined;\n\n    return this.player.start(found);\n  }\n\n  stop(sample?: SampleStop | string | number) {\n    return this.player.stop(sample);\n  }\n}\n\nfunction soundfontLoader(\n  url: string,\n  loopsUrl: string | undefined,\n  buffers: AudioBuffers,\n  group: RegionGroup\n) {\n  const loadInstrument = soundfontInstrumentLoader(url, buffers, group);\n  return async (context: BaseAudioContext, storage: Storage) => {\n    const [_, loops] = await Promise.all([\n      loadInstrument(context, storage),\n      fetchSoundfontLoopData(loopsUrl),\n    ]);\n\n    if (loops) {\n      group.regions.forEach((region) => {\n        const loop = loops[region.midiPitch];\n        if (loop) {\n          region.sample ??= {};\n          region.sample.loop = true;\n          region.sample.loopStart = loop[0];\n          region.sample.loopEnd = loop[1];\n        }\n      });\n    }\n    return !!loops;\n  };\n}\n\nfunction getSoundfontConfig(options: SoundfontOptions): SoundfontConfig {\n  if (!options.instrument && !options.instrumentUrl) {\n    throw Error(\"Soundfont: instrument or instrumentUrl is required\");\n  }\n  const config = {\n    kit: \"MusyngKite\",\n    instrument: options.instrument,\n    storage: options.storage ?? HttpStorage,\n    // This is to compensate the low volume of the original samples\n    extraGain: options.extraGain ?? 5,\n    loadLoopData: options.loadLoopData ?? false,\n    loopDataUrl: options.loopDataUrl,\n    instrumentUrl: options.instrumentUrl ?? \"\",\n  };\n  if (config.instrument && config.instrument.startsWith(\"http\")) {\n    console.warn(\n      \"Use 'instrumentUrl' instead of 'instrument' to load from a URL\"\n    );\n    config.instrumentUrl = config.instrument;\n    config.instrument = undefined;\n  }\n  if (config.instrument && !config.instrumentUrl) {\n    config.instrumentUrl = gleitzKitUrl(config.instrument, config.kit);\n  }\n\n  if (config.loadLoopData && config.instrument && !config.loopDataUrl) {\n    config.loopDataUrl = getGoldstSoundfontLoopsUrl(\n      config.instrument,\n      config.kit\n    );\n  }\n\n  return config;\n}\n","import { DefaultPlayer, DefaultPlayerConfig } from \"./player/default-player\";\nimport {\n  AudioBuffers,\n  AudioBuffersLoader,\n  findFirstSupportedFormat,\n  loadAudioBuffer,\n} from \"./player/load-audio\";\nimport { toMidi } from \"./player/midi\";\nimport { SampleStart, SampleStop } from \"./player/types\";\nimport { HttpStorage, Storage } from \"./storage\";\n\n/**\n * Splendid Grand Piano options\n */\nexport type SplendidGrandPianoConfig = {\n  baseUrl: string;\n  storage: Storage;\n  detune: number;\n  velocity: number;\n  decayTime: number;\n  notesToLoad?: {\n    notes: number[],\n    velocityRange: [number, number]\n  }\n} & Partial<DefaultPlayerConfig>;\n\nconst BASE_URL = \"https://danigb.github.io/samples/splendid-grand-piano\";\n\nexport class SplendidGrandPiano {\n  options: Readonly<SplendidGrandPianoConfig>;\n  private readonly player: DefaultPlayer;\n  public readonly load: Promise<this>;\n\n  constructor(\n    public readonly context: AudioContext,\n    options?: Partial<SplendidGrandPianoConfig>\n  ) {\n    this.options = Object.assign(\n      {\n        baseUrl: BASE_URL,\n        storage: HttpStorage,\n        detune: 0,\n        volume: 100,\n        velocity: 100,\n        decayTime: 0.5,\n      },\n      options\n    );\n    this.player = new DefaultPlayer(context, this.options);\n    const loader = splendidGrandPianoLoader(\n      this.options.baseUrl,\n      this.options.storage,\n      this.options.notesToLoad\n    );\n    this.load = loader(context, this.player.buffers).then(() => this);\n  }\n\n  get output() {\n    return this.player.output;\n  }\n\n  get buffers() {\n    return this.player.buffers;\n  }\n\n  async loaded() {\n    console.warn(\"deprecated: use load instead\");\n    return this.load;\n  }\n\n  start(sampleOrNote: SampleStart | number | string) {\n    const sample =\n      typeof sampleOrNote === \"object\"\n        ? { ...sampleOrNote }\n        : { note: sampleOrNote };\n\n    const found = this.#sampleToMidi(sample);\n    if (!found) return () => undefined;\n    sample.note = found[0];\n    sample.stopId = sample.stopId ?? found[1];\n    sample.detune = found[2] + (sample.detune ?? this.options.detune);\n    return this.player.start(sample);\n  }\n\n  #sampleToMidi(sample: SampleStart): [string, number, number] | undefined {\n    const midi = toMidi(sample.note);\n    if (!midi) return;\n\n    const vel = sample.velocity ?? this.options.velocity;\n    const layerIdx = LAYERS.findIndex(\n      (layer) => vel >= layer.vel_range[0] && vel <= layer.vel_range[1]\n    );\n    const layer = LAYERS[layerIdx];\n    if (!layer) return;\n\n    return findNearestMidiInLayer(layer.name, midi, this.player.buffers);\n  }\n\n  stop(sample?: SampleStop | number | string) {\n    return this.player.stop(sample);\n  }\n}\n\nfunction findNearestMidiInLayer(\n  prefix: string,\n  midi: number,\n  buffers: AudioBuffers\n): [string, number, number] {\n  let i = 0;\n  while (buffers[prefix + (midi + i)] === undefined && i < 128) {\n    if (i > 0) i = -i;\n    else i = -i + 1;\n  }\n\n  return i === 127\n    ? [prefix + midi, midi, 0]\n    : [prefix + (midi + i), midi, -i * 100];\n}\n\nfunction splendidGrandPianoLoader(\n  baseUrl: string,\n  storage: Storage,\n  notesToLoad?: {\n    notes: number[],\n    velocityRange: [number, number]\n  }\n): AudioBuffersLoader {\n  const format = findFirstSupportedFormat([\"ogg\", \"m4a\"]) ?? \"ogg\";\n  let layers = notesToLoad \n    ? LAYERS.filter(\n        (layer) =>\n          layer.vel_range[0] <= notesToLoad.velocityRange[1] &&\n          layer.vel_range[1] >= notesToLoad.velocityRange[0]\n      )\n    : LAYERS;\n\n  return async (context, buffers) => {\n    for (const layer of layers) {\n      const samples = notesToLoad \n        ? layer.samples.filter(sample => notesToLoad.notes.includes(sample[0] as number))\n        : layer.samples;\n\n      await Promise.all(\n        samples.map(async ([midi, name]) => {\n          const url = `${baseUrl}/${name}.${format}`;\n          const buffer = await loadAudioBuffer(context, url, storage);\n          if (buffer) buffers[layer.name + midi] = buffer;\n        })\n      );\n    }\n  };\n}\n\nexport const LAYERS = [\n  {\n    name: \"PPP\",\n    vel_range: [1, 40],\n    cutoff: 1000,\n    samples: [\n      [23, \"PP-B-1\"],\n      [27, \"PP-D#0\"],\n      [29, \"PP-F0\"],\n      [31, \"PP-G0\"],\n      [33, \"PP-A0\"],\n      [35, \"PP-B0\"],\n      [37, \"PP-C#1\"],\n      [38, \"PP-D1\"],\n      [40, \"PP-E1\"],\n      [41, \"PP-F1\"],\n      [43, \"PP-G1\"],\n      [45, \"PP-A1\"],\n      [47, \"PP-B1\"],\n      [48, \"PP-C2\"],\n      [50, \"PP-D2\"],\n      [52, \"PP-E2\"],\n      [53, \"PP-F2\"],\n      [55, \"PP-G2\"],\n      [56, \"PP-G#2\"],\n      [57, \"PP-A2\"],\n      [58, \"PP-A#2\"],\n      [59, \"PP-B2\"],\n      [60, \"PP-C3\"],\n      [62, \"PP-D3\"],\n      [64, \"PP-E3\"],\n      [65, \"PP-F3\"],\n      [67, \"PP-G3\"],\n      [69, \"PP-A3\"],\n      [71, \"PP-B3\"],\n      [72, \"PP-C4\"],\n      [74, \"PP-D4\"],\n      [76, \"PP-E4\"],\n      [77, \"PP-F4\"],\n      [79, \"PP-G4\"],\n      [80, \"PP-G#4\"],\n      [81, \"PP-A4\"],\n      [82, \"PP-A#4\"],\n      [83, \"PP-B4\"],\n      [85, \"PP-C#5\"],\n      [86, \"PP-D5\"],\n      [87, \"PP-D#5\"],\n      [89, \"PP-F5\"],\n      [90, \"PP-F#5\"],\n      [91, \"PP-G5\"],\n      [92, \"PP-G#5\"],\n      [93, \"PP-A5\"],\n      [94, \"PP-A#5\"],\n      [95, \"PP-B5\"],\n      [96, \"PP-C6\"],\n      [97, \"PP-C#6\"],\n      [98, \"PP-D6\"],\n      [99, \"PP-D#6\"],\n      [100, \"PP-E6\"],\n      [101, \"PP-F6\"],\n      [102, \"PP-F#6\"],\n      [103, \"PP-G6\"],\n      [104, \"PP-G#6\"],\n      [105, \"PP-A6\"],\n      [106, \"PP-A#6\"],\n      [107, \"PP-B6\"],\n      [108, \"PP-C7\"],\n    ],\n  },\n  {\n    name: \"PP\",\n    vel_range: [41, 67],\n    samples: [\n      [23, \"PP-B-1\"],\n      [27, \"PP-D#0\"],\n      [29, \"PP-F0\"],\n      [31, \"PP-G0\"],\n      [33, \"PP-A0\"],\n      [35, \"PP-B0\"],\n      [37, \"PP-C#1\"],\n      [38, \"PP-D1\"],\n      [40, \"PP-E1\"],\n      [41, \"PP-F1\"],\n      [43, \"PP-G1\"],\n      [45, \"PP-A1\"],\n      [47, \"PP-B1\"],\n      [48, \"PP-C2\"],\n      [50, \"PP-D2\"],\n      [52, \"PP-E2\"],\n      [53, \"PP-F2\"],\n      [55, \"PP-G2\"],\n      [56, \"PP-G#2\"],\n      [57, \"PP-A2\"],\n      [58, \"PP-A#2\"],\n      [59, \"PP-B2\"],\n      [60, \"PP-C3\"],\n      [62, \"PP-D3\"],\n      [64, \"PP-E3\"],\n      [65, \"PP-F3\"],\n      [67, \"PP-G3\"],\n      [69, \"PP-A3\"],\n      [71, \"PP-B3\"],\n      [72, \"PP-C4\"],\n      [74, \"PP-D4\"],\n      [76, \"PP-E4\"],\n      [77, \"PP-F4\"],\n      [79, \"PP-G4\"],\n      [80, \"PP-G#4\"],\n      [81, \"PP-A4\"],\n      [82, \"PP-A#4\"],\n      [83, \"PP-B4\"],\n      [85, \"PP-C#5\"],\n      [86, \"PP-D5\"],\n      [87, \"PP-D#5\"],\n      [89, \"PP-F5\"],\n      [90, \"PP-F#5\"],\n      [91, \"PP-G5\"],\n      [92, \"PP-G#5\"],\n      [93, \"PP-A5\"],\n      [94, \"PP-A#5\"],\n      [95, \"PP-B5\"],\n      [96, \"PP-C6\"],\n      [97, \"PP-C#6\"],\n      [98, \"PP-D6\"],\n      [99, \"PP-D#6\"],\n      [100, \"PP-E6\"],\n      [101, \"PP-F6\"],\n      [102, \"PP-F#6\"],\n      [103, \"PP-G6\"],\n      [104, \"PP-G#6\"],\n      [105, \"PP-A6\"],\n      [106, \"PP-A#6\"],\n      [107, \"PP-B6\"],\n      [108, \"PP-C7\"],\n    ],\n  },\n  {\n    name: \"MP\",\n    vel_range: [68, 84],\n    samples: [\n      [23, \"Mp-B-1\"],\n      [27, \"Mp-D#0\"],\n      [29, \"Mp-F0\"],\n      [31, \"Mp-G0\"],\n      [33, \"Mp-A0\"],\n      [35, \"Mp-B0\"],\n      [37, \"Mp-C#1\"],\n      [38, \"Mp-D1\"],\n      [40, \"Mp-E1\"],\n      [41, \"Mp-F1\"],\n      [43, \"Mp-G1\"],\n      [45, \"Mp-A1\"],\n      [47, \"Mp-B1\"],\n      [48, \"Mp-C2\"],\n      [50, \"Mp-D2\"],\n      [52, \"Mp-E2\"],\n      [53, \"Mp-F2\"],\n      [55, \"Mp-G2\"],\n      [56, \"Mp-G#2\"],\n      [57, \"Mp-A2\"],\n      [58, \"Mp-A#2\"],\n      [59, \"Mp-B2\"],\n      [60, \"Mp-C3\"],\n      [62, \"Mp-D3\"],\n      [64, \"Mp-E3\"],\n      [65, \"Mp-F3\"],\n      [67, \"Mp-G3\"],\n      [69, \"Mp-A3\"],\n      [71, \"Mp-B3\"],\n      [72, \"Mp-C4\"],\n      [74, \"Mp-D4\"],\n      [76, \"Mp-E4\"],\n      [77, \"Mp-F4\"],\n      [79, \"Mp-G4\"],\n      [80, \"Mp-G#4\"],\n      [81, \"Mp-A4\"],\n      [82, \"Mp-A#4\"],\n      [83, \"Mp-B4\"],\n      [85, \"Mp-C#5\"],\n      [86, \"Mp-D5\"],\n      [87, \"Mp-D#5\"],\n      [88, \"Mp-E5\"],\n      [89, \"Mp-F5\"],\n      [90, \"Mp-F#5\"],\n      [91, \"Mp-G5\"],\n      [92, \"Mp-G#5\"],\n      [93, \"Mp-A5\"],\n      [94, \"Mp-A#5\"],\n      [95, \"Mp-B5\"],\n      [96, \"Mp-C6\"],\n      [97, \"Mp-C#6\"],\n      [98, \"Mp-D6\"],\n      [99, \"Mp-D#6\"],\n      [100, \"PP-E6\"],\n      [101, \"Mp-F6\"],\n      [102, \"Mp-F#6\"],\n      [103, \"Mp-G6\"],\n      [104, \"Mp-G#6\"],\n      [105, \"Mp-A6\"],\n      [106, \"Mp-A#6\"],\n      [107, \"PP-B6\"],\n      [108, \"PP-C7\"],\n    ],\n  },\n  {\n    name: \"MF\",\n    vel_range: [85, 100],\n    samples: [\n      [23, \"Mf-B-1\"],\n      [27, \"Mf-D#0\"],\n      [29, \"Mf-F0\"],\n      [31, \"Mf-G0\"],\n      [33, \"Mf-A0\"],\n      [35, \"Mf-B0\"],\n      [37, \"Mf-C#1\"],\n      [38, \"Mf-D1\"],\n      [40, \"Mf-E1\"],\n      [41, \"Mf-F1\"],\n      [43, \"Mf-G1\"],\n      [45, \"Mf-A1\"],\n      [47, \"Mf-B1\"],\n      [48, \"Mf-C2\"],\n      [50, \"Mf-D2\"],\n      [52, \"Mf-E2\"],\n      [53, \"Mf-F2\"],\n      [55, \"Mf-G2\"],\n      [56, \"Mf-G#2\"],\n      [57, \"Mf-A2\"],\n      [58, \"Mf-A#2\"],\n      [59, \"Mf-B2\"],\n      [60, \"Mf-C3\"],\n      [62, \"Mf-D3\"],\n      [64, \"Mf-E3\"],\n      [65, \"Mf-F3\"],\n      [67, \"Mf-G3\"],\n      [69, \"Mf-A3\"],\n      [71, \"Mf-B3\"],\n      [72, \"Mf-C4\"],\n      [74, \"Mf-D4\"],\n      [76, \"Mf-E4\"],\n      [77, \"Mf-F4\"],\n      [79, \"Mf-G4\"],\n      [80, \"Mf-G#4\"],\n      [81, \"Mf-A4\"],\n      [82, \"Mf-A#4\"],\n      [83, \"Mf-B4\"],\n      [85, \"Mf-C#5\"],\n      [86, \"Mf-D5\"],\n      [87, \"Mf-D#5\"],\n      [88, \"Mf-E5\"],\n      [89, \"Mf-F5\"],\n      [90, \"Mf-F#5\"],\n      [91, \"Mf-G5\"],\n      [92, \"Mf-G#5\"],\n      [93, \"Mf-A5\"],\n      [94, \"Mf-A#5\"],\n      [95, \"Mf-B5\"],\n      [96, \"Mf-C6\"],\n      [97, \"Mf-C#6\"],\n      [98, \"Mf-D6\"],\n      [99, \"Mf-D#6\"],\n      [100, \"Mf-E6\"],\n      [101, \"Mf-F6\"],\n      [102, \"Mf-F#6\"],\n      [103, \"Mf-G6\"],\n      [104, \"Mf-G#6\"],\n      [105, \"Mf-A6\"],\n      [106, \"Mf-A#6\"],\n      [107, \"Mf-B6\"],\n      [108, \"PP-C7\"],\n    ],\n  },\n  {\n    name: \"FF\",\n    vel_range: [101, 127],\n    samples: [\n      [23, \"FF-B-1\"],\n      [27, \"FF-D#0\"],\n      [29, \"FF-F0\"],\n      [31, \"FF-G0\"],\n      [33, \"FF-A0\"],\n      [35, \"FF-B0\"],\n      [37, \"FF-C#1\"],\n      [38, \"FF-D1\"],\n      [40, \"FF-E1\"],\n      [41, \"FF-F1\"],\n      [43, \"FF-G1\"],\n      [45, \"FF-A1\"],\n      [47, \"FF-B1\"],\n      [48, \"FF-C2\"],\n      [50, \"FF-D2\"],\n      [52, \"FF-E2\"],\n      [53, \"FF-F2\"],\n      [55, \"FF-G2\"],\n      [56, \"FF-G#2\"],\n      [57, \"FF-A2\"],\n      [58, \"FF-A#2\"],\n      [59, \"FF-B2\"],\n      [60, \"FF-C3\"],\n      [62, \"FF-D3\"],\n      [64, \"FF-E3\"],\n      [65, \"FF-F3\"],\n      [67, \"FF-G3\"],\n      [69, \"FF-A3\"],\n      [71, \"FF-B3\"],\n      [72, \"FF-C4\"],\n      [74, \"FF-D4\"],\n      [76, \"FF-E4\"],\n      [77, \"FF-F4\"],\n      [79, \"FF-G4\"],\n      [80, \"FF-G#4\"],\n      [81, \"FF-A4\"],\n      [82, \"FF-A#4\"],\n      [83, \"FF-B4\"],\n      [85, \"FF-C#5\"],\n      [86, \"FF-D5\"],\n      [88, \"FF-E5\"],\n      [89, \"FF-F5\"],\n      [91, \"FF-G5\"],\n      [93, \"FF-A5\"],\n      [95, \"Mf-B5\"],\n      [96, \"Mf-C6\"],\n      [97, \"Mf-C#6\"],\n      [98, \"Mf-D6\"],\n      [99, \"Mf-D#6\"],\n      [100, \"Mf-E6\"],\n      [102, \"Mf-F#6\"],\n      [103, \"Mf-G6\"],\n      [104, \"Mf-G#6\"],\n      [105, \"Mf-A6\"],\n      [106, \"Mf-A#6\"],\n      [107, \"Mf-B6\"],\n      [108, \"Mf-C7\"],\n    ],\n  },\n];\n"],"names":["$0d19688bebdb26f8$var$_volume","$0d19688bebdb26f8$var$_sends","$0d19688bebdb26f8$var$_inserts","$0d19688bebdb26f8$var$_disconnect","$0d19688bebdb26f8$var$_unsubscribe","$0d19688bebdb26f8$var$_config","$0d19688bebdb26f8$var$_disconnected","$0d19688bebdb26f8$var$_items","$0d19688bebdb26f8$var$_config2","$0d19688bebdb26f8$var$_queue","$0d19688bebdb26f8$var$_intervalId","$0d19688bebdb26f8$var$_config3","$0d19688bebdb26f8$var$_disconnected2","$0d19688bebdb26f8$var$_stop","$0d19688bebdb26f8$var$_hasLoops","$0d19688bebdb26f8$var$_sampleToMidi","$0d19688bebdb26f8$var$sampleToMidi_fn","$0d19688bebdb26f8$var$__defProp","Object","defineProperty","$0d19688bebdb26f8$var$__defProps","defineProperties","$0d19688bebdb26f8$var$__getOwnPropDescs","getOwnPropertyDescriptors","$0d19688bebdb26f8$var$__getOwnPropSymbols","getOwnPropertySymbols","$0d19688bebdb26f8$var$__hasOwnProp","prototype","hasOwnProperty","$0d19688bebdb26f8$var$__propIsEnum","propertyIsEnumerable","$0d19688bebdb26f8$var$__defNormalProp","obj","key","value","enumerable","configurable","writable","$0d19688bebdb26f8$var$__spreadValues","a","b","prop","call","$0d19688bebdb26f8$var$__spreadProps","$0d19688bebdb26f8$var$__accessCheck","member","msg","has","TypeError","$0d19688bebdb26f8$var$__privateGet","getter","get","$0d19688bebdb26f8$var$__privateAdd","WeakSet","add","set","$0d19688bebdb26f8$var$__privateSet","setter","$0d19688bebdb26f8$var$__privateMethod","method","$0d19688bebdb26f8$var$__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","x","done","then","apply","$0d19688bebdb26f8$var$connectSerial","nodes","_nodes","filter","reduce","left","output","right","input","connect","disconnect","$0d19688bebdb26f8$var$midiVelToGain","vel","$0d19688bebdb26f8$var$Channel","constructor","context","options","_a","_b","_c","destination","volume","volumeToGain","createGain","$0d19688bebdb26f8$var$createControl","initialValue","current","listeners","Set","subscribe","listener","delete","forEach","setVolume","volume2","gain","addInsert","effect","Error","push","addEffect","name","mixValue","mix","sendEffect","send","find","send2","console","warn","WeakMap","$0d19688bebdb26f8$var$SortedQueue","compare","item","len","length","index","mid","Math","floor","splice","pop","shift","peek","removeAll","predicate","clear","size","$0d19688bebdb26f8$var$compose","$0d19688bebdb26f8$var$QueuedPlayer","player","$0d19688bebdb26f8$var$getConfig","config","scheduleLookaheadMs","scheduleIntervalMs","onStart","onEnded","time","buffers","isRunning","start","sample","now","currentTime","startAt","lookAhead","setInterval","nextTick","sample2","clearInterval","stop","stopId","note","$0d19688bebdb26f8$var$SamplePlayer","velocityToGain","$0d19688bebdb26f8$var$createTrigger","trigger","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","unsubscribe","buffer","source","createBufferSource","cents","detune","playbackRate","pow","lpfCutoffHz","lpf","createBiquadFilter","type","frequency","velocity","loop","loopStart","loopEnd","duration","decay","startDecay","$0d19688bebdb26f8$var$createDecayEnvelope","envelopeTime","stopAt","envelope","cancelScheduledValues","envelopeAt","setValueAtTime","linearRampToValueAtTime","decayTime","gainCompensation","gainOffset","cleanup","event","cb","onended","_a2","max","keys","connected","$0d19688bebdb26f8$var$DefaultPlayer","channel","$0d19688bebdb26f8$var$findFirstSupportedFormat","formats","document","audio","createElement","i","format","canPlay","canPlayType","canPlay2","$0d19688bebdb26f8$export$7fd566d5ad2998a9","fetch","url","$0d19688bebdb26f8$var$toMidi","$0d19688bebdb26f8$var$noteNameToMidi","m","REGEX","exec","letter","toUpperCase","acc","alt","oct","charCodeAt","freeze","meta","global","groups","$0d19688bebdb26f8$export$508265175ec7f40e","$0d19688bebdb26f8$var$getSoundfontConfig","instrument","instrumentUrl","kit","storage","extraGain","loadLoopData","loopDataUrl","startsWith","$0d19688bebdb26f8$var$gleitzKitUrl","$0d19688bebdb26f8$var$getGoldstSoundfontLoopsUrl","group","$0d19688bebdb26f8$var$createEmptyRegionGroup","regions","loader","$0d19688bebdb26f8$var$soundfontLoader","loopsUrl","loadInstrument","$0d19688bebdb26f8$var$soundfontInstrumentLoader","json","$0d19688bebdb26f8$var$midiJsToJson","header","indexOf","end","lastIndexOf","JSON","parse","slice","text","noteNames","all","map","noteName","audioBase64","midi","audioData","$0d19688bebdb26f8$var$base64ToArrayBuffer","base64","decoded","window","atob","bytes","Uint8Array","decodeAudioData","sampleName","midiPitch","$0d19688bebdb26f8$var$spreadRegions","sort","midiLow","midiHigh","prev","curr","_","loops","$0d19688bebdb26f8$var$fetchSoundfontLoopData","req","status","raw","loopData","offsets","err","region","load","hasLoops","loaded","found","$0d19688bebdb26f8$var$findFirstSampleInRegions","seqNumber","$0d19688bebdb26f8$var$findSampleInRegion","seqNum","defaults","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_A","velLow","velHigh","seqLength","currentSeq","seqPosition","semitones","regionGainOffset","decibels","sampleGainOffset","tune","$0d19688bebdb26f8$export$589c152416f2342b","assign","baseUrl","$0d19688bebdb26f8$var$splendidGrandPianoLoader","notesToLoad","layers","$0d19688bebdb26f8$export$fdca3ba65b5cceec","layer","vel_range","velocityRange","samples","notes","includes","_0","$0d19688bebdb26f8$var$loadAudioBuffer","replace","response","arrayBuffer","error","sampleOrNote","layerIdx","findIndex","layer2","$0d19688bebdb26f8$var$findNearestMidiInLayer","prefix","cutoff","$6b17f08f738443dc$var$context","AudioContext","$6b17f08f738443dc$var$marimba","$6b17f08f738443dc$var$piano","$6b17f08f738443dc$var$flute","$6b17f08f738443dc$var$cello","getElementById","onclick","resume","setTimeout","_config","_disconnected","getConfig","urls","depth","INSTRUMENTS","SfzInstrumentLoader","mode","scope","BASE_URL"],"version":3,"file":"index.be3d89a1.js.map"}